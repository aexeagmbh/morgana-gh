{"version":3,"sources":["vendor/ember-cli/app-prefix.js","morgana/adapters/application.js","morgana/adapters/ax-company.js","morgana/adapters/bulk-upload-general.js","morgana/adapters/bulk-upload.js","morgana/adapters/content-project-export.js","morgana/adapters/content-request.js","morgana/adapters/django-rest-file.js","morgana/adapters/image-request.js","morgana/adapters/text-request.js","morgana/adapters/thing.js","morgana/adapters/user-check-list.js","morgana/adapters/user.js","morgana/app.js","morgana/authenticators/myax.js","morgana/authorizers/myax.js","morgana/components/button-with-loader.js","morgana/controllers/application.js","morgana/controllers/content-project/bulk-upload/upload.js","morgana/controllers/content-project/content-project-exports/index.js","morgana/controllers/content-project/delete.js","morgana/controllers/content-project/edit.js","morgana/controllers/content-project/index.js","morgana/controllers/content-project/thing-type/thing-new.js","morgana/controllers/content-project/thing-type/thing/delete.js","morgana/controllers/content-project/thing-type/thing/edit.js","morgana/controllers/content-project/thing-type/thing/index.js","morgana/controllers/content-project/thing-type/thing/server-side-model-field-detail.js","morgana/controllers/content-projects/index.js","morgana/controllers/credits/credit-history-element.js","morgana/controllers/credits/credit-history.js","morgana/controllers/credits/invoices.js","morgana/controllers/download-exports/index.js","morgana/controllers/engine-configuration/content-project/new.js","morgana/controllers/engine-configuration/index.js","morgana/controllers/engine-configurations/contact.js","morgana/controllers/engine-configurations/index.js","morgana/controllers/eventlog/index.js","morgana/controllers/flash-messages.js","morgana/controllers/home/index.js","morgana/controllers/login.js","morgana/controllers/navigation.js","morgana/controllers/profile/edit-company.js","morgana/controllers/profile/edit-user.js","morgana/controllers/profile/index.js","morgana/controllers/tags/index.js","morgana/controllers/tags/thing-requirement-level-detail.js","morgana/controllers/tags/upload.js","morgana/controllers/things/index.js","morgana/controllers/user-check-list/index.js","morgana/helpers/can-do.js","morgana/helpers/capitalize-string.js","morgana/helpers/field-detail.js","morgana/helpers/flash-messages.js","morgana/helpers/pluralize-string.js","morgana/helpers/text-with-errors.js","morgana/initializers/ember-moment.js","morgana/initializers/export-application-global.js","morgana/initializers/flash-messages.js","morgana/initializers/myax.js","morgana/initializers/server-side-model.js","morgana/initializers/simple-auth.js","morgana/mixins/django-rest-file-adapter.js","morgana/mixins/flash-message.js","morgana/mixins/flash-messages-route.js","morgana/mixins/jira-report.js","morgana/mixins/loading-stages-controller.js","morgana/mixins/loading-stages-route.js","morgana/mixins/pagination.js","morgana/mixins/permissions.js","morgana/mixins/server-side-field-error.js","morgana/mixins/server-side-model-adapter.js","morgana/mixins/server-side-model-fields.js","morgana/mixins/server-side-model-serializer.js","morgana/mixins/server-side-model-store.js","morgana/models/bulk-upload-general.js","morgana/models/bulk-upload.js","morgana/models/category.js","morgana/models/content-project-export.js","morgana/models/content-project.js","morgana/models/content-request.js","morgana/models/credit-history.js","morgana/models/engine-configuration-status.js","morgana/models/engine-configuration.js","morgana/models/engine-configurations-contact.js","morgana/models/engine-content-type-category.js","morgana/models/eventlog.js","morgana/models/field-requirement-level-data.js","morgana/models/image-request.js","morgana/models/invoice.js","morgana/models/language.js","morgana/models/model-field-choice.js","morgana/models/requirement-level-status.js","morgana/models/tag.js","morgana/models/text-request.js","morgana/models/thing.js","morgana/models/user-check-list.js","morgana/models/user.js","morgana/router.js","morgana/routes/application.js","morgana/routes/content-project.js","morgana/routes/content-project/bulk-upload.js","morgana/routes/content-project/bulk-upload/upload.js","morgana/routes/content-project/content-project-exports.js","morgana/routes/content-project/content-project-exports/index.js","morgana/routes/content-project/delete.js","morgana/routes/content-project/edit.js","morgana/routes/content-project/index.js","morgana/routes/content-project/thing-type.js","morgana/routes/content-project/thing-type/thing-new.js","morgana/routes/content-project/thing-type/thing.js","morgana/routes/content-project/thing-type/thing/delete.js","morgana/routes/content-project/thing-type/thing/edit.js","morgana/routes/content-project/thing-type/thing/index.js","morgana/routes/content-projects.js","morgana/routes/credits/index.js","morgana/routes/download-exports.js","morgana/routes/download-exports/index.js","morgana/routes/engine-configuration.js","morgana/routes/engine-configuration/content-project.js","morgana/routes/engine-configuration/content-project/new.js","morgana/routes/engine-configuration/index.js","morgana/routes/engine-configurations.js","morgana/routes/engine-configurations/contact.js","morgana/routes/engine-configurations/index.js","morgana/routes/eventlog.js","morgana/routes/eventlog/index.js","morgana/routes/home.js","morgana/routes/home/index.js","morgana/routes/login.js","morgana/routes/profile.js","morgana/routes/profile/edit-company.js","morgana/routes/profile/edit-user.js","morgana/routes/profile/index.js","morgana/routes/tags.js","morgana/routes/tags/index.js","morgana/routes/tags/upload.js","morgana/serializers/application.js","morgana/serializers/content-request.js","morgana/serializers/eventlog.js","morgana/serializers/image-request.js","morgana/serializers/text-request.js","morgana/serializers/thing.js","morgana/serializers/user-check-list.js","morgana/store.js","morgana/templates/application.js","morgana/templates/components/button-with-loader.js","morgana/templates/content-project.js","morgana/templates/content-project/-form-fields.js","morgana/templates/content-project/bulk-upload.js","morgana/templates/content-project/bulk-upload/upload.js","morgana/templates/content-project/content-project-exports.js","morgana/templates/content-project/content-project-exports/-content-project-export-list.js","morgana/templates/content-project/content-project-exports/index.js","morgana/templates/content-project/delete.js","morgana/templates/content-project/edit.js","morgana/templates/content-project/index.js","morgana/templates/content-project/thing-type.js","morgana/templates/content-project/thing-type/thing-new.js","morgana/templates/content-project/thing-type/thing.js","morgana/templates/content-project/thing-type/thing/-server-side-model-form-field-container.js","morgana/templates/content-project/thing-type/thing/-server-side-model-form-fields.js","morgana/templates/content-project/thing-type/thing/delete.js","morgana/templates/content-project/thing-type/thing/edit.js","morgana/templates/content-project/thing-type/thing/index.js","morgana/templates/content-projects.js","morgana/templates/content-projects/-content-project-list.js","morgana/templates/content-projects/index.js","morgana/templates/credits/-credit-history.js","morgana/templates/credits/-invoices.js","morgana/templates/credits/credit-history-element.js","morgana/templates/credits/index.js","morgana/templates/download-exports.js","morgana/templates/download-exports/index.js","morgana/templates/engine-configuration.js","morgana/templates/engine-configuration/content-project.js","morgana/templates/engine-configuration/content-project/new.js","morgana/templates/engine-configuration/index.js","morgana/templates/engine-configurations.js","morgana/templates/engine-configurations/contact.js","morgana/templates/engine-configurations/index.js","morgana/templates/eventlog.js","morgana/templates/eventlog/-eventlog-list.js","morgana/templates/eventlog/index.js","morgana/templates/home.js","morgana/templates/home/-user-check-list.js","morgana/templates/home/_account_status.js","morgana/templates/home/index.js","morgana/templates/loading.js","morgana/templates/login.js","morgana/templates/navigation.js","morgana/templates/profile.js","morgana/templates/profile/-server-side-model-form-field-container.js","morgana/templates/profile/-server-side-model-form-fields.js","morgana/templates/profile/edit-company.js","morgana/templates/profile/edit-user.js","morgana/templates/profile/index.js","morgana/templates/tags.js","morgana/templates/tags/-filtered-thing-list.js","morgana/templates/tags/-thing-requirement-level-detail-row-data.js","morgana/templates/tags/index.js","morgana/templates/tags/thing-requirement-level-detail.js","morgana/templates/tags/upload.js","morgana/templates/thing.js","morgana/templates/things/-loading.js","morgana/templates/things/_thing_list.js","morgana/templates/things/index.js","morgana/templates/views/table-footer.js","morgana/tests/adapters/application.jshint.js","morgana/tests/adapters/ax-company.jshint.js","morgana/tests/adapters/bulk-upload-general.jshint.js","morgana/tests/adapters/bulk-upload.jshint.js","morgana/tests/adapters/content-project-export.jshint.js","morgana/tests/adapters/content-request.jshint.js","morgana/tests/adapters/django-rest-file.jshint.js","morgana/tests/adapters/image-request.jshint.js","morgana/tests/adapters/text-request.jshint.js","morgana/tests/adapters/thing.jshint.js","morgana/tests/adapters/user-check-list.jshint.js","morgana/tests/adapters/user.jshint.js","morgana/tests/app.jshint.js","morgana/tests/authenticators/myax.jshint.js","morgana/tests/authorizers/myax.jshint.js","morgana/tests/components/button-with-loader.jshint.js","morgana/tests/controllers/application.jshint.js","morgana/tests/controllers/content-project/bulk-upload/upload.jshint.js","morgana/tests/controllers/content-project/content-project-exports/index.jshint.js","morgana/tests/controllers/content-project/delete.jshint.js","morgana/tests/controllers/content-project/edit.jshint.js","morgana/tests/controllers/content-project/index.jshint.js","morgana/tests/controllers/content-project/thing-type/thing-new.jshint.js","morgana/tests/controllers/content-project/thing-type/thing/delete.jshint.js","morgana/tests/controllers/content-project/thing-type/thing/edit.jshint.js","morgana/tests/controllers/content-project/thing-type/thing/index.jshint.js","morgana/tests/controllers/content-project/thing-type/thing/server-side-model-field-detail.jshint.js","morgana/tests/controllers/content-projects/index.jshint.js","morgana/tests/controllers/credits/credit-history-element.jshint.js","morgana/tests/controllers/credits/credit-history.jshint.js","morgana/tests/controllers/credits/invoices.jshint.js","morgana/tests/controllers/download-exports/index.jshint.js","morgana/tests/controllers/engine-configuration/content-project/new.jshint.js","morgana/tests/controllers/engine-configuration/index.jshint.js","morgana/tests/controllers/engine-configurations/contact.jshint.js","morgana/tests/controllers/engine-configurations/index.jshint.js","morgana/tests/controllers/eventlog/index.jshint.js","morgana/tests/controllers/flash-messages.jshint.js","morgana/tests/controllers/home/index.jshint.js","morgana/tests/controllers/login.jshint.js","morgana/tests/controllers/navigation.jshint.js","morgana/tests/controllers/profile/edit-company.jshint.js","morgana/tests/controllers/profile/edit-user.jshint.js","morgana/tests/controllers/profile/index.jshint.js","morgana/tests/controllers/tags/index.jshint.js","morgana/tests/controllers/tags/thing-requirement-level-detail.jshint.js","morgana/tests/controllers/tags/upload.jshint.js","morgana/tests/controllers/things/index.jshint.js","morgana/tests/controllers/user-check-list/index.jshint.js","morgana/tests/helpers/can-do.jshint.js","morgana/tests/helpers/capitalize-string.jshint.js","morgana/tests/helpers/field-detail.jshint.js","morgana/tests/helpers/flash-messages.jshint.js","morgana/tests/helpers/pluralize-string.jshint.js","morgana/tests/helpers/resolver.js","morgana/tests/helpers/resolver.jshint.js","morgana/tests/helpers/start-app.js","morgana/tests/helpers/start-app.jshint.js","morgana/tests/helpers/text-with-errors.jshint.js","morgana/tests/initializers/flash-messages.jshint.js","morgana/tests/initializers/myax.jshint.js","morgana/tests/initializers/server-side-model.jshint.js","morgana/tests/mixins/django-rest-file-adapter.jshint.js","morgana/tests/mixins/flash-message.jshint.js","morgana/tests/mixins/flash-messages-route.jshint.js","morgana/tests/mixins/jira-report.jshint.js","morgana/tests/mixins/loading-stages-controller.jshint.js","morgana/tests/mixins/loading-stages-route.jshint.js","morgana/tests/mixins/pagination.jshint.js","morgana/tests/mixins/permissions.jshint.js","morgana/tests/mixins/server-side-field-error.jshint.js","morgana/tests/mixins/server-side-model-adapter.jshint.js","morgana/tests/mixins/server-side-model-fields.jshint.js","morgana/tests/mixins/server-side-model-serializer.jshint.js","morgana/tests/mixins/server-side-model-store.jshint.js","morgana/tests/models/bulk-upload-general.jshint.js","morgana/tests/models/bulk-upload.jshint.js","morgana/tests/models/category.jshint.js","morgana/tests/models/content-project-export.jshint.js","morgana/tests/models/content-project.jshint.js","morgana/tests/models/content-request.jshint.js","morgana/tests/models/credit-history.jshint.js","morgana/tests/models/engine-configuration-status.jshint.js","morgana/tests/models/engine-configuration.jshint.js","morgana/tests/models/engine-configurations-contact.jshint.js","morgana/tests/models/engine-content-type-category.jshint.js","morgana/tests/models/eventlog.jshint.js","morgana/tests/models/field-requirement-level-data.jshint.js","morgana/tests/models/image-request.jshint.js","morgana/tests/models/invoice.jshint.js","morgana/tests/models/language.jshint.js","morgana/tests/models/model-field-choice.jshint.js","morgana/tests/models/requirement-level-status.jshint.js","morgana/tests/models/tag.jshint.js","morgana/tests/models/text-request.jshint.js","morgana/tests/models/thing.jshint.js","morgana/tests/models/user-check-list.jshint.js","morgana/tests/models/user.jshint.js","morgana/tests/router.jshint.js","morgana/tests/routes/application.jshint.js","morgana/tests/routes/content-project.jshint.js","morgana/tests/routes/content-project/bulk-upload.jshint.js","morgana/tests/routes/content-project/bulk-upload/upload.jshint.js","morgana/tests/routes/content-project/content-project-exports.jshint.js","morgana/tests/routes/content-project/content-project-exports/index.jshint.js","morgana/tests/routes/content-project/delete.jshint.js","morgana/tests/routes/content-project/edit.jshint.js","morgana/tests/routes/content-project/index.jshint.js","morgana/tests/routes/content-project/thing-type.jshint.js","morgana/tests/routes/content-project/thing-type/thing-new.jshint.js","morgana/tests/routes/content-project/thing-type/thing.jshint.js","morgana/tests/routes/content-project/thing-type/thing/delete.jshint.js","morgana/tests/routes/content-project/thing-type/thing/edit.jshint.js","morgana/tests/routes/content-project/thing-type/thing/index.jshint.js","morgana/tests/routes/content-projects.jshint.js","morgana/tests/routes/credits/index.jshint.js","morgana/tests/routes/download-exports.jshint.js","morgana/tests/routes/download-exports/index.jshint.js","morgana/tests/routes/engine-configuration.jshint.js","morgana/tests/routes/engine-configuration/content-project.jshint.js","morgana/tests/routes/engine-configuration/content-project/new.jshint.js","morgana/tests/routes/engine-configuration/index.jshint.js","morgana/tests/routes/engine-configurations.jshint.js","morgana/tests/routes/engine-configurations/contact.jshint.js","morgana/tests/routes/engine-configurations/index.jshint.js","morgana/tests/routes/eventlog.jshint.js","morgana/tests/routes/eventlog/index.jshint.js","morgana/tests/routes/home.jshint.js","morgana/tests/routes/home/index.jshint.js","morgana/tests/routes/login.jshint.js","morgana/tests/routes/profile.jshint.js","morgana/tests/routes/profile/edit-company.jshint.js","morgana/tests/routes/profile/edit-user.jshint.js","morgana/tests/routes/profile/index.jshint.js","morgana/tests/routes/tags.jshint.js","morgana/tests/routes/tags/index.jshint.js","morgana/tests/routes/tags/upload.jshint.js","morgana/tests/serializers/application.jshint.js","morgana/tests/serializers/content-request.jshint.js","morgana/tests/serializers/eventlog.jshint.js","morgana/tests/serializers/image-request.jshint.js","morgana/tests/serializers/text-request.jshint.js","morgana/tests/serializers/thing.jshint.js","morgana/tests/serializers/user-check-list.jshint.js","morgana/tests/store.jshint.js","morgana/tests/test-helper.js","morgana/tests/test-helper.jshint.js","morgana/tests/transforms/json-string-parsed.jshint.js","morgana/tests/transforms/upload-file.jshint.js","morgana/tests/unit/adapters/application-test.js","morgana/tests/unit/adapters/application-test.jshint.js","morgana/tests/unit/adapters/ax-company-test.js","morgana/tests/unit/adapters/ax-company-test.jshint.js","morgana/tests/unit/adapters/bulk-upload-general-test.js","morgana/tests/unit/adapters/bulk-upload-general-test.jshint.js","morgana/tests/unit/adapters/bulk-upload-test.js","morgana/tests/unit/adapters/bulk-upload-test.jshint.js","morgana/tests/unit/adapters/content-project-export-test.js","morgana/tests/unit/adapters/content-project-export-test.jshint.js","morgana/tests/unit/adapters/content-request-test.js","morgana/tests/unit/adapters/content-request-test.jshint.js","morgana/tests/unit/adapters/django-rest-file-test.js","morgana/tests/unit/adapters/django-rest-file-test.jshint.js","morgana/tests/unit/adapters/image-request-test.js","morgana/tests/unit/adapters/image-request-test.jshint.js","morgana/tests/unit/adapters/text-request-test.js","morgana/tests/unit/adapters/text-request-test.jshint.js","morgana/tests/unit/adapters/thing-test.js","morgana/tests/unit/adapters/thing-test.jshint.js","morgana/tests/unit/adapters/user-check-list-test.js","morgana/tests/unit/adapters/user-check-list-test.jshint.js","morgana/tests/unit/adapters/user-test.js","morgana/tests/unit/adapters/user-test.jshint.js","morgana/tests/unit/components/button-with-loader-test.js","morgana/tests/unit/components/button-with-loader-test.jshint.js","morgana/tests/unit/controllers/application-test.js","morgana/tests/unit/controllers/application-test.jshint.js","morgana/tests/unit/controllers/content-project/bulk-upload/upload-test.js","morgana/tests/unit/controllers/content-project/bulk-upload/upload-test.jshint.js","morgana/tests/unit/controllers/content-project/content-project-exports/index-test.js","morgana/tests/unit/controllers/content-project/content-project-exports/index-test.jshint.js","morgana/tests/unit/controllers/content-project/delete-test.js","morgana/tests/unit/controllers/content-project/delete-test.jshint.js","morgana/tests/unit/controllers/content-project/edit-test.js","morgana/tests/unit/controllers/content-project/edit-test.jshint.js","morgana/tests/unit/controllers/content-project/index-test.js","morgana/tests/unit/controllers/content-project/index-test.jshint.js","morgana/tests/unit/controllers/content-project/thing-type/thing-new-test.js","morgana/tests/unit/controllers/content-project/thing-type/thing-new-test.jshint.js","morgana/tests/unit/controllers/content-project/thing-type/thing/delete-test.js","morgana/tests/unit/controllers/content-project/thing-type/thing/delete-test.jshint.js","morgana/tests/unit/controllers/content-project/thing-type/thing/edit-test.js","morgana/tests/unit/controllers/content-project/thing-type/thing/edit-test.jshint.js","morgana/tests/unit/controllers/content-project/thing-type/thing/index-test.js","morgana/tests/unit/controllers/content-project/thing-type/thing/index-test.jshint.js","morgana/tests/unit/controllers/content-project/thing-type/thing/server-side-model-field-detail-test.js","morgana/tests/unit/controllers/content-project/thing-type/thing/server-side-model-field-detail-test.jshint.js","morgana/tests/unit/controllers/content-projects/index-test.js","morgana/tests/unit/controllers/content-projects/index-test.jshint.js","morgana/tests/unit/controllers/credits/credit-history-element-test.js","morgana/tests/unit/controllers/credits/credit-history-element-test.jshint.js","morgana/tests/unit/controllers/credits/credit-history-test.js","morgana/tests/unit/controllers/credits/credit-history-test.jshint.js","morgana/tests/unit/controllers/credits/invoices-test.js","morgana/tests/unit/controllers/credits/invoices-test.jshint.js","morgana/tests/unit/controllers/download-exports/index-test.js","morgana/tests/unit/controllers/download-exports/index-test.jshint.js","morgana/tests/unit/controllers/engine-configuration/content-project/new-test.js","morgana/tests/unit/controllers/engine-configuration/content-project/new-test.jshint.js","morgana/tests/unit/controllers/engine-configuration/index-test.js","morgana/tests/unit/controllers/engine-configuration/index-test.jshint.js","morgana/tests/unit/controllers/engine-configurations/contact-test.js","morgana/tests/unit/controllers/engine-configurations/contact-test.jshint.js","morgana/tests/unit/controllers/engine-configurations/index-test.js","morgana/tests/unit/controllers/engine-configurations/index-test.jshint.js","morgana/tests/unit/controllers/eventlog/index-test.js","morgana/tests/unit/controllers/eventlog/index-test.jshint.js","morgana/tests/unit/controllers/flash-messages-test.js","morgana/tests/unit/controllers/flash-messages-test.jshint.js","morgana/tests/unit/controllers/home/index-test.js","morgana/tests/unit/controllers/home/index-test.jshint.js","morgana/tests/unit/controllers/login-test.js","morgana/tests/unit/controllers/login-test.jshint.js","morgana/tests/unit/controllers/navigation-test.js","morgana/tests/unit/controllers/navigation-test.jshint.js","morgana/tests/unit/controllers/profile/edit-company-test.js","morgana/tests/unit/controllers/profile/edit-company-test.jshint.js","morgana/tests/unit/controllers/profile/edit-user-test.js","morgana/tests/unit/controllers/profile/edit-user-test.jshint.js","morgana/tests/unit/controllers/profile/index-test.js","morgana/tests/unit/controllers/profile/index-test.jshint.js","morgana/tests/unit/controllers/tags/index-test.js","morgana/tests/unit/controllers/tags/index-test.jshint.js","morgana/tests/unit/controllers/tags/thing-requirement-level-detail-test.js","morgana/tests/unit/controllers/tags/thing-requirement-level-detail-test.jshint.js","morgana/tests/unit/controllers/tags/upload-test.js","morgana/tests/unit/controllers/tags/upload-test.jshint.js","morgana/tests/unit/controllers/things/index-test.js","morgana/tests/unit/controllers/things/index-test.jshint.js","morgana/tests/unit/controllers/user-check-list/index-test.js","morgana/tests/unit/controllers/user-check-list/index-test.jshint.js","morgana/tests/unit/helpers/can-do-test.js","morgana/tests/unit/helpers/can-do-test.jshint.js","morgana/tests/unit/helpers/capitalize-string-test.js","morgana/tests/unit/helpers/capitalize-string-test.jshint.js","morgana/tests/unit/helpers/field-detail-test.js","morgana/tests/unit/helpers/field-detail-test.jshint.js","morgana/tests/unit/helpers/flash-messages-test.js","morgana/tests/unit/helpers/flash-messages-test.jshint.js","morgana/tests/unit/helpers/text-with-errors-test.js","morgana/tests/unit/helpers/text-with-errors-test.jshint.js","morgana/tests/unit/initializers/flash-messages-test.js","morgana/tests/unit/initializers/flash-messages-test.jshint.js","morgana/tests/unit/initializers/myax-test.js","morgana/tests/unit/initializers/myax-test.jshint.js","morgana/tests/unit/initializers/server-side-model-test.js","morgana/tests/unit/initializers/server-side-model-test.jshint.js","morgana/tests/unit/mixins/django-rest-file-adapter-test.js","morgana/tests/unit/mixins/django-rest-file-adapter-test.jshint.js","morgana/tests/unit/mixins/flash-message-test.js","morgana/tests/unit/mixins/flash-message-test.jshint.js","morgana/tests/unit/mixins/flash-messages-route-test.js","morgana/tests/unit/mixins/flash-messages-route-test.jshint.js","morgana/tests/unit/mixins/jira-report-test.js","morgana/tests/unit/mixins/jira-report-test.jshint.js","morgana/tests/unit/mixins/loading-stages-controller-test.js","morgana/tests/unit/mixins/loading-stages-controller-test.jshint.js","morgana/tests/unit/mixins/loading-stages-route-test.js","morgana/tests/unit/mixins/loading-stages-route-test.jshint.js","morgana/tests/unit/mixins/pagination-test.js","morgana/tests/unit/mixins/pagination-test.jshint.js","morgana/tests/unit/mixins/permissions-test.js","morgana/tests/unit/mixins/permissions-test.jshint.js","morgana/tests/unit/mixins/server-side-field-error-test.js","morgana/tests/unit/mixins/server-side-field-error-test.jshint.js","morgana/tests/unit/mixins/server-side-model-adapter-test.js","morgana/tests/unit/mixins/server-side-model-adapter-test.jshint.js","morgana/tests/unit/mixins/server-side-model-fields-test.js","morgana/tests/unit/mixins/server-side-model-fields-test.jshint.js","morgana/tests/unit/mixins/server-side-model-serializer-test.js","morgana/tests/unit/mixins/server-side-model-serializer-test.jshint.js","morgana/tests/unit/mixins/server-side-model-store-test.js","morgana/tests/unit/mixins/server-side-model-store-test.jshint.js","morgana/tests/unit/models/bulk-upload-general-test.js","morgana/tests/unit/models/bulk-upload-general-test.jshint.js","morgana/tests/unit/models/bulk-upload-test.js","morgana/tests/unit/models/bulk-upload-test.jshint.js","morgana/tests/unit/models/category-test.js","morgana/tests/unit/models/category-test.jshint.js","morgana/tests/unit/models/content-project-export-test.js","morgana/tests/unit/models/content-project-export-test.jshint.js","morgana/tests/unit/models/content-project-test.js","morgana/tests/unit/models/content-project-test.jshint.js","morgana/tests/unit/models/content-request-test.js","morgana/tests/unit/models/content-request-test.jshint.js","morgana/tests/unit/models/credit-history-test.js","morgana/tests/unit/models/credit-history-test.jshint.js","morgana/tests/unit/models/engine-configuration-status-test.js","morgana/tests/unit/models/engine-configuration-status-test.jshint.js","morgana/tests/unit/models/engine-configuration-test.js","morgana/tests/unit/models/engine-configuration-test.jshint.js","morgana/tests/unit/models/engine-configurations-contact-test.js","morgana/tests/unit/models/engine-configurations-contact-test.jshint.js","morgana/tests/unit/models/engine-content-type-category-test.js","morgana/tests/unit/models/engine-content-type-category-test.jshint.js","morgana/tests/unit/models/eventlog-test.js","morgana/tests/unit/models/eventlog-test.jshint.js","morgana/tests/unit/models/field-requirement-level-data-test.js","morgana/tests/unit/models/field-requirement-level-data-test.jshint.js","morgana/tests/unit/models/image-request-test.js","morgana/tests/unit/models/image-request-test.jshint.js","morgana/tests/unit/models/invoice-test.js","morgana/tests/unit/models/invoice-test.jshint.js","morgana/tests/unit/models/language-test.js","morgana/tests/unit/models/language-test.jshint.js","morgana/tests/unit/models/model-field-choice-test.js","morgana/tests/unit/models/model-field-choice-test.jshint.js","morgana/tests/unit/models/requirement-level-status-test.js","morgana/tests/unit/models/requirement-level-status-test.jshint.js","morgana/tests/unit/models/tag-test.js","morgana/tests/unit/models/tag-test.jshint.js","morgana/tests/unit/models/text-request-test.js","morgana/tests/unit/models/text-request-test.jshint.js","morgana/tests/unit/models/thing-test.js","morgana/tests/unit/models/thing-test.jshint.js","morgana/tests/unit/models/user-check-list-test.js","morgana/tests/unit/models/user-check-list-test.jshint.js","morgana/tests/unit/models/user-test.js","morgana/tests/unit/models/user-test.jshint.js","morgana/tests/unit/routes/content-project-test.js","morgana/tests/unit/routes/content-project-test.jshint.js","morgana/tests/unit/routes/content-project/bulk-upload-test.js","morgana/tests/unit/routes/content-project/bulk-upload-test.jshint.js","morgana/tests/unit/routes/content-project/bulk-upload/upload-test.js","morgana/tests/unit/routes/content-project/bulk-upload/upload-test.jshint.js","morgana/tests/unit/routes/content-project/content-project-exports-test.js","morgana/tests/unit/routes/content-project/content-project-exports-test.jshint.js","morgana/tests/unit/routes/content-project/content-project-exports/index-test.js","morgana/tests/unit/routes/content-project/content-project-exports/index-test.jshint.js","morgana/tests/unit/routes/content-project/delete-test.js","morgana/tests/unit/routes/content-project/delete-test.jshint.js","morgana/tests/unit/routes/content-project/edit-test.js","morgana/tests/unit/routes/content-project/edit-test.jshint.js","morgana/tests/unit/routes/content-project/index-test.js","morgana/tests/unit/routes/content-project/index-test.jshint.js","morgana/tests/unit/routes/content-project/thing-type-test.js","morgana/tests/unit/routes/content-project/thing-type-test.jshint.js","morgana/tests/unit/routes/content-project/thing-type/thing-new-test.js","morgana/tests/unit/routes/content-project/thing-type/thing-new-test.jshint.js","morgana/tests/unit/routes/content-project/thing-type/thing-test.js","morgana/tests/unit/routes/content-project/thing-type/thing-test.jshint.js","morgana/tests/unit/routes/content-project/thing-type/thing/delete-test.js","morgana/tests/unit/routes/content-project/thing-type/thing/delete-test.jshint.js","morgana/tests/unit/routes/content-project/thing-type/thing/edit-test.js","morgana/tests/unit/routes/content-project/thing-type/thing/edit-test.jshint.js","morgana/tests/unit/routes/content-project/thing-type/thing/index-test.js","morgana/tests/unit/routes/content-project/thing-type/thing/index-test.jshint.js","morgana/tests/unit/routes/content-projects-test.js","morgana/tests/unit/routes/content-projects-test.jshint.js","morgana/tests/unit/routes/credits/index-test.js","morgana/tests/unit/routes/credits/index-test.jshint.js","morgana/tests/unit/routes/download-exports-test.js","morgana/tests/unit/routes/download-exports-test.jshint.js","morgana/tests/unit/routes/download-exports/index-test.js","morgana/tests/unit/routes/download-exports/index-test.jshint.js","morgana/tests/unit/routes/engine-configuration-test.js","morgana/tests/unit/routes/engine-configuration-test.jshint.js","morgana/tests/unit/routes/engine-configuration/content-project-test.js","morgana/tests/unit/routes/engine-configuration/content-project-test.jshint.js","morgana/tests/unit/routes/engine-configuration/content-project/new-test.js","morgana/tests/unit/routes/engine-configuration/content-project/new-test.jshint.js","morgana/tests/unit/routes/engine-configuration/index-test.js","morgana/tests/unit/routes/engine-configuration/index-test.jshint.js","morgana/tests/unit/routes/engine-configurations-test.js","morgana/tests/unit/routes/engine-configurations-test.jshint.js","morgana/tests/unit/routes/engine-configurations/contact-test.js","morgana/tests/unit/routes/engine-configurations/contact-test.jshint.js","morgana/tests/unit/routes/engine-configurations/index-test.js","morgana/tests/unit/routes/engine-configurations/index-test.jshint.js","morgana/tests/unit/routes/eventlog-test.js","morgana/tests/unit/routes/eventlog-test.jshint.js","morgana/tests/unit/routes/eventlog/index-test.js","morgana/tests/unit/routes/eventlog/index-test.jshint.js","morgana/tests/unit/routes/home-test.js","morgana/tests/unit/routes/home-test.jshint.js","morgana/tests/unit/routes/home/index-test.js","morgana/tests/unit/routes/home/index-test.jshint.js","morgana/tests/unit/routes/login-test.js","morgana/tests/unit/routes/login-test.jshint.js","morgana/tests/unit/routes/profile-test.js","morgana/tests/unit/routes/profile-test.jshint.js","morgana/tests/unit/routes/profile/edit-company-test.js","morgana/tests/unit/routes/profile/edit-company-test.jshint.js","morgana/tests/unit/routes/profile/edit-user-test.js","morgana/tests/unit/routes/profile/edit-user-test.jshint.js","morgana/tests/unit/routes/profile/index-test.js","morgana/tests/unit/routes/profile/index-test.jshint.js","morgana/tests/unit/routes/tags-test.js","morgana/tests/unit/routes/tags-test.jshint.js","morgana/tests/unit/routes/tags/index-test.js","morgana/tests/unit/routes/tags/index-test.jshint.js","morgana/tests/unit/routes/tags/upload-test.js","morgana/tests/unit/routes/tags/upload-test.jshint.js","morgana/tests/unit/serializers/application-test.js","morgana/tests/unit/serializers/application-test.jshint.js","morgana/tests/unit/serializers/content-request-test.js","morgana/tests/unit/serializers/content-request-test.jshint.js","morgana/tests/unit/serializers/eventlog-test.js","morgana/tests/unit/serializers/eventlog-test.jshint.js","morgana/tests/unit/serializers/image-request-test.js","morgana/tests/unit/serializers/image-request-test.jshint.js","morgana/tests/unit/serializers/text-request-test.js","morgana/tests/unit/serializers/text-request-test.jshint.js","morgana/tests/unit/serializers/thing-test.js","morgana/tests/unit/serializers/thing-test.jshint.js","morgana/tests/unit/serializers/user-check-list-test.js","morgana/tests/unit/serializers/user-check-list-test.jshint.js","morgana/tests/unit/transforms/json-string-parsed-test.js","morgana/tests/unit/transforms/json-string-parsed-test.jshint.js","morgana/tests/unit/transforms/upload-file-test.js","morgana/tests/unit/transforms/upload-file-test.jshint.js","morgana/tests/unit/views/application-test.js","morgana/tests/unit/views/application-test.jshint.js","morgana/tests/unit/views/child-view-or-string-test.js","morgana/tests/unit/views/child-view-or-string-test.jshint.js","morgana/tests/unit/views/content-project/content-project-exports-test.js","morgana/tests/unit/views/content-project/content-project-exports-test.jshint.js","morgana/tests/unit/views/content-project/delete-test.js","morgana/tests/unit/views/content-project/delete-test.jshint.js","morgana/tests/unit/views/content-project/edit-test.js","morgana/tests/unit/views/content-project/edit-test.jshint.js","morgana/tests/unit/views/content-project/index-test.js","morgana/tests/unit/views/content-project/index-test.jshint.js","morgana/tests/unit/views/content-project/thing-type/thing-new-test.js","morgana/tests/unit/views/content-project/thing-type/thing-new-test.jshint.js","morgana/tests/unit/views/content-project/thing-type/thing/delete-test.js","morgana/tests/unit/views/content-project/thing-type/thing/delete-test.jshint.js","morgana/tests/unit/views/content-project/thing-type/thing/edit-test.js","morgana/tests/unit/views/content-project/thing-type/thing/edit-test.jshint.js","morgana/tests/unit/views/content-project/thing-type/thing/index-test.js","morgana/tests/unit/views/content-project/thing-type/thing/index-test.jshint.js","morgana/tests/unit/views/credits/index-test.js","morgana/tests/unit/views/credits/index-test.jshint.js","morgana/tests/unit/views/engine-configuration/content-project/new-test.js","morgana/tests/unit/views/engine-configuration/content-project/new-test.jshint.js","morgana/tests/unit/views/engine-configuration/index-test.js","morgana/tests/unit/views/engine-configuration/index-test.jshint.js","morgana/tests/unit/views/engine-configurations/contact/index-test.js","morgana/tests/unit/views/engine-configurations/contact/index-test.jshint.js","morgana/tests/unit/views/engine-configurations/index-test.js","morgana/tests/unit/views/engine-configurations/index-test.jshint.js","morgana/tests/unit/views/eventlog/index-test.js","morgana/tests/unit/views/eventlog/index-test.jshint.js","morgana/tests/unit/views/file-upload-field-test.js","morgana/tests/unit/views/file-upload-field-test.jshint.js","morgana/tests/unit/views/foundation-test.js","morgana/tests/unit/views/foundation-test.jshint.js","morgana/tests/unit/views/home/index-test.js","morgana/tests/unit/views/home/index-test.jshint.js","morgana/tests/unit/views/navigation-test.js","morgana/tests/unit/views/navigation-test.jshint.js","morgana/tests/unit/views/server-side-model-form-field-container-test.js","morgana/tests/unit/views/server-side-model-form-field-container-test.jshint.js","morgana/tests/unit/views/server-side-model-form-field-indicator-test.js","morgana/tests/unit/views/server-side-model-form-field-indicator-test.jshint.js","morgana/tests/unit/views/server-side-model-form-field-test.js","morgana/tests/unit/views/server-side-model-form-field-test.jshint.js","morgana/tests/unit/views/server-side-model-form-fields-test.js","morgana/tests/unit/views/server-side-model-form-fields-test.jshint.js","morgana/tests/unit/views/tags/index-test.js","morgana/tests/unit/views/tags/index-test.jshint.js","morgana/tests/views/application.jshint.js","morgana/tests/views/child-view-or-string.jshint.js","morgana/tests/views/content-project/content-project-exports.jshint.js","morgana/tests/views/content-project/delete.jshint.js","morgana/tests/views/content-project/edit.jshint.js","morgana/tests/views/content-project/index.jshint.js","morgana/tests/views/content-project/thing-type/thing-new.jshint.js","morgana/tests/views/content-project/thing-type/thing/delete.jshint.js","morgana/tests/views/content-project/thing-type/thing/edit.jshint.js","morgana/tests/views/content-project/thing-type/thing/index.jshint.js","morgana/tests/views/credits/index.jshint.js","morgana/tests/views/engine-configuration/content-project/new.jshint.js","morgana/tests/views/engine-configuration/index.jshint.js","morgana/tests/views/engine-configurations/contact/index.jshint.js","morgana/tests/views/engine-configurations/index.jshint.js","morgana/tests/views/eventlog/index.jshint.js","morgana/tests/views/file-upload-field.jshint.js","morgana/tests/views/foundation.jshint.js","morgana/tests/views/home/index.jshint.js","morgana/tests/views/navigation.jshint.js","morgana/tests/views/server-side-model-form-field-container.jshint.js","morgana/tests/views/server-side-model-form-field-indicator.jshint.js","morgana/tests/views/server-side-model-form-field.jshint.js","morgana/tests/views/server-side-model-form-fields.jshint.js","morgana/tests/views/table-footer.jshint.js","morgana/tests/views/tags/index.jshint.js","morgana/transforms/json-string-parsed.js","morgana/transforms/upload-file.js","morgana/views/application.js","morgana/views/child-view-or-string.js","morgana/views/content-project/content-project-exports.js","morgana/views/content-project/delete.js","morgana/views/content-project/edit.js","morgana/views/content-project/index.js","morgana/views/content-project/thing-type/thing-new.js","morgana/views/content-project/thing-type/thing/delete.js","morgana/views/content-project/thing-type/thing/edit.js","morgana/views/content-project/thing-type/thing/index.js","morgana/views/credits/index.js","morgana/views/engine-configuration/content-project/new.js","morgana/views/engine-configuration/index.js","morgana/views/engine-configurations/contact/index.js","morgana/views/engine-configurations/index.js","morgana/views/eventlog/index.js","morgana/views/file-upload-field.js","morgana/views/foundation.js","morgana/views/home/index.js","morgana/views/navigation.js","morgana/views/server-side-model-form-field-container.js","morgana/views/server-side-model-form-field-indicator.js","morgana/views/server-side-model-form-field.js","morgana/views/server-side-model-form-fields.js","morgana/views/table-footer.js","morgana/views/tags/index.js","vendor/ember-cli/app-suffix.js","vendor/ember-cli/app-boot.js"],"sourcesContent":["/* jshint ignore:start */\n\n/* jshint ignore:end */\n","define('morgana/adapters/application', ['exports', 'ember-data', 'ember', 'morgana/mixins/server-side-model-adapter', 'morgana/config/environment'], function (exports, DS, Ember, ServerSideModelAdapterMixin, config) {\n\n    'use strict';\n\n    exports['default'] = DS['default'].RESTAdapter.extend(ServerSideModelAdapterMixin['default'], {\n        namespace: config['default'].restAdapter.namespace,\n        host: config['default'].restAdapter.host,\n\n        pathForType: function (type) {\n            return Ember['default'].String.underscore(type).replace(/_/g, '-');\n        },\n        buildURL: function (type, id) {\n            var url = this._super(type, id);\n\n            if (url.charAt(url.length - 1) !== '/') {\n                url += '/';\n            }\n\n            return url;\n        }\n    });\n\n});","define('morgana/adapters/ax-company', ['exports', 'morgana/adapters/application'], function (exports, ApplicationAdapter) {\n\n    'use strict';\n\n    exports['default'] = ApplicationAdapter['default'].extend({\n        pathForType: function () {\n            return 'me/company';\n        },\n        useUpdateFieldsForDynamicModels: true\n    });\n\n});","define('morgana/adapters/bulk-upload-general', ['exports', 'morgana/adapters/django-rest-file'], function (exports, DjangoRestFileAdapter) {\n\n    'use strict';\n\n    exports['default'] = DjangoRestFileAdapter['default'].extend({\n        pathForType: function () {\n            return 'bulkupload';\n        }\n    });\n\n});","define('morgana/adapters/bulk-upload', ['exports', 'morgana/adapters/bulk-upload-general'], function (exports, BulkUploadGeneralAdapter) {\n\n\t'use strict';\n\n\texports['default'] = BulkUploadGeneralAdapter['default'].extend({\n\t});\n\n});","define('morgana/adapters/content-project-export', ['exports', 'morgana/adapters/application'], function (exports, ApplicationAdapter) {\n\n    'use strict';\n\n    exports['default'] = ApplicationAdapter['default'].extend({\n        pathForType: function () {\n            return '';\n        }\n    });\n\n});","define('morgana/adapters/content-request', ['exports', 'morgana/adapters/application'], function (exports, ApplicationAdapter) {\n\n    'use strict';\n\n    exports['default'] = ApplicationAdapter['default'].extend({\n        pathForType: function () {\n            return ''; //Overwrite in route!\n        },\n        find: function (store, type) {\n            return this.ajax(this.buildURL(type.typeKey), 'GET');\n        }\n    });\n\n});","define('morgana/adapters/django-rest-file', ['exports', 'ember', 'morgana/adapters/application'], function (exports, Ember, ApplicationAdapter) {\n\n    'use strict';\n\n    exports['default'] = ApplicationAdapter['default'].extend({\n        createRecord: function (store, type, record) {\n            var url = this.buildURL(type.typeKey),\n                serializedData = store.serializerFor(type.typeKey).serialize(record),\n                formData = new FormData(),\n                key;\n            for (key in serializedData) {\n                formData.append(key, serializedData[key]);\n            }\n\n            return this.ajax(url, \"POST\", {\n                data: formData,\n                contentType: false,\n                processData: false\n            });\n        },\n        ajax: function (url, type, options) {\n            var adapter = this;\n\n            return new Ember['default'].RSVP.Promise(function (resolve, reject) {\n                var hash = options;\n\n                hash.url = url;\n                hash.type = type;\n                hash.success = function (json) {\n                    Ember['default'].run(null, resolve, json);\n                };\n                hash.error = function (jqXHR) {\n                    Ember['default'].run(null, reject, adapter.ajaxError(jqXHR));\n                };\n                Ember['default'].$.ajax(hash);\n            }, \"DS: RESTAdapter#ajax \" + type + \" to \" + url);\n        }\n    });\n\n});","define('morgana/adapters/image-request', ['exports', 'morgana/adapters/content-request'], function (exports, ContentRequestAdapter) {\n\n\t'use strict';\n\n\texports['default'] = ContentRequestAdapter['default'].extend({\n\t});\n\n});","define('morgana/adapters/text-request', ['exports', 'morgana/adapters/content-request'], function (exports, ContentRequestAdapter) {\n\n\t'use strict';\n\n\texports['default'] = ContentRequestAdapter['default'].extend({\n\t});\n\n});","define('morgana/adapters/thing', ['exports', 'morgana/adapters/application'], function (exports, ApplicationAdapter) {\n\n    'use strict';\n\n    exports['default'] = ApplicationAdapter['default'].extend({\n        pathForType: function () {\n            return ''; //Overwrite in route!\n        }\n    });\n\n});","define('morgana/adapters/user-check-list', ['exports', 'morgana/adapters/application'], function (exports, ApplicationAdapter) {\n\n    'use strict';\n\n    exports['default'] = ApplicationAdapter['default'].extend({\n        pathForType: function () {\n            return 'me/check_list/';\n        }\n    });\n\n});","define('morgana/adapters/user', ['exports', 'morgana/adapters/application'], function (exports, ApplicationAdapter) {\n\n    'use strict';\n\n    exports['default'] = ApplicationAdapter['default'].extend({\n        pathForType: function () {\n            return 'me';\n        }\n    });\n\n});","define('morgana/app', ['exports', 'ember', 'ember/resolver', 'ember/load-initializers', 'morgana/config/environment', 'morgana/mixins/flash-messages-route', 'morgana/mixins/loading-stages-route', 'morgana/mixins/loading-stages-controller'], function (exports, Ember, Resolver, loadInitializers, config, FlashMessagesRouteMixin, LoadingStagesRouteMixin, LoadingStagesControllerMixin) {\n\n  'use strict';\n\n  var getCookie = function (name) {\n      var cookieValue = null;\n      if (document.cookie && document.cookie !== '') {\n          var cookies = document.cookie.split(';');\n          for (var i = 0; i < cookies.length; i++) {\n              var cookie = Ember['default'].$.trim(cookies[i]);\n              // Does this cookie string begin with the name we want?\n              if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                  cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                  break;\n              }\n          }\n      }\n      return cookieValue;\n  },\n  csrfSafeMethod = function (method) {\n      // these HTTP methods do not require CSRF protection\n      return (/^(GET|HEAD|OPTIONS|TRACE)$/.test(method));\n  },\n  csrftoken = getCookie('csrftoken');\n\n  Ember['default'].$.ajaxSetup({\n      headers: { \"ember\": true },\n      beforeSend: function (xhr, settings) {\n          if (!csrfSafeMethod(settings.type) && !this.crossDomain) {\n              xhr.setRequestHeader(\"X-CSRFToken\", getCookie('csrftoken'));\n          }\n      },\n  //    xhrFields: {withCredentials: true },\n  //    crossDomain: true\n  });\n\n  Ember['default'].MODEL_FACTORY_INJECTIONS = true;\n\n  var App = Ember['default'].Application.extend({\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix,\n    Resolver: Resolver['default'],\n    rootElement: config['default'].rootElement\n  });\n\n  // FIXME use something like a default Route\n  Ember['default'].Route.reopen(FlashMessagesRouteMixin['default'], LoadingStagesRouteMixin['default']);\n  Ember['default'].ControllerMixin.reopen(LoadingStagesControllerMixin['default']);\n  loadInitializers['default'](App, config['default'].modulePrefix);\n\n  exports['default'] = App;\n\n});","define('morgana/authenticators/myax', ['exports', 'ember', 'simple-auth/authenticators/base', 'morgana/config/environment', 'morgana/store'], function (exports, Ember, Base, ENV, store) {\n\n    'use strict';\n\n    exports['default'] = Base['default'].extend({\n\n    //    init: function() {\n    //        var globalConfig = ENV['simple-auth'] || {};\n    //        this.serverTokenEndpoint =  globalConfig.serverTokenEndpoint;\n    //        this._super();\n    //    },\n    //\n    //    restore: function (data) {\n    //        return new Ember.RSVP.Promise(function (resolve, reject) {\n    //            if (!Ember.isEmpty(data.currentUserId)) {\n    //                resolve(data);\n    //            } else {\n    //                reject();\n    //            }\n    //        });\n    //    },\n    //\n    //    authenticate: function (options) {\n    //        var _this = this;\n    //        return new Ember.RSVP.Promise(function (resolve, reject) {\n    //            var data = { email: options.identification, password: options.password };\n    //            _this.makeRequest(_this.serverTokenEndpoint, data, \"POST\").then(function (response) {\n    //                Ember.run(function () {\n    //                    resolve({currentUserId: response.user});\n    //                });\n    //            }, function (xhr, status, error) {\n    //                Ember.run(function () {\n    //                    reject();\n    //                });\n    //            });\n    //        });\n    //    },\n    //\n    //    invalidate: function () {\n    //        var _this = this;\n    //        return new Ember.RSVP.Promise(function (resolve) {\n    //            _this.makeRequest(_this.serverTokenEndpoint, {}, \"DELETE\").then(function () {\n    //                resolve();\n    //            });\n    //        });\n    //    },\n    //\n    //    makeRequest: function (url, data, type) {\n    //        return Ember.$.ajax({\n    //            url: url,\n    //            type: type,\n    //            data: data,\n    //            dataType: 'json'\n    //        });\n    //    }\n\n        init: function () {\n            var globalConfig = ENV['default']['simple-auth'] || {};\n            this.serverTokenEndpoint = globalConfig.serverTokenEndpoint;\n            this._super();\n        },\n\n        authenticate: function (credentials) {\n            var _this = this;\n            return new Ember['default'].RSVP.Promise(function (resolve, reject) {\n                var data = { email: credentials.identification, password: credentials.password };\n                _this.makeRequest(_this.serverTokenEndpoint, data, \"POST\").then(function (response) {\n                    Ember['default'].run(function () {\n                        var data = {\n                            currentUserId: response.user,\n                            token: response.token\n                        };\n                        resolve(data);\n                    });\n                }, function (xhr, status, error) {\n                    Ember['default'].run(function () {\n                        reject();\n                    });\n                });\n            });\n        },\n\n        restore: function (data) {\n            return new Ember['default'].RSVP.Promise(function (resolve, reject) {\n                if (!Ember['default'].isEmpty(data.token)) {\n                    resolve(data);\n                } else {\n                    reject();\n                }\n            });\n        },\n\n        invalidate: function () {\n            var _this = this;\n            return new Ember['default'].RSVP.Promise(function (resolve) {\n                _this.makeRequest(_this.serverTokenEndpoint, {}, \"DELETE\").then(function () {\n                    resolve();\n                });\n            });\n        },\n\n        makeRequest: function (url, data, type) {\n            return Ember['default'].$.ajax({\n                url: url,\n                type: type,\n                data: data,\n                dataType: 'json'\n            });\n        }\n\n    });\n\n});","define('morgana/authorizers/myax', ['exports', 'ember', 'simple-auth/authorizers/base'], function (exports, Ember, Base) {\n\n    'use strict';\n\n    exports['default'] = Base['default'].extend({\n        authorize: function (jqXHR, requestOptions) {\n            var accessToken = this.get('session.token');\n            if (this.get('session.isAuthenticated') && !Ember['default'].isEmpty(accessToken)) {\n                jqXHR.setRequestHeader('Authorization', 'Token ' + accessToken);\n            }\n        }\n    });\n\n});","define('morgana/components/button-with-loader', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Component.extend({\n        isLoading: false,\n        isAlert: false,\n        displayAsButton: true,\n        buttonText: '',\n\n        actions: {\n\n            showLoading: function() {\n                this.set('isLoading', true);\n                this.sendAction('action');\n            }\n        }\n    });\n\n});","define('morgana/controllers/application', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].ObjectController.extend({\n        currentUser: Ember['default'].computed.alias('session.currentUser')\n    });\n\n});","define('morgana/controllers/content-project/bulk-upload/upload', ['exports', 'ember', 'morgana/mixins/flash-message', 'morgana/mixins/server-side-field-error'], function (exports, Ember, FlashMessageMixin, ServerSideFieldErrorMixin) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].ObjectController.extend(FlashMessageMixin['default'], ServerSideFieldErrorMixin['default'], {\n        actions: {\n            upload: function () {\n                var controller = this,\n                    bulkupload = this.get('model');\n                bulkupload.save().then(function (bulkupload) {\n                    controller.addSuccessMessage('File successfully uploaded. It will take a second for the new data to be shown.');\n                    controller.hideLoading('upload');\n                    controller.transitionToRoute('content-project.index', bulkupload.get('contentProject'));\n                }, function (e) {\n                    controller.hideLoading('upload');\n                    controller.handleServerSideError('Error uploading file!', e);\n                });\n            },\n            back: function () {\n                var bulkupload = this.get('model'),\n                    contentProject = bulkupload.get('contentProject');\n                bulkupload.deleteRecord();\n                this.hideLoading('back');\n                this.transitionToRoute('content-project.index', contentProject);\n            }\n        }\n    });\n\n});","define('morgana/controllers/content-project/content-project-exports/index', ['exports', 'ember', 'morgana/mixins/pagination'], function (exports, Ember, pagination) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].ArrayController.extend(pagination.PaginationMixin, {\n        model: Ember['default'].A(),\n        itemObjectName: 'contentProjectExport',\n        itemsPerPage: 10,\n\n        meta: Ember['default'].computed('model', function () {\n            return this.store.metadataFor(\"contentProjectExport\");\n        }),\n\n        actions: {\n            'downloadFile': function (contentProjectExport) {\n                var store = this.get('store'),\n                    url = contentProjectExport.get('downloadUrl');\n\n                if (url) {\n                    window.location.href = url;\n                    // FIXME: add some error handling\n                }\n            }\n        }\n    });\n\n});","define('morgana/controllers/content-project/delete', ['exports', 'ember', 'morgana/mixins/flash-message', 'morgana/mixins/server-side-field-error'], function (exports, Ember, FlashMessageMixin, ServerSideFieldErrorMixin) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].ObjectController.extend(FlashMessageMixin['default'], ServerSideFieldErrorMixin['default'], {\n        actions: {\n            \"delete\": function () {\n                var controller = this,\n                    contentProject = this.get('model');\n\n                contentProject.destroyRecord().then(function () {\n                    controller.addSuccessMessage('Content Project deleted.');\n                    controller.hideLoading('delete');\n                    controller.transitionToRoute('home');\n                }, function (e) {\n                    controller.hideLoading('delete');\n                    controller.handleServerSideError('Error deleting Content Project!', e);\n                });\n            },\n            back: function () {\n                var contentProject = this.get('model');\n                contentProject.rollback();\n                this.hideLoading('back');\n                this.transitionToRoute('content-project.index', contentProject);\n            }\n        }\n    });\n\n});","define('morgana/controllers/content-project/edit', ['exports', 'ember', 'morgana/mixins/flash-message', 'morgana/mixins/server-side-field-error'], function (exports, Ember, FlashMessageMixin, ServerSideFieldErrorMixin) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].ObjectController.extend(FlashMessageMixin['default'], ServerSideFieldErrorMixin['default'], {\n        actions: {\n            edit: function () {\n                var controller = this,\n                    contentProject = this.get('model');\n\n                contentProject.get('engineConfiguration').then(function (ec) {\n                    contentProject.set('engineConfiguration', ec);\n                    contentProject.save().then(function (contentProject) {\n                        controller.addSuccessMessage('Content Project saved.');\n                        controller.hideLoading('edit');\n                        controller.transitionToRoute('content-project.index', contentProject);\n                    }, function (e) {\n                        controller.hideLoading('edit');\n                        controller.handleServerSideError('Error editing Content Project!', e);\n                    });\n                });\n            },\n            back: function () {\n                var contentProject = this.get('model');\n                contentProject.rollback();\n                this.hideLoading('back');\n                this.transitionToRoute('content-project.index', contentProject);\n            }\n        }\n    });\n\n});","define('morgana/controllers/content-project/index', ['exports', 'ember', 'morgana/mixins/permissions', 'morgana/mixins/flash-message'], function (exports, Ember, permissions, FlashMessageMixin) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].ObjectController.extend(FlashMessageMixin['default'], permissions.PermissionsMixin, {\n        model: {},\n\n        actions: {\n            createThing: function () {\n                this.hideLoading('addThing');\n                this.transitionToRoute('content-project.thing-type.thing-new');\n            },\n            uploadFile: function () {\n                this.hideLoading('addThing');\n                this.transitionToRoute('content-project.bulk-upload.upload', this.get('model.id'));\n            },\n            generateContent: function () {\n                var controller = this,\n                    flashMessages = this.get('controllers.flash-messages'),\n                    store = this.get('store'),\n                    model = this.get('model'),\n                    adapter = store.adapterFor('contentProject'),\n                    url = adapter.buildURL('contentProject', model.get('id')),\n                    promise = adapter.ajax(url + 'generate_content/', 'POST');\n                promise.then(function (res) {\n                    var responseContent = res.contentProject,\n                        msg,\n                        msgStatus;\n                    if (responseContent.status === 'CALLED') {\n                        msg = 'Content requests for Objects in \"' + model.get('name') + '\" have been successfully scheduled.';\n                        msgStatus = 'success';\n                    } else if (responseContent.status === 'NOT_CALLED') {\n                        msgStatus = 'warning';\n                        msg = Ember['default'].View.create({\n                            controller: controller,\n                            tagName: 'span',\n                            template:  Ember['default'].Handlebars.compile('There is already content for all Objects. Maybe you want to <a {{action \"forceGenerateContent\"}}>force regeneration</a>?')\n                        });\n                    }\n                    controller.hideLoading('generateContent');\n                    flashMessages.addMessage(msg, msgStatus);\n                    flashMessages.now();\n                }, function (e) {\n                    var msgStatus,\n                        msg;\n\n                    if (e && e.contentProject && e.contentProject.message) {\n                        msgStatus = 'error';\n                        msg = Ember['default'].View.create({\n                            controller: controller,\n                            tagName: 'span',\n                            template:  Ember['default'].Handlebars.compile(e.contentProject.message)\n                        });\n                        flashMessages.addMessage(msg, msgStatus);\n                        flashMessages.now();\n                    } else {\n                        Raven.captureMessage('Error generating Content for Content Project!', e);\n                    }\n                    controller.hideLoading('generateContent');\n                });\n            },\n            forceGenerateContent: function () {\n                var controller = this,\n                    flashMessages = this.get('controllers.flash-messages'),\n                    store = this.get('store'),\n                    model = this.get('model'),\n                    adapter = store.adapterFor('contentProject'),\n                    url = adapter.buildURL('contentProject', model.get('id')),\n                    promise = adapter.ajax(url + 'generate_content/?force=true', 'POST');\n\n                promise.then(function (res) {\n                    var responseContent = res.contentProject,\n                        msg,\n                        msgStatus;\n                    if (responseContent.status === 'CALLED') {\n                        msg = 'Content requests for Objects in \"' + model.get('name') + '\" have been successfully scheduled.';\n                        msgStatus = 'success';\n                    } else if (responseContent.status === 'NOT_CALLED') {\n                        msgStatus = 'error';\n                        msg = 'Sorry, an error occured. This should not have happened';\n                        Raven.captureMessage('Error generating Content for Content Project! Force returned NOT_CALLED', res);\n                    }\n                    controller.hideLoading('generateContent');\n                    flashMessages.addMessage(msg, msgStatus);\n                    flashMessages.now();\n                }, function (e) {\n                    var msgStatus,\n                        msg;\n                    if (e && e.contentProject && e.contentProject.message) {\n                        msgStatus = 'error';\n                        msg = Ember['default'].View.create({\n                            controller: controller,\n                            tagName: 'span',\n                            template:  Ember['default'].Handlebars.compile(e.contentProject.message)\n                        });\n                        flashMessages.addMessage(msg, msgStatus);\n                        flashMessages.now();\n                    } else {\n                        Raven.captureMessage('Error generating Content for Content Project!', e);\n                    }\n                    controller.hideLoading('generateContent');\n                });\n            },\n            downloadContent: function () {\n                var url = '/dashboard/content_project/' + this.get('model').get('id') +  '/export_xlsx/?generated_texts=1';\n                this.hideLoading('downloadContent');\n                window.location.href = url;\n            },\n            downloadExample: function () {\n                var url = '/dashboard/content_project/' + this.get('model').get('id') +  '/export_xlsx/?example=1';\n                this.hideLoading('downloadContent');\n                window.location.href = url;\n            },\n            downloadImages: function () {\n                var url = '/dashboard/content_project/' + this.get('model').get('id') + '/download_images_zip/';\n                this.hideLoading('downloadImages');\n                window.location.href = url;\n            },\n            createImageZip: function () {\n                var url = '/dashboard/content_project/' + this.get('model').get('id') + '/generate_images_zip/';\n                this.hideLoading('createImageZip');\n                window.location.href = url;\n            },\n            buyCredits: function () {\n                this.hideLoading('buyCredits');\n                this.transitionToRoute('credits');\n            },\n            edit: function () {\n                this.hideLoading('edit');\n                this.transitionToRoute('content-project.edit', this.get('model'));\n            },\n            \"delete\": function () {\n                this.hideLoading('edit');\n                this.transitionToRoute('content-project.delete', this.get('model'));\n            },\n            back: function () {\n                this.hideLoading('back');\n                this.transitionToRoute('home');\n            }\n\n        }\n    });\n\n});","define('morgana/controllers/content-project/thing-type/thing-new', ['exports', 'ember', 'morgana/mixins/flash-message', 'morgana/mixins/permissions', 'morgana/mixins/server-side-model-fields', 'morgana/mixins/server-side-field-error'], function (exports, Ember, FlashMessageMixin, permissions, ServerSideModelFieldsMixin, ServerSideFieldErrorMixin) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].ObjectController.extend(FlashMessageMixin['default'], ServerSideFieldErrorMixin['default'], permissions.PermissionsMixin, ServerSideModelFieldsMixin['default'], {\n        engineConfiguration: null,\n\n        actions: {\n            create: function () {\n                var controller = this,\n                    thing = this.get('model');\n\n                thing.get('contentProject').then(function (cp) {\n                    thing.set('contentProject', cp);\n                    thing.save().then(function (thing) {\n                        controller.addSuccessMessage('Object created.');\n                        controller.hideLoading('create');\n                        controller.transitionToRoute('content-project.thing-type.thing.index', thing.get('id'));\n                    }, function (e) {\n                        controller.hideLoading('create');\n                        controller.handleServerSideError('Error creating Object!', e);\n                    });\n                });\n            },\n            back: function () {\n                var thing = this.get('model');\n                thing.rollback();\n                this.hideLoading('back');\n                this.transitionToRoute('content-project.index');\n            }\n        }\n    });\n\n});","define('morgana/controllers/content-project/thing-type/thing/delete', ['exports', 'ember', 'morgana/mixins/flash-message', 'morgana/mixins/server-side-field-error'], function (exports, Ember, FlashMessageMixin, ServerSideFieldErrorMixin) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].ObjectController.extend(FlashMessageMixin['default'], ServerSideFieldErrorMixin['default'], {\n\n        actions: {\n            \"delete\": function () {\n                var controller = this,\n                    thing = this.get('model'),\n                    thingName = thing.get('name'),\n                    contentProjectId = controller.get('contentProject').get('id');\n\n                thing.destroyRecord().then(function () {\n\n                    controller.addSuccessMessage(Ember['default'].String.fmt('Object %@ deleted.', thingName));\n                    controller.hideLoading('delete');\n                    controller.transitionToRoute('content-project.index', contentProjectId);\n                }, function (e) {\n                    controller.hideLoading('delete');\n                    controller.handleServerSideError('Error deleting Object!', e);\n                });\n            },\n            back: function () {\n                var thing = this.get('model');\n                thing.rollback();\n                this.hideLoading('back');\n                this.transitionToRoute('content-project.thing-type.thing.index', thing.get('id'));\n            }\n        }\n    });\n\n});","define('morgana/controllers/content-project/thing-type/thing/edit', ['exports', 'ember', 'morgana/mixins/flash-message', 'morgana/mixins/permissions', 'morgana/mixins/server-side-model-fields', 'morgana/mixins/server-side-field-error'], function (exports, Ember, FlashMessageMixin, permissions, ServerSideModelFieldsMixin, ServerSideFieldErrorMixin) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].ObjectController.extend(FlashMessageMixin['default'], ServerSideFieldErrorMixin['default'], permissions.PermissionsMixin, ServerSideModelFieldsMixin['default'], {\n        engineConfiguration: null,\n\n        actions: {\n            edit: function () {\n                var controller = this,\n                    thing = this.get('model');\n\n                thing.get('contentProject').then(function (cp) {\n                    thing.set('contentProject', cp);\n                    thing.save().then(function (thing) {\n                        controller.addSuccessMessage('Object saved.');\n                        controller.hideLoading('edit');\n                        controller.transitionToRoute('content-project.thing-type.thing.index', thing.get('id'));\n                    }, function (e) {\n                        controller.hideLoading('edit');\n                        controller.handleServerSideError('Error editing Object!', e);\n                    });\n                });\n            },\n            back: function () {\n                var thing = this.get('model');\n                thing.rollback();\n                this.hideLoading('back');\n                this.transitionToRoute('content-project.thing-type.thing.index', thing.get('id'));\n            }\n        }\n    });\n\n});","define('morgana/controllers/content-project/thing-type/thing/index', ['exports', 'ember', 'morgana/mixins/flash-message', 'morgana/mixins/permissions', 'morgana/mixins/server-side-model-fields', 'morgana/mixins/jira-report'], function (exports, Ember, FlashMessageMixin, permissions, ServerSideModelFieldsMixin, JiraReportMixin) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].ObjectController.extend(JiraReportMixin['default'], FlashMessageMixin['default'], permissions.PermissionsMixin, ServerSideModelFieldsMixin['default'], {\n        engineConfiguration: Ember['default'].K(),\n\n        infoPanelStatusCssClass: Ember['default'].computed('model.contentGenerationStatusCssClass', function () {\n            return 'panel-' + this.get('model').get('contentGenerationStatusCssClass');\n        }),\n\n        contentRequest: null,\n\n        actions: {\n            buyCredits: function () {\n                this.hideLoading('buyCredits');\n                this.transitionToRoute('credits');\n            },\n            generateContent: function () {\n                var controller = this,\n                    flashMessages = this.get('controllers.flash-messages'),\n                    store = this.get('store'),\n                    model = this.get('model'),\n                    thingTypeName = model.constructor.typeKey,\n                    adapter = store.getDynamicAdapter(thingTypeName),\n                    url = adapter.buildURL(model.constructor.typeKey, model.get('id')),\n                    promise = adapter.ajax(url + 'generate_content/', 'POST');\n\n                promise.then(function (res) {\n                    var msg,\n                        msgStatus;\n                    if (res[thingTypeName].status === 'CALLED') {\n                        msg = 'Content request for \"' + model.get('name') + '\" has been succesfully scheduled.';\n                        msgStatus = 'success';\n                    } else if (res[thingTypeName].status === 'NOT_CALLED') {\n                        msgStatus = 'warning';\n                        msg = Ember['default'].View.create({\n                            controller: controller,\n                            tagName: 'span',\n                            template:  Ember['default'].Handlebars.compile('There is already content for \"' + model.get('name') + '\". Maybe you want to <a {{action \"forceGenerateContent\"}}>force regeneration</a>?')\n                        });\n                    }\n                    flashMessages.addMessage(msg, msgStatus);\n                    controller.hideLoading('generateContent');\n                    flashMessages.now();\n                }, function (e) {\n                    controller.hideLoading('generateContent');\n                    Raven.captureMessage('Error generating Content!', e);\n                });\n\n            },\n            forceGenerateContent: function () {\n                var controller = this,\n                    flashMessages = this.get('controllers.flash-messages'),\n                    store = this.get('store'),\n                    model = this.get('model'),\n                    thingTypeName = model.constructor.typeKey,\n                    adapter = store.getDynamicAdapter(thingTypeName),\n                    url = adapter.buildURL(model.constructor.typeKey, model.get('id')),\n                    promise = adapter.ajax(url + 'generate_content/?force=true', 'POST');\n\n                promise.then(function (res) {\n                    var msg,\n                        msgStatus;\n                    if (res[thingTypeName].status === 'CALLED') {\n                        msg = 'Content request for \"' + model.get('name') + '\" has been succesfully scheduled.';\n                        msgStatus = 'success';\n                    } else if (res[thingTypeName].status === 'NOT_CALLED') {\n                        msgStatus = 'warning';\n                        msg = Ember['default'].View.create({\n                            controller: controller,\n                            tagName: 'span',\n                            template:  Ember['default'].Handlebars.compile('There is already content for \"' + model.get('name') + '\". Maybe you want to <a {{action \"forceGenerateContent\"}}>force regeneration</a>?')\n                        });\n                    }\n                    flashMessages.addMessage(msg, msgStatus);\n                    controller.hideLoading('generateContent');\n                    flashMessages.now();\n                }, function (e) {\n                    controller.hideLoading('generateContent');\n                    Raven.captureMessage('Error regenerating Content!', e);\n                });\n            },\n\n            edit: function () {\n                this.hideLoading('edit');\n                this.transitionToRoute('content-project.thing-type.thing.edit', this.get('model.id'));\n            },\n            \"delete\": function () {\n                this.hideLoading('edit');\n                this.transitionToRoute('content-project.thing-type.thing.delete', this.get('model.id'));\n            },\n\n            reportJiraIssue: function () {\n                this.reportJiraIssue();\n            }\n        }\n    });\n\n});","define('morgana/controllers/content-project/thing-type/thing/server-side-model-field-detail', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Controller.extend({\n\t});\n\n});","define('morgana/controllers/content-projects/index', ['exports', 'ember', 'morgana/mixins/pagination'], function (exports, Ember, pagination) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].ArrayController.extend(pagination.PaginationMixin, {\n        model: Ember['default'].A(),\n        itemObjectName: 'contentProject',\n        itemsPerPage: 30,\n        meta: Ember['default'].computed('model', function () {\n            return this.store.metadataFor(\"contentProject\");\n        }),\n\n        actions: {\n            createContentProject: function () {\n                this.transitionToRoute('engine-configurations');\n            },\n            contentProjectDetail: function (contentProject) {\n                this.transitionToRoute('content-project.index', contentProject.get('id'));\n            }\n        }\n    });\n\n});","define('morgana/controllers/credits/credit-history-element', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].ObjectController.extend({\n\n        model: null,\n\n        isAdd: Ember['default'].computed('model.operation', function() {\n            return this.get('model.operation') === 'add';\n        })\n    });\n\n});","define('morgana/controllers/credits/credit-history', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].ArrayController.extend({\n        itemController: 'credits/creditHistoryElement'\n    });\n\n});","define('morgana/controllers/credits/invoices', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].ArrayController.extend({\n        actions: {\n            downloadInvoice: function (invoice) {\n                var url = '/dashboard/invoice/' + invoice.get('id');\n                window.location.href = url;\n            }\n        }\n    });\n\n});","define('morgana/controllers/download-exports/index', ['exports', 'ember', 'morgana/config/environment', 'morgana/mixins/pagination', 'morgana/mixins/permissions'], function (exports, Ember, ENV, pagination, permissions) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].ArrayController.extend(pagination.PaginationMixin, permissions.PermissionsMixin, {\n        model: Ember['default'].A(),\n        itemObjectName: 'contentProjectExport',\n        itemsPerPage: 10,\n\n        meta: Ember['default'].computed('model', function () {\n            return this.store.metadataFor(\"contentProjectExport\");\n        }),\n\n        actions: {\n            toContentProjects: function () {\n                this.transitionToRoute('home');\n            },\n            toTags: function () {\n                this.transitionToRoute('tags');\n            },\n            'downloadFile': function (contentProjectExport) {\n                var store = this.get('store'),\n                    url = contentProjectExport.get('downloadUrl');\n\n                if (url) {\n                    window.location.href = '' + ENV['default'].restAdapter.host + url;\n                    // FIXME: add some error handling\n                }\n            }\n        }\n    });\n\n});","define('morgana/controllers/engine-configuration/content-project/new', ['exports', 'ember', 'morgana/mixins/flash-message', 'morgana/mixins/server-side-field-error'], function (exports, Ember, FlashMessageMixin, ServerSideFieldErrorMixin) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].ObjectController.extend(FlashMessageMixin['default'], ServerSideFieldErrorMixin['default'], {\n        actions: {\n            back: function () {\n                this.hideLoading('back');\n                this.transitionToRoute('engine-configuration');\n            },\n            create: function () {\n                var controller = this;\n\n                controller.get('model').save().then(function (contentProject) {\n                    controller.addSuccessMessage('Content Project created.');\n                    controller.hideLoading('create');\n                    controller.transitionToRoute('content-project.index', contentProject.get('id'));\n                }, function (e) {\n                    controller.hideLoading('create');\n                    controller.handleServerSideError('Error creating Content Project!', e);\n                });\n            }\n        }\n    });\n\n});","define('morgana/controllers/engine-configuration/index', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].ObjectController.extend({\n        actions: {\n            back: function () {\n                this.transitionToRoute('engine-configurations');\n            },\n            createContentProject: function () {\n                this.transitionToRoute('engine-configuration.content-project.new');\n            }\n        }\n    });\n\n});","define('morgana/controllers/engine-configurations/contact', ['exports', 'ember', 'morgana/mixins/flash-message'], function (exports, Ember, FlashMessageMixin) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].ObjectController.extend(FlashMessageMixin['default'], {\n        actions: {\n            back: function () {\n                this.hideLoading('back');\n                this.transitionToRoute('engine-configurations');\n            },\n            create: function () {\n                var flashMessages = this.get('controllers.flash-messages'),\n                    controller = this,\n                    contact = this.get('model');\n                contact.save().then(function () {\n                    flashMessages.addMessage('Your message has been sent.', 'success');\n                    controller.hideLoading('create');\n                    controller.transitionToRoute('home');\n\n                }, function (e) {\n                    controller.hideLoading('create');\n                    Raven.captureMessage('Error creating Contact for Engine Configuration!', e);\n                });\n            }\n        }\n    });\n\n});","define('morgana/controllers/engine-configurations/index', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].ArrayController.extend({\n        myFilter: '',\n\n        allLanguages: Ember['default'].computed(function () {\n            return this.get('store').find('Language');\n        }),\n\n        allEngineConfigurationStatus: Ember['default'].computed(function () {\n            return this.get('store').find('EngineConfigurationStatus');\n        }),\n\n        allEngineContentTypeCategories: Ember['default'].computed(function () {\n            return this.get('store').find('EngineContentTypeCategory');\n        }),\n\n\n        filteredContent: [],\n\n        _filterProperty: function (filterPropertyName, allFilterOptionsPropName) {\n            var self = this,\n                selectedOptions = self.get(allFilterOptionsPropName).filterBy('checked', true),\n                engineConfigurations = self.get('arrangedContent'),\n                propertyIsFiltered = selectedOptions.length > 0;\n\n            engineConfigurations.forEach(function (engineConfiguration) {\n                var filters = engineConfiguration.get('filters'),\n                    filterPropertyIdx = filters.indexOf(filterPropertyName);\n\n                if (!propertyIsFiltered) {\n                    //show all\n                    if (filterPropertyIdx > -1) {\n                        filters.splice(filterPropertyIdx, 1);\n                        engineConfiguration.set('filters', filters);\n                        self.filterContent();\n                    }\n                } else {\n                    engineConfiguration.get(filterPropertyName).then(function (filterProperty) {\n\n                        if (selectedOptions.indexOf(filterProperty) > -1) {\n                            if (filterPropertyIdx > -1) {\n                                filters.splice(filterPropertyIdx, 1);\n                                engineConfiguration.set('filters', filters);\n                                self.filterContent();\n                            }\n                        } else {\n                            if (filterPropertyIdx === -1) {\n                                filters.push(filterPropertyName);\n                                engineConfiguration.set('filters', filters);\n                                self.filterContent();\n                            }\n                        }\n\n                    });\n                }\n            });\n        },\n\n\n        filterLanguages: Ember['default'].observer('allLanguages.@each.checked', function () {\n            this._filterProperty('language', 'allLanguages');\n        }),\n\n        filterCategories: Ember['default'].observer('allEngineContentTypeCategories.@each.checked', function () {\n            this._filterProperty('engineContentTypeCategory', 'allEngineContentTypeCategories');\n        }),\n\n        filterStatus: Ember['default'].observer('allEngineConfigurationStatus.@each.checked', function () {\n            this._filterProperty('status', 'allEngineConfigurationStatus');\n        }),\n\n\n        filterContent: Ember['default'].observer('myFilter', 'arrangedContent', function () {\n            var myFilter = this.get('myFilter'),\n                engineConfigurations = this.get('arrangedContent'),\n                filterRegExp;\n\n            engineConfigurations = engineConfigurations.filter(function (engineConfiguration) {\n                return engineConfiguration.get('filters').length === 0;\n            });\n\n            if (myFilter) {\n                filterRegExp = new RegExp(myFilter, 'gi');\n                engineConfigurations = engineConfigurations.filter(function (engineConfiguration) {\n                    return engineConfiguration.get('descriptiveName').match(filterRegExp) || engineConfiguration.get('thingType').match(filterRegExp);\n                });\n            }\n\n            this.set('filteredContent', engineConfigurations);\n\n        }),\n\n        actions: {\n            back: function () {\n                this.transitionToRoute('home');\n            }\n        }\n\n\n    });\n\n});","define('morgana/controllers/eventlog/index', ['exports', 'ember', 'morgana/mixins/pagination'], function (exports, Ember, pagination) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].ArrayController.extend(pagination.PaginationMixin, {\n\n        itemObjectName: 'eventlog',\n        itemsPerPage: 30,\n        meta: Ember['default'].computed('model', function () {\n            return this.store.metadataFor(\"eventlog\");\n        }),\n        init: function () {\n            this._super();\n            this.sortFields = Ember['default'].A();\n            this.sortFields.push(pagination.PaginationSortField.create({\n                name: 'created',\n                sortDirection: 'DESC'\n            }));\n        }\n    });\n\n});","define('morgana/controllers/flash-messages', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Controller.extend({\n        queuedMessages: Ember['default'].A(),\n        currentMessages: Ember['default'].A(),\n\n        messages: Ember['default'].computed.alias('currentMessages'),\n\n        hasMessages: Ember['default'].computed('messages', function () {\n            return this.get('messages').length > 0;\n        }),\n\n        now: function () {\n            this.setProperties({\n                queuedMessages: Ember['default'].A(),\n                currentMessages: this.get('queuedMessages')\n            });\n        },\n\n        actions: {\n            dismissFlashMessage: function (messageObj) {\n                this.get('currentMessages').removeObjects(this.get('currentMessages').filterBy('text', messageObj.get('text')).filterBy('type', messageObj.get('type')));\n            }\n        },\n\n        pushMessage: function (messageObject) {\n            this.get('queuedMessages').addObject(messageObject);\n        },\n\n        clearQueue: function () {\n            this.set('queuedMessages', Ember['default'].A());\n        },\n\n        clearCurrent: function () {\n            this.set('currentMessages', Ember['default'].A());\n        },\n\n        addMessage: function (message, messageType) {\n            var messageObject = Ember['default'].Object.create({\n                text: message,\n                messageType: messageType\n            });\n\n            this.pushMessage(messageObject);\n        }\n    });\n\n});","define('morgana/controllers/home/index', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Controller.extend({\n        needs: ['application'],\n\n        model: Ember['default'].computed(function () {\n            return this.get('controllers.application').get('currentUser');\n        }),\n\n        currentUser: Ember['default'].computed('model', function () {\n            return this.get('model');\n        }),\n\n        actions: {\n            addContentProject: function () {\n                this.transitionToRoute('engine-configurations');\n            },\n            creditOverview: function () {\n                this.transitionToRoute('credits');\n            }\n        }\n    });\n\n});","define('morgana/controllers/login', ['exports', 'ember', 'simple-auth/mixins/login-controller-mixin'], function (exports, Ember, LoginControllerMixin) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Controller.extend(LoginControllerMixin['default'], {\n        authenticator: 'authenticator:myax'\n    });\n\n});","define('morgana/controllers/navigation', ['exports', 'ember', 'morgana/mixins/permissions'], function (exports, Ember, permissions) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Controller.extend(permissions.PermissionsMixin, {\n        currentUser: Ember['default'].computed.alias('session.currentUser'),\n\n        actions: {\n            invalidateSession: function () {\n                this.get('session').invalidate();\n            }\n        }\n    });\n\n});","define('morgana/controllers/profile/edit-company', ['exports', 'ember', 'morgana/mixins/flash-message', 'morgana/mixins/server-side-model-fields', 'morgana/mixins/server-side-field-error'], function (exports, Ember, FlashMessageMixin, ServerSideModelFieldsMixin, ServerSideFieldErrorMixin) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].ObjectController.extend(ServerSideFieldErrorMixin['default'], ServerSideModelFieldsMixin['default'], FlashMessageMixin['default'], {\n\n        actions: {\n            edit: function () {\n                var controller = this,\n                    model = this.get('model');\n\n                model.save().then(function () {\n                    controller.addSuccessMessage('Organization saved.');\n                    controller.hideLoading('edit');\n                    controller.transitionToRoute('profile.index');\n                }, function (e) {\n                    controller.hideLoading('edit');\n                    controller.handleServerSideError('Error editing Organization!', e);\n                });\n            },\n            back: function () {\n                this.get('model').rollback();\n                this.hideLoading('back');\n                this.transitionToRoute('profile.index');\n            }\n        }\n    });\n\n});","define('morgana/controllers/profile/edit-user', ['exports', 'ember', 'morgana/mixins/flash-message', 'morgana/mixins/server-side-model-fields', 'morgana/mixins/server-side-field-error'], function (exports, Ember, FlashMessageMixin, ServerSideModelFieldsMixin, ServerSideFieldErrorMixin) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].ObjectController.extend(ServerSideFieldErrorMixin['default'], ServerSideModelFieldsMixin['default'], FlashMessageMixin['default'], {\n\n        actions: {\n            edit: function () {\n                var controller = this,\n                    model = this.get('model');\n\n                model.save().then(function () {\n                    controller.addSuccessMessage('User saved.');\n                    controller.hideLoading('edit');\n                    controller.transitionToRoute('profile.index');\n                }, function (e) {\n                    controller.hideLoading('edit');\n                    controller.handleServerSideError('Error editing User!', e);\n                });\n            },\n            back: function () {\n                this.get('model').rollback();\n                this.hideLoading('back');\n                this.transitionToRoute('profile.index');\n            }\n        }\n    });\n\n});","define('morgana/controllers/profile/index', ['exports', 'ember', 'morgana/mixins/server-side-model-fields'], function (exports, Ember, ServerSideModelFieldsMixin) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].ObjectController.extend(ServerSideModelFieldsMixin['default'], {\n\n        currentUser: Ember['default'].computed.alias('session.currentUser'),\n\n        actions: {\n            editCompany: function () {\n                this.hideLoading('editCompany');\n                this.transitionToRoute('profile.edit-company');\n            },\n            editUser: function () {\n                this.hideLoading('editUser');\n                this.transitionToRoute('profile.edit-user');\n            }\n        }\n    });\n\n});","define('morgana/controllers/tags/index', ['exports', 'ember', 'morgana/mixins/pagination', 'morgana/mixins/permissions', 'morgana/adapters/application', 'morgana/mixins/flash-message'], function (exports, Ember, pagination, permissions, ApplicationAdapter, FlashMessageMixin) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].ArrayController.extend(pagination.PaginationMixin, FlashMessageMixin['default'], permissions.PermissionsMixin, {\n        model: Ember['default'].A(),\n        useFacets: true,\n        itemObjectName: 'thing',\n        itemsPerPage: 30,\n        meta: Ember['default'].computed('model', function () {\n            return this.store.metadataFor(\"thing\");\n        }),\n\n        itemController: 'tags/thingRequirementLevelDetail',\n\n        facetModelMaps: {\n            'content_project_pk': {\n                modelName: 'contentProject',\n                modelKeyForName: 'name'\n            },\n            'status': {\n\n            },\n            'tag': {\n\n            },\n            'most_important_missing_requirement_level': {\n                modelName: 'requirementLevelStatus',\n                modelKeyForName: 'statusName'\n            }\n\n        },\n\n        facetFilterContentProject: null,\n        facetFilterContentProjects: function () {\n            return this.get('facetFilters').filter(function (facetFilter) {\n                return facetFilter.get('facetName') === 'content_project_pk' && facetFilter.get('active');\n            });\n        }.property('facetFilters.@each.active'),\n\n        facetFilterContentProjectObserver: Ember['default'].observer('facetFilterContentProject', function () {\n            this.handleFacetFilter('content_project_pk', 'facetFilterContentProject', 'facetFilterContentProjects');\n        }),\n\n\n        facetFilterTag: null,\n        facetFilterTags: function () {\n            return this.get('facetFilters').filter(function (facetFilter) {\n                return facetFilter.get('facetName') === 'tag' && facetFilter.get('active');\n            });\n        }.property('facetFilters.@each.active'),\n        facetFilterTagObserver: Ember['default'].observer('facetFilterTag', function () {\n            this.handleFacetFilter('tag', 'facetFilterTag', 'facetFilterTags');\n        }),\n\n        facetFilterStatus: null,\n        facetFilterStatus_: function () {\n            return this.get('facetFilters').filter(function (facetFilter) {\n                return facetFilter.get('facetName') === 'status' && facetFilter.get('active');\n            });\n        }.property('facetFilters.@each.active'),\n        facetFilterStatusObserver: Ember['default'].observer('facetFilterStatus', function () {\n            this.handleFacetFilter('status', 'facetFilterStatus', 'facetFilterStatus_');\n        }),\n\n        facetFilterValidity: null,\n        facetFilterValidities: function () {\n            return this.get('facetFilters').filter(function (facetFilter) {\n                return facetFilter.get('facetName') === 'most_important_missing_requirement_level' && facetFilter.get('active');\n            });\n        }.property('facetFilters.@each.active'),\n        facetFilterValidityObserver: Ember['default'].observer('facetFilterValidity', function () {\n            this.handleFacetFilter('most_important_missing_requirement_level', 'facetFilterValidity', 'facetFilterValidities');\n        }),\n\n        init: function () {\n            this._super();\n            this.sortFields = Ember['default'].A();\n            this.sortFields.push(pagination.PaginationSortField.create({\n                name: 'uid',\n                sortDirection: 'ASC'\n            }));\n            this.sortFields.push(pagination.PaginationSortField.create({\n                name: 'sku'\n            }));\n            this.sortFields.push(pagination.PaginationSortField.create({\n                name: 'name'\n            }));\n            this.sortFields.push(pagination.PaginationSortField.create({\n                name: 'content_project_pk'\n            }));\n            this.sortFields.push(pagination.PaginationSortField.create({\n                name: 'tag'\n            }));\n            this.sortFields.push(pagination.PaginationSortField.create({\n                name: 'most_important_missing_requirement_level'\n            }));\n            this.sortFields.push(pagination.PaginationSortField.create({\n                name: 'status'\n            }));\n            this.sortFields.push(pagination.PaginationSortField.create({\n                name: 'text_length_in_chars'\n            }));\n            this.sortFields.push(pagination.PaginationSortField.create({\n                name: 'modified'\n            }));\n        },\n\n        actions: {\n\n            home: function () {\n                this.transitionToRoute('home.index');\n            },\n\n            thingDetail: function (thing) {\n                var controller = this;\n                thing.get('contentProject').then(function (contentProject) {\n                    controller.transitionToRoute('content-project.thing-type.thing.index', contentProject.get('id'), thing.get('id'));\n                });\n\n            },\n            sortField: function (fieldName) {\n                this.sortByField(fieldName);\n            },\n            searchFields: function () {\n                this.searchFields();\n            },\n\n            uploadFile: function () {\n                this.transitionToRoute('tags.upload');\n            },\n\n            generateContent: function () {\n                var controller = this,\n                    flashMessages = this.get('controllers.flash-messages'),\n                    store = this.get('store'),\n                    adapter = ApplicationAdapter['default'].create(),\n                    urlParams = controller._buildUrlParams(),\n                    url = adapter.buildURL() + 'generate-content/?' + Ember['default'].$.param(urlParams);\n\n                adapter.ajax(url, 'POST').then(function (res) {\n                    var responseContent = res,\n                        msg,\n                        msgStatus;\n                    if (responseContent.status === 'CALLED') {\n                        msg = 'Content requests for Objects have been successfully scheduled.';\n                        msgStatus = 'success';\n                    } else if (responseContent.status === 'NOT_CALLED') {\n                        msgStatus = 'warning';\n                        msg = Ember['default'].View.create({\n                            controller: controller,\n                            tagName: 'span',\n                            template: Ember['default'].Handlebars.compile('There is already content for all Objects. Maybe you want to <a {{action \"forceGenerateContent\"}}>force regeneration</a>?')\n                        });\n                    }\n                    controller.hideLoading('generateContent');\n                    flashMessages.addMessage(msg, msgStatus);\n                    flashMessages.now();\n                }, function (e) {\n                    var msgStatus,\n                        msg;\n\n                    if (e && e.message) {\n                        msgStatus = 'error';\n                        msg = Ember['default'].View.create({\n                            controller: controller,\n                            tagName: 'span',\n                            template: Ember['default'].Handlebars.compile(e.message)\n                        });\n                        flashMessages.addMessage(msg, msgStatus);\n                        flashMessages.now();\n                    } else {\n                        Raven.captureMessage('Error generating Content!', e);\n                    }\n                    controller.hideLoading('generateContent');\n                });\n            },\n\n            forceGenerateContent: function () {\n                var controller = this,\n                    flashMessages = this.get('controllers.flash-messages'),\n\n                    adapter = ApplicationAdapter['default'].create(),\n                    urlParams = controller._buildUrlParams({force: true}),\n                    url = adapter.buildURL() + 'generate-content/?' + Ember['default'].$.param(urlParams);\n\n                adapter.ajax(url, 'POST').then(function (res) {\n                    var responseContent = res,\n                        msg,\n                        msgStatus;\n                    if (responseContent.status === 'CALLED') {\n                        msg = 'Content requests for Objects have been successfully scheduled.';\n                        msgStatus = 'success';\n                    } else if (responseContent.status === 'NOT_CALLED') {\n                        msgStatus = 'error';\n                        msg = 'Sorry, an error occured. This should not have happened';\n                        Raven.captureMessage('Error generating Content! Force returned NOT_CALLED', res);\n                    }\n                    controller.hideLoading('generateContent');\n                    flashMessages.addMessage(msg, msgStatus);\n                    flashMessages.now();\n                }, function (e) {\n                    var msgStatus,\n                        msg;\n                    if (e && e.message) {\n                        msgStatus = 'error';\n                        msg = Ember['default'].View.create({\n                            controller: controller,\n                            tagName: 'span',\n                            template: Ember['default'].Handlebars.compile(e.message)\n                        });\n                        flashMessages.addMessage(msg, msgStatus);\n                        flashMessages.now();\n                    } else {\n                        Raven.captureMessage('Error generating Content!', e);\n                    }\n                    controller.hideLoading('generateContent');\n                });\n\n            },\n\n            downloadContent: function () {\n                var controller = this,\n                    flashMessages = this.get('controllers.flash-messages'),\n\n                    adapter = ApplicationAdapter['default'].create(),\n                    urlParams = controller._buildUrlParams({force: true}),\n                    url = adapter.buildURL() + 'generate-export/?' + Ember['default'].$.param(urlParams);\n\n                adapter.ajax(url, 'POST').then(function (res) {\n                    var responseContent = res,\n                        msg,\n                        msgStatus;\n                    if (responseContent.status === 'CALLED') {\n                        msg = 'Your download will be generated. It will be available here shortly. (You might need to refresh this page, though)';\n                        msgStatus = 'success';\n                        flashMessages.addMessage(msg, msgStatus);\n                        controller.transitionToRoute('download-exports');\n                    } else if (responseContent.status === 'NOT_CALLED') {\n                        msgStatus = 'error';\n                        msg = 'A Download could not be generated.';\n                        Raven.captureMessage('Error generating Download!', res);\n                        flashMessages.addMessage(msg, msgStatus);\n                        flashMessages.now();\n                    }\n\n                }, function (e) {\n                    var msgStatus,\n                        msg;\n                    if (e && e.message) {\n                        msgStatus = 'error';\n                        msg = Ember['default'].View.create({\n                            controller: controller,\n                            tagName: 'span',\n                            template: Ember['default'].Handlebars.compile(e.message)\n                        });\n                        flashMessages.addMessage(msg, msgStatus);\n                        flashMessages.now();\n                    } else {\n                        Raven.captureMessage('Error generating Download!', e);\n                    }\n                });\n\n            },\n\n            buyCredits: function () {\n                this.hideLoading('buyCredits');\n                this.transitionToRoute('credits');\n            }\n\n        }\n    });\n\n});","define('morgana/controllers/tags/thing-requirement-level-detail', ['exports', 'ember', 'morgana/mixins/server-side-model-fields', 'morgana/mixins/permissions', 'morgana/models/thing'], function (exports, Ember, ServerSideModelFieldsMixin, permissions, ThingModel) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].ObjectController.extend(ServerSideModelFieldsMixin['default'], permissions.PermissionsMixin, {\n\n        isLoading: null,\n\n        model: null,\n        serverSideModelFieldsModel: Ember['default'].computed('concreteThing', function () {\n            return this.get('concreteThing');\n        }),\n\n\n        concreteThing: null,\n        showDetails: false,\n        showDetailsLoading: false,\n\n        hasDetails: Ember['default'].computed('model.mostImportantMissingRequirementLevel', function () {\n            return parseInt(this.get('model.mostImportantMissingRequirementLevel'), 10) > 0;\n        }),\n\n        actions: {\n            thingRequirementLevelDetail: function () {\n                this.set('showDetails', true);\n                if (this.get('concreteThing')) {\n                    return;\n                }\n\n                this.set('showDetailsLoading', true);\n                this.loadConcreteThing();\n            }\n        },\n\n\n        loadConcreteThing: function () {\n            var concreteThingPromise,\n                controller = this,\n                store = controller.get('store'),\n                model = controller.get('model'),\n                contentProject = model.get('contentProject');\n\n            contentProject.then(function (contentProject) {\n\n\n                concreteThingPromise = new Ember['default'].RSVP.Promise(function (resolve, reject) {\n                    contentProject.get('engineConfiguration').then(function (engineConfiguration) {\n                        var thingType = engineConfiguration.get('thingType'),\n                            thingAdapter = store.getDynamicAdapter(thingType),\n                            ret = {};\n                        thingAdapter.reopen({\n                            pathForType: function (type) {\n                                return 'content-project/' + contentProject.get('id') + '/thing';\n                            }\n                        });\n\n                        ret = store.getDynamicModel(thingType, ThingModel['default']).then(function () {\n                            return store.find(thingType, model.get('id'));\n                        });\n                        resolve(ret);\n                    });\n                });\n                concreteThingPromise.then(function (concreteThing) {\n                    controller.set('concreteThing', concreteThing);\n                    controller.set('showDetailsLoading', false);\n                });\n\n            });\n        }\n\n    });\n\n});","define('morgana/controllers/tags/upload', ['exports', 'ember', 'morgana/mixins/flash-message', 'morgana/mixins/server-side-field-error', 'morgana/mixins/permissions'], function (exports, Ember, FlashMessageMixin, ServerSideFieldErrorMixin, permissions) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].ObjectController.extend(FlashMessageMixin['default'], ServerSideFieldErrorMixin['default'], permissions.PermissionsMixin, {\n\n\n        actions: {\n            upload: function () {\n                var controller = this,\n                    bulkupload = this.get('model');\n\n                bulkupload.save().then(function (bulkupload) {\n                    controller.addSuccessMessage('File successfully uploaded.  It will take a second for the new data to be shown.');\n                    controller.hideLoading('upload');\n                    controller.transitionToRoute('tags.index');\n                }, function (e) {\n                    controller.handleServerSideError('Error uploading file!', e);\n                    controller.hideLoading('upload');\n                });\n            },\n            back: function () {\n                var controller = this,\n                    bulkupload = this.get('model');\n                bulkupload.deleteRecord();\n                controller.hideLoading('back');\n                controller.transitionToRoute('tags.index');\n            }\n        }\n    });\n\n});","define('morgana/controllers/things/index', ['exports', 'ember', 'morgana/mixins/pagination'], function (exports, Ember, pagination) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].ArrayController.extend(pagination.PaginationMixin, {\n\n        itemObjectName: 'thing',\n\n        contentProject: null,\n        itemsPerPage: 30,\n        meta: Ember['default'].computed('model', function () {\n            return this.store.metadataFor(\"thing\");\n        }),\n\n        init: function () {\n            this._super();\n            this.sortFields = Ember['default'].A();\n            this.sortFields.push(pagination.PaginationSortField.create({\n                name: 'uid',\n                sortDirection: 'ASC'\n            }));\n            this.sortFields.push(pagination.PaginationSortField.create({\n                name: 'name'\n            }));\n        },\n\n        actions: {\n            thingDetail: function (thing) {\n                var controller = this,\n                    contentProject = this.get('contentProject');\n                controller.transitionToRoute('content-project.thing-type.thing.index', contentProject.get('id'), thing.get('id'));\n            },\n\n\n            sortField: function (fieldName) {\n                this.sortByField(fieldName);\n            },\n            searchFields: function () {\n                this.searchFields();\n            }\n        }\n    });\n\n});","define('morgana/controllers/user-check-list/index', ['exports', 'ember', 'morgana/mixins/permissions'], function (exports, Ember, permissions) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].ObjectController.extend(permissions.PermissionsMixin, {\n        model: {},\n\n        actions: {\n            addContentProject: function () {\n                this.transitionToRoute('engine-configurations');\n            },\n            editProfile: function () {\n                window.location.href = '/my_profile/';\n            }\n        }\n    });\n\n});","define('morgana/helpers/can-do', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports.canDo = canDo;\n\n  function canDo (input) {\n    return input;\n  }\n\n  exports['default'] = function (permissionName, options) {\n      return Ember['default'].Handlebars.helpers.boundIf.call(this, 'permissions.' + permissionName, options);\n  }\n\n});","define('morgana/helpers/capitalize-string', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports.capitalizeString = capitalizeString;\n\n    function capitalizeString(value) {\n        return Ember['default'].String.capitalize(value);\n    }\n\n    exports['default'] = Ember['default'].Handlebars.makeBoundHelper(capitalizeString);\n\n});","define('morgana/helpers/field-detail', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports.fieldDetail = fieldDetail;\n\n  function fieldDetail(value) {\n    var fields = value.hash.fields,\n          model = value.hash.model,\n          rows = [],\n          ret;\n\n      fields.forEach(function (fieldData) {\n          var fieldName = fieldData.fieldName,\n              modelValue = model.get(fieldName),\n              realModelValue,\n              ecsapedValue,\n              requirementLevel = parseInt(fieldData.requirement_level, 10) || 0,\n              escapedLabel = Ember['default'].String.capitalize(Handlebars.Utils.escapeExpression(fieldData.label));\n\n          if (fieldData.read_only) {\n              return;\n          }\n\n          if (fieldData.type === 'field') {\n              return;\n          }\n\n          if (modelValue && fieldData.type === 'choice') {\n              realModelValue = modelValue.get('displayName');\n          } else {\n              realModelValue = modelValue;\n          }\n\n          ecsapedValue = Handlebars.Utils.escapeExpression(realModelValue);\n          rows.push('<tr><th class=\"text-right\">' + escapedLabel + '</th><td class=\"ax-field ax-field-level-' + requirementLevel + ' ax-field-' + (realModelValue ? 'not-' : '') + 'empty notranslate\">' + ecsapedValue + '</td></tr>');\n      });\n\n      ret = new Ember['default'].Handlebars.SafeString('<table><tbody>' + rows.join('') + '</tbody></table>');\n\n      return ret;\n  }\n\n  exports['default'] = Ember['default'].Handlebars.makeBoundHelper(fieldDetail);\n\n});","define('morgana/helpers/flash-messages', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports.flashMessages = flashMessages;\n\n    function flashMessages(input) {\n        return input;\n    }\n\n    exports['default'] = function (options) {\n        var template = options.fn,\n            container = options.data.keywords.controller.container,\n            controller = container.lookup('controller:flash-messages'),\n            parent = Ember['default'].ContainerView.extend({\n                hideAndShowMessage: Ember['default'].observer('controller.currentMessages', function () {\n                    var currentMessages = this.get('controller.currentMessages'),\n                        view;\n\n                    if (currentMessages) {\n                        view = Ember['default'].View.create({\n                            template: template\n                        });\n                    }\n\n                    this.set('currentView', view);\n                })\n            });\n\n        options.hash.controller = controller;\n        options.hashTypes = options.hashTypes || {};\n        Ember['default'].Handlebars.helpers.view.call(this, parent, options);\n    }\n\n});","define('morgana/helpers/pluralize-string', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports.pluralizeString = pluralizeString;\n\n    function pluralizeString(number, opts) {\n        var single = opts.hash['s'];\n        Ember['default'].assert('pluralize requires a singular string (s)', single);\n        var plural = opts.hash['p'] || single + 's';\n        return (number === 1) ? single : plural;\n    }\n\n    exports['default'] = Ember['default'].Handlebars.makeBoundHelper(pluralizeString);\n\n});","define('morgana/helpers/text-with-errors', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports.textWithErrors = textWithErrors;\n\n  function textWithErrors(text, options) {\n    var $ = Ember['default'].$,\n          errors = options.hash.errors || [],\n          x = 0,\n          y = 0,\n          addedNodes = 0,\n          $text = $('<p></p>').text(text);\n\n      $.each(errors, function (index, error) {\n          var textNode,\n              textContent,\n              prefix,\n              wrong,\n              suffix,\n              tooltip,\n              $span = $('<span class=\"languagetool-error languagetool-rule-' + error.ruleId + '\"></span>');\n\n          if (y < error.fromy) {\n              x = 0;\n              y = error.fromy;\n          }\n\n          textNode = $text.contents()[addedNodes + 2 * error.fromy];\n\n          if (!textNode) {\n              return; // FIXME: just a hotfix this way.\n          }\n\n          textContent = textNode.textContent;\n          prefix = textContent.slice(0, error.fromx - x);\n          wrong = textContent.slice(error.fromx - x, error.tox - x);\n          suffix = textContent.slice(error.tox - x);\n\n          tooltip = error.msg;\n          if (error.replacements.length) {\n              tooltip += '\\n\\nSuggested replacements: \"' + error.replacements.join('\", \"') + '\"';\n          }\n          $span.attr('title', tooltip);\n          $span.text(wrong);\n          $(textNode).replaceWith([document.createTextNode(prefix), $span, document.createTextNode(suffix)]);\n          x = error.tox;\n          addedNodes += !!prefix.length + !!suffix.length;\n      });\n\n      return new Ember['default'].Handlebars.SafeString($text.html());\n  }\n\n  exports['default'] = Ember['default'].Handlebars.makeBoundHelper(textWithErrors);\n\n});","define('morgana/initializers/ember-moment', ['exports', 'ember-moment/helpers/moment', 'ember-moment/helpers/ago', 'ember'], function (exports, moment, ago, Ember) {\n\n  'use strict';\n\n  var initialize = function(/* container, app */) {\n    Ember['default'].Handlebars.helper('moment', moment.moment);\n    Ember['default'].Handlebars.helper('ago', ago.ago);\n  };\n\n  exports['default'] = {\n    name: 'ember-moment',\n\n    initialize: initialize\n  };\n\n  exports.initialize = initialize;\n\n});","define('morgana/initializers/export-application-global', ['exports', 'ember', 'morgana/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  exports.initialize = initialize;\n\n  function initialize(container, application) {\n    var classifiedName = Ember['default'].String.classify(config['default'].modulePrefix);\n\n    if (config['default'].exportApplicationGlobal && !window[classifiedName]) {\n      window[classifiedName] = application;\n    }\n  };\n\n  exports['default'] = {\n    name: 'export-application-global',\n\n    initialize: initialize\n  };\n\n});","define('morgana/initializers/flash-messages', ['exports', 'morgana/controllers/flash-messages'], function (exports, FlashMessagesController) {\n\n  'use strict';\n\n  exports.initialize = initialize;\n\n  function initialize(container) {\n      container.register('controller:flash-messages', FlashMessagesController['default']);\n  }\n\n  exports['default'] = {\n    name: 'flash-messages',\n    initialize: initialize\n  };\n\n});","define('morgana/initializers/myax', ['exports', 'morgana/authenticators/myax', 'morgana/authorizers/myax'], function (exports, Authenticator, Authorizer) {\n\n  'use strict';\n\n  exports.initialize = initialize;\n\n  function initialize(container /* , application */) {\n    // application.inject('route', 'foo', 'service:foo');\n       container.register('authorizer:myax', Authorizer['default']);\n      container.register('authenticator:myax', Authenticator['default']);\n  }\n\n  exports['default'] = {\n      name: 'myax',\n      before: 'simple-auth',\n      initialize: initialize\n  };\n\n});","define('morgana/initializers/server-side-model', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports.initialize = initialize;\n\n  function initialize(container, application) {\n      function registerModel (modelName, model) {\n          application.register('model:' + modelName, model, {instantiate: false});\n      }\n\n      function registerAdapter (adapterName, adapter) {\n          application.register('adapter:' + adapterName, adapter, {instantiate: true});\n      }\n\n      application.register('serverSideModel:modelRegistry', registerModel, {instantiate: false});\n      application.inject('store', 'modelRegistry', 'serverSideModel:modelRegistry');\n\n      application.register('serverSideModel:adapterRegistry', registerAdapter, {instantiate: false});\n      application.inject('store', 'adapterRegistry', 'serverSideModel:adapterRegistry');\n\n  }\n\n  exports['default'] = {\n    name: 'server-side-model',\n    initialize: initialize\n  };\n\n});","define('morgana/initializers/simple-auth', ['exports', 'simple-auth/configuration', 'simple-auth/setup', 'morgana/config/environment'], function (exports, Configuration, setup, ENV) {\n\n  'use strict';\n\n  exports['default'] = {\n    name:       'simple-auth',\n    initialize: function(container, application) {\n      Configuration['default'].load(container, ENV['default']['simple-auth'] || {});\n      setup['default'](container, application);\n    }\n  };\n\n});","define('morgana/mixins/django-rest-file-adapter', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Mixin.create({\n\t});\n\n});","define('morgana/mixins/flash-message', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Mixin.create({\n        needs: ['flash-messages'],\n\n        addErrorMessage: function (msg) {\n            var flashMessages = this.get('controllers.flash-messages');\n            flashMessages.addMessage(msg, 'error');\n        },\n        addSuccessMessage: function (msg) {\n            var flashMessages = this.get('controllers.flash-messages');\n            flashMessages.addMessage(msg, 'success');\n        },\n\n        showErrorMessage: function (msg) {\n            var flashMessages = this.get('controllers.flash-messages');\n            this.addErrorMessage(msg);\n            flashMessages.now();\n        },\n        showSuccessMessage: function (msg) {\n            var flashMessages = this.get('controllers.flash-messages');\n            this.addSuccessMessage(msg);\n            flashMessages.now();\n        }\n    });\n\n});","define('morgana/mixins/flash-messages-route', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Mixin.create({\n        flashMessage: function (message, messageType) {\n            var controller = this.controllerFor('flashMessages'),\n                messageObject = Ember['default'].Object.create({\n                    text: message,\n                    messageType: ''\n                });\n            if (messageType !== undefined) {\n                messageObject.set('messageType', messageType);\n            }\n            controller.pushMessage(messageObject);\n\n            return controller;\n        },\n\n\n        enter: function () {\n            this._super.apply(this, arguments);\n            var controller = this.controllerFor('flashMessages'),\n                routeName = this.get('routeName'),\n                target = this.get('router.router.activeTransition.targetName');\n\n            // do not display message in loading route, wait until\n            // any loading is done.\n            if (routeName !== \"loading\" && routeName === target) {\n                controller.now();\n            }\n        }\n    });\n\n});","define('morgana/mixins/jira-report', ['exports', 'ember', 'morgana/mixins/flash-message'], function (exports, Ember, FlashMessageMixin) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Mixin.create({\n        needs: ['application'],\n\n        _showJiraCollectorDialog: function() {\n            return;\n        },\n\n        _showJiraCollectorLoadError: function () {\n            this.showErrorMessage('Loading the report form failed.');\n            Raven.captureMessage('Error loading the jira collector form!');\n        },\n\n        _initJiraReport: function () {\n            var self = this,\n                $ = Ember['default'].$,\n                currentUser = this.get('controllers.application').get('currentUser');\n\n            return new Ember['default'].RSVP.Promise(function(resolve, reject) {\n                currentUser.then(function (cu) {\n\n                    window.ATL_JQ_PAGE_PROPS = window.ATL_JQ_PAGE_PROPS || {};\n                    $.extend(window.ATL_JQ_PAGE_PROPS, {\n                        fieldValues: {\n                            fullname: cu.get('fullName'),\n                            email: cu.get('email') || 'foo@example.com',\n                            description: 'URL: ' + window.location.href + '\\n\\n'\n                        }\n                    });\n\n                    $.ajax({\n                        url: window.AX.jiraIssueCollector.config.scriptUrl, // TODO: assert that this is configured\n                        type: \"get\",\n                        cache: false,\n                        dataType: \"script\",\n                        success: function () {\n                            return resolve();\n                        },\n                        error: function () {\n                            return reject();\n                        }\n                    });\n                });\n            }, 'Jira: JiraIssueCollector load script');\n        },\n\n        reportJiraIssue: function () {\n            var self = this,\n                initJiraReport = self._initJiraReport();\n\n            initJiraReport.then(\n                function () {self.hideLoading('reportJiraIssue'); Ember['default'].run.scheduleOnce('actions', self, window.AX.jiraIssueCollector.triggerJiraCollectorDialog);},\n                function () {self.hideLoading('reportJiraIssue'); self._showJiraCollectorLoadError();}\n\n            );\n        }\n\n    });\n\n});","define('morgana/mixins/loading-stages-controller', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Mixin.create({\n        actionsLoadingStages: {},\n\n        showLoading: function (actionName) {\n            this.set('actionsLoadingStages.' + actionName, true);\n        },\n        hideLoading: function (actionName) {\n            this.set('actionsLoadingStages.' + actionName, false);\n        }\n    });\n\n});","define('morgana/mixins/loading-stages-route', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Mixin.create({\n\n        setupController: function (controller, context) {\n            controller.set('actionsLoadingStages', {});\n\n            this._super(controller, context);\n        }\n\n    });\n\n});","define('morgana/mixins/pagination', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    var PaginationMixin,\n        PaginationSortField,\n        PaginationFacetOption;\n\n    exports.PaginationMixin = PaginationMixin = Ember['default'].Mixin.create({\n\n        meta: {}, // you need to add meta from requests\n        itemsPerPage: 10,\n        itemObjectName: '', // name of the objects to query for\n        selectedPage: 1,\n\n        useFacets: false,\n        facetModelMaps: {},\n\n\n        notFound: true,\n        isLoading: true,\n\n        searchTerm: '',\n        lastUsedSearchTerm: '',\n        searchTermStartSearchAtLength: 0,\n        loadingPromise: null,\n\n        showSearchTermField: Ember['default'].computed('lastUsedSearchTerm', 'hasItems', function () {\n            return this.get('hasItems') || this.get('lastUsedSearchTerm');\n        }),\n\n        sortFields: Ember['default'].A(),\n        facetFilters: Ember['default'].A(),\n\n        sortFieldData: Ember['default'].computed('sortFields.@each.asQueryParam', function () {\n            var ret = {},\n                sortFields = this.get('sortFields');\n\n            sortFields.forEach(function (sortField) {\n                ret[sortField.get('name')] = sortField;\n            });\n\n            return ret;\n        }),\n\n        sortParam: Ember['default'].computed('sortFields.@each.asQueryParam', function () {\n            var sortStrings = [],\n                activeSortFields = this.get('sortFields').rejectBy('asQueryParam', null);\n\n            activeSortFields.forEach(function (field) {\n                sortStrings.push(field.get('asQueryParam'));\n            });\n\n            return sortStrings.join(',');\n        }),\n\n        getFacetParams: function () {\n            var $ = Ember['default'].$,\n                facetParams = {},\n                facetFilters;\n            if (!this.get('useFacets')) {\n                return facetParams;\n            }\n\n            facetFilters = this.get('facetFilters').filterBy('checked');\n\n            facetFilters.forEach(function (facetFilter) {\n                $.extend(facetParams, facetFilter.get('asQueryParam'));\n            });\n\n            return facetParams;\n        },\n\n        needs: ['application'],\n        application: Ember['default'].computed.alias(\"controllers.application\"),\n\n\n        hasItems: Ember['default'].computed('totalItems', 'notFound', function () {\n            return !this.get(\"notFound\") && parseInt(this.get('totalItems'), 10) > 0;\n        }),\n\n        allPages: Ember['default'].computed('totalPages', function () {\n            var totalPages = this.get('totalPages'),\n                pages = [],\n                i;\n\n            for (i = 1; i <= totalPages; i++) {\n                pages.push(i);\n            }\n\n            return pages;\n        }),\n\n        totalPages: Ember['default'].computed('totalItems', function () {\n            return Math.ceil(this.get('totalItems') / this.get('itemsPerPage')) || 1;\n        }),\n\n        totalItems: Ember['default'].computed('meta.@each', function () {\n            return this.get('meta').count || 0;\n        }),\n\n        currentPage: Ember['default'].computed('meta.@each', function () {\n            return this.get('meta').page || 0;\n        }),\n\n\n        _buildUrlParams: function (params) {\n            var controller = this,\n                $ = Ember['default'].$,\n                urlParams = {},\n                sortParam = controller.get('sortParam'),\n                facetParams = controller.getFacetParams(),\n                searchTerm = controller.get('lastUsedSearchTerm'),\n                searchTermStartSearchAtLength = controller.get('searchTermStartSearchAtLength');\n\n            // facets\n            $.extend(urlParams, facetParams);\n\n            // sort\n            if (sortParam) {\n                urlParams.ordering = sortParam;\n            }\n\n            // search\n            if (searchTerm.length >= searchTermStartSearchAtLength) {\n                urlParams.search = searchTerm;\n            }\n\n            if (params) {\n                // add whats given to this method (e.g. {page: 1})\n                $.extend(urlParams, params);\n            }\n\n            return urlParams;\n        },\n\n        _loadPage: function (page) {\n            var controller = this,\n                params,\n                searchTerm = controller.get('searchTerm'),\n                paginationParams = {\n                    page: page,\n                    page_size: controller.get('itemsPerPage')\n                },\n                itemObjectName = controller.get('itemObjectName'),\n                loadingPromise = controller.get('loadingPromise') || new Ember['default'].RSVP.Promise(function (resolve) {\n                    resolve();\n                });\n\n            controller.set('lastUsedSearchTerm', searchTerm);\n\n            params = controller._buildUrlParams(paginationParams);\n\n            controller.set('loadingPromise', loadingPromise.then(function () {\n                var prom;\n                controller.set('isLoading', true);\n                prom = controller.store.find(itemObjectName, params).then(\n                    function (items) {\n                        controller.set('notFound', false);\n                        controller.set('isLoading', false);\n                        return items;\n                    },\n                    function () {\n                        controller.set('notFound', true);\n                        controller.set('isLoading', false);\n                        return [];\n                    }\n                );\n\n                return prom;\n            }));\n\n            return controller.get('loadingPromise');\n        },\n\n\n        facetsObserver: Ember['default'].observer('model', function () {\n            var controller = this,\n                facetFilters = this.get('facetFilters'),\n                itemObjectName = this.get('itemObjectName'),\n                facetModelMaps = this.get('facetModelMaps'),\n                aggregations = this.get('meta.aggregations');\n\n            if (!this.get('useFacets') || !aggregations || !facetModelMaps) {\n                return;\n            }\n\n            facetFilters.setEach('docCount', 0);\n\n\n            Object.keys(facetModelMaps).forEach(function (facetFilterName) {\n                var facetModelMap = facetModelMaps[facetFilterName],\n                    aggregation = aggregations[facetFilterName] || {buckets: []},\n                    buckets = aggregation.buckets || [];\n\n                buckets.forEach(function (bucket) {\n                    var facetFilter = facetFilters.find(function (item) {\n                            return item.get('facetName') === facetFilterName && item.get('key') === bucket.key;\n                        }),\n                        displayName;\n\n                    if (!facetFilter) {\n                        if (facetModelMap.modelName) {\n                            facetFilters.push(PaginationFacetOption.create({\n                                key: bucket.key,\n                                docCount: bucket.doc_count,\n                                facetName: facetFilterName,\n                                name: null\n                            }));\n                            controller.store.findById(facetModelMap.modelName, bucket.key).then(function (model) {\n\n                                var displayName = model.get(facetModelMap.modelKeyForName),\n                                    updateFacetFilter;\n\n                                updateFacetFilter = facetFilters.find(function (item) {\n                                    return item.get('facetName') === facetFilterName && item.get('key') === bucket.key;\n                                });\n\n                                if (updateFacetFilter) {\n                                    updateFacetFilter.set('name', displayName);\n                                } else {\n                                    facetFilters.push(PaginationFacetOption.create({\n                                        key: bucket.key,\n                                        docCount: bucket.doc_count,\n                                        facetName: facetFilterName,\n                                        name: displayName\n                                    }));\n                                }\n\n\n                                return;\n                            });\n                        } else {\n                            displayName = bucket.key;\n                            facetFilters.push(PaginationFacetOption.create({\n                                key: bucket.key,\n                                docCount: bucket.doc_count,\n                                facetName: facetFilterName,\n                                name: displayName\n                            }));\n                        }\n\n                    } else {\n    //                    facetFilter.set('active', true);\n                        facetFilter.set('docCount', bucket.doc_count);\n                    }\n                });\n            });\n\n\n        }),\n\n        // Better trigger manually for now\n    //    searchTermObserver: Ember.observer('searchTerm', function () {\n    //        var controller = this,\n    //            page = 1, //always start at first page if searching\n    //            searchTermStartSearchAtLength = controller.get('searchTermStartSearchAtLength'),\n    //            searchTerm = controller.get('searchTerm');\n    //\n    //        if (!searchTerm.length || searchTerm.length >= searchTermStartSearchAtLength) {\n    //\n    //            controller._loadPage(1).then(function (items) {\n    //                controller.set('selectedPage', page);\n    //                controller.set('model', items);\n    //            });\n    //        }\n    //\n    //        return;\n    //    }),\n\n        // Better trigger manually for now\n    //    sortParamObserver: Ember.observer('sortParam', function () {\n    //        var controller = this,\n    //            page = 1; //always start at first page if searching\n    //\n    //        controller._loadPage(page).then(function (items) {\n    //            controller.set('selectedPage', page);\n    //            controller.set('model', items);\n    //        });\n    //\n    //    }),\n\n\n        jumpToPage: Ember['default'].observer('selectedPage', function () {\n            var self = this,\n                page = this.get('selectedPage'),\n                maxPage = this.get('totalPages'),\n                minPage = 1;\n\n            if (page > maxPage) {\n                page = maxPage;\n            } else if (page < minPage) {\n                page = minPage;\n            }\n\n            if (page === this.get('currentPage')) {\n                return;\n            }\n\n            this._loadPage(page).then(function (items) {\n                self.set('model', items);\n            });\n\n        }),\n\n        searchFields: function () {\n            var controller = this,\n                page = 1, //always start at first page if searching\n                searchTermStartSearchAtLength = controller.get('searchTermStartSearchAtLength'),\n                searchTerm = controller.get('searchTerm');\n\n            if (!searchTerm.length || searchTerm.length >= searchTermStartSearchAtLength) {\n\n                controller._loadPage(1).then(function (items) {\n                    controller.set('selectedPage', page);\n                    controller.set('model', items);\n                    controller.hideLoading('searchFields');\n                }, function (e) {\n                    controller.hideLoading('searchFields');\n                });\n            }\n\n            return;\n        },\n\n\n        handleFacetFilter: function (facetFilterName, facetFilterControllerPropertyName, allFacetsControllerPropertyName) {\n            var facetFilterControllerProperty = this.get(facetFilterControllerPropertyName);\n            var allFacetsControllerProperty = this.get(allFacetsControllerPropertyName).filter(function (facetFilter) {\n                return facetFilter.get('facetName') === facetFilterName;\n            });\n            allFacetsControllerProperty.setEach('checked', false);\n\n            if (facetFilterControllerProperty) {\n                facetFilterControllerProperty.set('checked', true);\n            }\n            this.filterFacets();\n        },\n\n        filterFacets: function () {\n            var controller = this,\n                page = 1; //always start at first page if searching\n\n            controller._loadPage(page).then(function (items) {\n                controller.set('selectedPage', page);\n                controller.set('model', items);\n            });\n\n            return;\n        },\n\n\n        sortByField: function (fieldName) {\n            var controller = this,\n                page = 1, //always start at first page if searching\n                otherSortFields = this.get('sortFields').rejectBy('name', fieldName).rejectBy('sortDirection', null),\n                sortFields = this.get('sortFields').filterBy('name', fieldName),\n                sortField = sortFields ? sortFields.objectAt(0) : null;\n\n            otherSortFields.forEach(function (otherSortField) {\n                otherSortField.sortNone();\n            });\n\n            if (sortField) {\n                sortField.sortNext();\n            }\n\n            controller._loadPage(page).then(function (items) {\n                controller.set('selectedPage', page);\n                controller.set('model', items);\n            });\n        },\n\n\n        actions: {\n            next: function () {\n                var self = this,\n                    next = this.get('meta.next');\n                if (next) {\n\n                    this._loadPage(next).then(function (items) {\n                        self.set('selectedPage', next);\n                        self.set('model', items);\n                    });\n                }\n            },\n            previous: function () {\n                var self = this,\n                    previous = this.get('meta.previous');\n                if (previous) {\n                    this._loadPage(previous).then(function (items) {\n                        self.set('selectedPage', previous);\n                        self.set('model', items);\n                    });\n                }\n            }\n\n        }\n\n    });\n\n    exports.PaginationFacetOption = PaginationFacetOption = Ember['default'].Object.extend({\n        name: null,\n        key: null,\n        docCount: 0,\n        facetName: null,\n        displayName: Ember['default'].computed('name', 'docCount', function () {\n            return this.get('name') + ' (' + this.get('docCount') + ')';\n        }),\n        asQueryParam: Ember['default'].computed('facetName', 'key', function () {\n            var ret = {};\n            ret[this.get('facetName')] = this.get('key');\n            return ret;\n        }),\n        checked: false,\n        active: Ember['default'].computed('docCount', function () {\n            return this.get('docCount') > 0;\n        })\n    });\n\n    exports.PaginationSortField = PaginationSortField = Ember['default'].Object.extend({\n        name: null,\n        sortDirection: null,\n\n        asQueryParam: Ember['default'].computed('name', 'sortDirection', function () {\n            var name = this.get('name'),\n                underscoredName = Ember['default'].String.underscore(name),\n                sortDirection = this.get('sortDirection'),\n                queryParam = '';\n\n            if (!name || sortDirection === null) {\n                return null;\n            }\n\n            if (sortDirection === 'DESC') {\n                queryParam += '-';\n            }\n\n            queryParam += underscoredName;\n\n            return queryParam;\n\n        }),\n\n        sortAscending: function () {\n            this.set('sortDirection', 'ASC');\n        },\n\n        sortDescending: function () {\n            this.set('sortDirection', 'DESC');\n        },\n\n        sortNone: function () {\n            this.set('sortDirection', null);\n        },\n\n        sortNext: function () {\n            var currentSortDirection = this.get('sortDirection');\n            if (currentSortDirection === null) {\n                this.sortAscending();\n            } else if (currentSortDirection === 'ASC') {\n                this.sortDescending();\n            } else {\n                this.sortNone();\n            }\n        },\n\n        cssClass: Ember['default'].computed('sortDirection', function () {\n            var sortDirection = this.get('sortDirection');\n\n            if (sortDirection === null) {\n                return 'sort-none';\n            }\n\n            if (sortDirection === 'ASC') {\n                return 'sort-asc';\n            }\n\n            if (sortDirection === 'DESC') {\n                return 'sort-desc';\n            }\n\n        })\n    });\n\n});","define('morgana/mixins/permissions', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    var Permissions,\n        Permission,\n        PermissionsMixin;\n\n    exports.Permissions = Permissions = Ember['default'].Object.extend({\n        _perms: Ember['default'].A(),\n        all: {},\n\n        register: function (obj) {\n            this._perms.removeObjects(this._perms.filterBy('name', obj.get('name')));\n            this._perms.addObject(obj);\n        },\n\n        _all: Ember['default'].observer('_perms.[]', '_perms.@each.can', function () {\n            var perms = {};\n            this.get(\"_perms\").forEach(function (obj) {\n                perms[obj.get('name')] = obj.get('can');\n            });\n            this.all = perms;\n        }),\n\n        getPermission: function (identifier) {\n            var ret = this._perms.filterBy('name', identifier);\n\n            if (ret) {\n                return ret.objectAt(0);\n            } else {\n                return Permission.create();\n            }\n        }\n\n    }).create();\n\n    exports.Permission = Permission = Ember['default'].Object.extend({\n        content: null,\n        can: false\n    });\n\n    exports.PermissionsMixin = PermissionsMixin = Ember['default'].Mixin.create({\n        _permissions: Permissions._perms,\n        permissions: Ember['default'].computed('_permissions.[]', '_permissions.@each.can', function () {\n            return Permissions.all;\n        })\n    });\n\n});","define('morgana/mixins/server-side-field-error', ['exports', 'ember', 'morgana/mixins/flash-message'], function (exports, Ember, FlashMessageMixin) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Mixin.create(FlashMessageMixin['default'], {\n\n\n        handleServerSideError: function handleServerSideError(errorMessage, errorData) {\n             var $ = Ember['default'].$,\n                 errorMessages = [],\n                 verboseErrorMessages = [],\n                 controller = this;\n\n            if (!errorData || !errorData.responseJSON) {\n                controller.reportServerSideFieldError([errorMessage, 'NO DATA PROVIDED']);\n                controller.displayServerSideFieldError([errorMessage]);\n                return;\n            }\n\n            $.each(errorData.responseJSON, function (modelName, modelErrors) {\n                var modelErrorMessages = [];\n                $.each(modelErrors, function (fieldName, messages) {\n                    modelErrorMessages.push(Ember['default'].String.fmt('Error for field \"%@\": %@', controller._fieldNameToLabel(fieldName), messages.join(' ')));\n                });\n\n                errorMessages.push(Ember['default'].String.fmt('%@\\n %@', errorMessage, modelErrorMessages.join('\\n')));\n                verboseErrorMessages.push(Ember['default'].String.fmt('[%@] errorMessage \\n %@', modelName, errorMessage, modelErrorMessages.join('\\n')));\n\n            });\n\n            controller.reportServerSideFieldError(verboseErrorMessages);\n            controller.displayServerSideFieldError(errorMessages);\n\n        },\n\n\n        reportServerSideFieldError: function (errorMessages) {\n            try {\n                Raven.captureMessage('Server reported error', errorMessages.join('\\n'));\n            } catch (e) {\n                console.log('Could not inform sentry about error');\n            }\n        },\n\n        displayServerSideFieldError: function (errorMessages) {\n\n           var controller = this,\n               msg;\n\n            msg = Ember['default'].View.create({\n                controller: controller,\n                tagName: 'p',\n                template:  Ember['default'].Handlebars.compile(errorMessages.join('\\n').replace(/\\n/g, '<br />'))\n            });\n\n            controller.showErrorMessage(msg);\n\n        },\n\n\n\n        _fieldNameToLabel: function (fieldName) {\n            return Ember['default'].String.capitalize(Ember['default'].String.underscore(fieldName).replace('_', ''));\n        }\n\n    });\n\n});","define('morgana/mixins/server-side-model-adapter', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Mixin.create({\n\n        useUpdateFieldsForDynamicModels: false,\n         /**\n         Called by the store in order to fetch a JSON array for all\n         of the records fields for a given type.\n         The `findAll` method makes an Ajax (HTTP OPTIONS) request to a URL computed by `buildURL`, and returns a\n         promise for the resulting payload.\n         @private\n         @method findFields\n         @param {DS.Store} store\n         @param {subclass of DS.Model} type\n         @param {String} overwriteUrl\n         @return {Promise} promise\n         */\n        findFields: function (store, type) {\n            var url = this.buildURL(type.typeKey, this.get('useUpdateFieldsForDynamicModels'));\n            return this.ajax(url, 'OPTIONS');\n        }\n    });\n\n});","define('morgana/mixins/server-side-model-fields', ['exports', 'ember', 'morgana/models/field-requirement-level-data'], function (exports, Ember, FieldRequirementLevelModel) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Mixin.create({\n\n        serverSideModelFieldsModel: Ember['default'].computed('model', function () {\n            return this.get('model');\n        }),\n\n        fields: Ember['default'].computed('serverSideModelFieldsModel', function () {\n            return this.get('serverSideModelFieldsModel').constructor._fields.rejectBy('read_only').rejectBy('type', 'field');\n        }),\n\n\n        mainFields: Ember['default'].computed('fields', function () {\n            return this.get('fields').filter(function (field) {\n                return field.requirement_level > 0;\n            });\n        }),\n\n        optionalFields: Ember['default'].computed('fields', function () {\n            return this.get('fields').filter(function (field) {\n                return field.requirement_level <= 0;\n            });\n        }),\n\n        improvableFields: Ember['default'].computed('mainFields', 'serverSideModelFieldsModel', function () {\n            var model = this.get('serverSideModelFieldsModel');\n            return this.get('mainFields').filter(function (fieldData) {\n                var fieldName = fieldData.fieldName,\n                    modelValue = model.get(fieldName),\n                    realModelValue;\n\n                if (fieldData.read_only) {\n                    return;\n                }\n\n                if (fieldData.type === 'field') {\n                    return;\n                }\n\n                if (modelValue && fieldData.type === 'choice') {\n                    realModelValue = modelValue.get('displayName');\n                } else {\n                    realModelValue = modelValue;\n                }\n\n\n                return !realModelValue;\n            });\n        }),\n\n\n        improvableFieldsRequirementLevelData: Ember['default'].computed('improvableFields', 'serverSideModelFieldsModel', function () {\n            return this._getRequirementLevelDataForFields(this.get('improvableFields'));\n        }),\n        optionalFieldsRequirementLevelData: Ember['default'].computed('optionalFields', 'serverSideModelFieldsModel', function () {\n            return this._getRequirementLevelDataForFields(this.get('optionalFields'));\n        }),\n        mainFieldsRequirementLevelData: Ember['default'].computed('mainFields', 'serverSideModelFieldsModel', function () {\n            return this._getRequirementLevelDataForFields(this.get('mainFields'));\n        }),\n        allFieldsRequirementLevelData: Ember['default'].computed('fields', 'serverSideModelFieldsModel', function () {\n            return this._getRequirementLevelDataForFields(this.get('fields'));\n        }),\n\n        _getRequirementLevelDataForFields: function (fields) {\n            var controller = this,\n                model = this.get('serverSideModelFieldsModel'),\n                fieldsRequirementLevelData = [];\n            fields.forEach(function (fieldData) {\n                var fieldName = fieldData.fieldName,\n                    modelValue = model.get(fieldName),\n                    realModelValue;\n\n                if (modelValue && fieldData.type === 'choice') {\n                    realModelValue = modelValue.get('displayName');\n                } else {\n                    realModelValue = modelValue;\n                }\n\n                fieldsRequirementLevelData.push(controller.get('store').createRecord('field-requirement-level-data', {\n                    value: realModelValue,\n                    label: fieldData.label,\n                    requirementLevel: (parseInt(fieldData.requirement_level, 10) || 0)\n                }));\n            });\n\n            return fieldsRequirementLevelData;\n        }\n    });\n\n});","define('morgana/mixins/server-side-model-serializer', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Mixin.create({\n        extractFindFields: function (store, type, payload) {\n            var rawFields = payload[Object.keys(payload)[0]].actions.POST || payload[Object.keys(payload)[0]].actions.PUT,\n                rawFieldsArray;\n\n            rawFieldsArray = Ember['default'].$.map(rawFields, function (fieldData, fieldName) {\n                if (fieldName === 'id') {\n                    return;\n                }\n                fieldData.fieldName = Ember['default'].String.camelize(fieldName);\n                fieldData.field_name = fieldName;\n                return fieldData;\n            });\n            return rawFieldsArray;\n        }\n    });\n\n});","define('morgana/mixins/server-side-model-store', ['exports', 'ember', 'ember-data', 'morgana/app', 'morgana/adapters/application', 'morgana/serializers/application', 'morgana/models/model-field-choice'], function (exports, Ember, DS, App, ApplicationAdapter, ApplicationSerializer, ModelFieldChoiceModel) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Mixin.create({\n\n        _normalizeTypeKey: function(key) {\n            return Ember['default'].String.camelize(key);\n        },\n\n        dummyModelFor: function (key) {\n            return {\n                typeKey: this._normalizeTypeKey(key),\n                store: this\n            };\n        },\n\n        findFields: function (typeName) {\n            var type = this.dummyModelFor(typeName);\n            return this.fetchFields(type);\n        },\n\n        fetchFields: function (type) {\n            var store = this,\n                adapter = store.getDynamicAdapter(type.typeKey),\n                promise = adapter.findFields(store, type),\n                serializer = ApplicationSerializer['default'].create();\n\n            return new Ember['default'].RSVP.Promise(function (resolve, reject) {\n                resolve(\n                    promise.then(function (adapterPayload) {\n                        var extractedPayload = serializer.extract(store, type, adapterPayload, null, 'findFields');\n                        return Ember['default'].A(extractedPayload);\n                    })\n                );\n            });\n        },\n\n        getDynamicAdapter: function (typeName) {\n            var adapterName = this._normalizeTypeKey(typeName),\n                adapter = this.container.lookup('adapter:' + adapterName) || this.createDynamicAdapter(adapterName);\n\n            return adapter;\n        },\n\n        createDynamicAdapter: function (adapterName) {\n            var adapter = ApplicationAdapter['default'].extend();\n            this.adapterRegistry(adapterName, adapter);\n            return this.container.lookup('adapter:' + adapterName);\n        },\n\n        getDynamicModel: function (typeName, baseModel) {\n            var modelName = this._normalizeTypeKey(typeName),\n                model = this.container.lookup('model:' + modelName) || this.createDynamicModel(modelName, baseModel);\n\n            return new Ember['default'].RSVP.Promise(function (resolve, reject) {\n                resolve(model);\n            });\n        },\n\n        createDynamicModel: function (typeName, baseModel) {\n            var store = this,\n                modelName = this._normalizeTypeKey(typeName),\n                fieldsPayload = this.findFields(modelName);\n            return new Ember['default'].RSVP.Promise(function (resolve, reject) {\n                resolve(\n                    fieldsPayload.then(function (fields) {\n                        var model = baseModel || DS['default'].Model.extend(),\n                            modelData = store._buildDynamicModelData(fields, Ember['default'].get(model, 'fields'), modelName);\n                        model = model.extend(modelData);\n                        model.reopenClass({\n                            _fields: fields\n                        });\n\n                        store.modelRegistry(modelName, model);\n\n                        return model;\n                    })\n                );\n            });\n        },\n\n        _buildDynamicModelData: function (fields, modelFields, modelName) {\n            var store = this,\n                modelData = {},\n                _modelFieldNames = [];\n\n            modelFields.forEach(function (f, k) {\n                _modelFieldNames.push(k);\n            });\n\n            fields.forEach(function (fieldData) {\n                if (_modelFieldNames.indexOf(fieldData.fieldName) > -1) {\n                    return;\n                }\n                modelData[fieldData.fieldName] = store.buildModelField(fieldData, modelName);\n            });\n\n            return modelData;\n        },\n\n\n        mapFieldTypeToAttrType: function (fieldType) {\n            var attrType;\n            switch (fieldType) {\n                case 'string':\n                case 'url':\n                    attrType = 'string';\n                    break;\n                case 'number':\n                case 'integer':\n                    attrType = 'number';\n                    break;\n                case 'boolean':\n                    attrType = 'booleanNull';\n                    break;\n                case 'date':\n                case 'datetime':\n                    attrType = 'string';\n                    break;\n                case 'json':\n                    attrType = 'jsonString';\n                    break;\n                default:\n                    break;\n            }\n\n            return attrType;\n        },\n\n        buildModelField: function (fieldData, modelName) {\n            var fieldType = fieldData.type;\n\n            if (fieldType === 'choice') {\n                return this.buildModelBelongsToField(fieldData, modelName);\n            }\n\n            return DS['default'].attr(this.mapFieldTypeToAttrType(fieldType));\n        },\n\n        buildModelBelongsToField: function (fieldData, modelName) {\n            var store = this,\n                choices,\n                payload = {},\n                rawChoices = fieldData.choices || [],\n                choiceModelName = modelName + 'Choice' + Ember['default'].String.capitalize(fieldData.fieldName),\n                choiceModel = this.container.lookup('model:' + choiceModelName),\n                serializer = ApplicationSerializer['default'].create();\n\n            if (!choiceModel) {\n                choiceModel = ModelFieldChoiceModel['default'].extend();\n                store.modelRegistry(choiceModelName, choiceModel);\n            }\n\n            choices = Ember['default'].$.map(rawChoices, function (data, idx) {\n                data.id = data.value;\n                return data;\n            });\n\n            payload[choiceModelName] = choices;\n            serializer.pushPayload(this, payload);\n\n            return DS['default'].belongsTo(choiceModelName);\n\n        }\n    });\n\n});","define('morgana/models/bulk-upload-general', ['exports', 'ember', 'ember-data'], function (exports, Ember, DS) {\n\n    'use strict';\n\n    exports['default'] = DS['default'].Model.extend({\n        contentProject: DS['default'].belongsTo('content-project', {defaultValue: 0}),\n        tag: DS['default'].attr('string'),\n        dataFile: DS['default'].attr('uploadFile', {\n            defaultValue: Ember['default'].Object.create({\n                name: '',\n                size: 0,\n                type: '',\n                content: null\n            })\n        })\n    });\n\n});","define('morgana/models/bulk-upload', ['exports', 'ember', 'ember-data', 'morgana/models/bulk-upload-general'], function (exports, Ember, DS, BulkUploadGeneral) {\n\n\t'use strict';\n\n\texports['default'] = BulkUploadGeneral['default'].extend({\n\t});\n\n});","define('morgana/models/category', ['exports', 'ember-data'], function (exports, DS) {\n\n    'use strict';\n\n    exports['default'] = DS['default'].Model.extend({\n        name: DS['default'].attr('string'),\n        checked: DS['default'].attr('boolean')\n    });\n\n});","define('morgana/models/content-project-export', ['exports', 'ember-data', 'ember'], function (exports, DS, Ember) {\n\n    'use strict';\n\n    exports['default'] = DS['default'].Model.extend({\n        status: DS['default'].attr('string'),\n        message: DS['default'].attr('string'),\n        details: DS['default'].attr('string'),\n        created: DS['default'].attr(),\n        downloadUrl: DS['default'].attr('string'),\n        name: DS['default'].attr('string'),\n        contentProject: DS['default'].belongsTo('content-project', {async: true}),\n        isDownloadable: Ember['default'].computed('status', function () {\n            return this.get('status') === 'done';\n        })\n    });\n\n});","define('morgana/models/content-project', ['exports', 'ember', 'ember-data'], function (exports, Ember, DS) {\n\n    'use strict';\n\n    exports['default'] = DS['default'].Model.extend({\n        name: DS['default'].attr('string'),\n        axcompany_name: DS['default'].attr('string'),\n        engineConfiguration: DS['default'].belongsTo('engine-configuration', {async: true}), //ASYNC IMPORTANT TO GET A PROMISE!\n        keywordDensity: DS['default'].attr('number', {defaultValue: 3}),\n        keywordDeviation: DS['default'].attr('number', {defaultValue: 33}),\n        maxLength: DS['default'].attr('number', {defaultValue: 0}),\n        things: DS['default'].hasMany('thing', {async: true}),\n\n        generatingZip: DS['default'].attr(),\n        imagesZipFile: DS['default'].attr(),\n        countThings: DS['default'].attr('number'),\n        countGeneratedTextsErrors: DS['default'].attr(),\n        countGeneratedTexts: DS['default'].attr(),\n\n        countGeneratedTextsDisplay: Ember['default'].computed('countGeneratedTexts', function () {\n            return parseInt(this.get('countGeneratedTexts'), 10) || 0;\n        }),\n\n        countGeneratedTextsErrorsDisplay: Ember['default'].computed('countGeneratedTextsErrors', function () {\n            return parseInt(this.get('countGeneratedTextsErrors'), 10) || 0;\n        }),\n\n        hasThings: Ember['default'].computed('countThings', function () {\n            return this.get('countThings') > 0;\n        })\n    });\n\n});","define('morgana/models/content-request', ['exports', 'ember', 'ember-data'], function (exports, Ember, DS) {\n\n    'use strict';\n\n    exports['default'] = DS['default'].Model.extend({\n        thingUuid: DS['default'].attr(),\n        celeryTaskId: DS['default'].attr(),\n        thingType: DS['default'].attr(),\n        state: DS['default'].attr(),\n        content: DS['default'].attr(),\n        duration: DS['default'].attr('number'),\n        durationDisplay: Ember['default'].computed('duration', function () {\n            var duration = parseFloat(this.get('duration'));\n\n            return isNaN(duration) ? null : (duration  / 1000).toFixed(3);\n        }),\n\n        isText: Ember['default'].computed(function () {\n            return false;\n        }),\n        isImage: Ember['default'].computed(function () {\n            return false;\n        })\n    });\n\n});","define('morgana/models/credit-history', ['exports', 'ember-data'], function (exports, DS) {\n\n    'use strict';\n\n    exports['default'] = DS['default'].Model.extend({\n        amount: DS['default'].attr(),\n        operation: DS['default'].attr(),\n        last: DS['default'].attr()\n    });\n\n});","define('morgana/models/engine-configuration-status', ['exports', 'ember-data'], function (exports, DS) {\n\n    'use strict';\n\n    exports['default'] = DS['default'].Model.extend({\n        identifier: DS['default'].attr('string'),\n        name: DS['default'].attr('string'),\n        description: DS['default'].attr('string'),\n        checked: DS['default'].attr('boolean'),\n        infoObjects: DS['default'].attr('string'),\n        infoNoObjects: DS['default'].attr('string')\n    });\n\n});","define('morgana/models/engine-configuration', ['exports', 'ember', 'ember-data'], function (exports, Ember, DS) {\n\n    'use strict';\n\n    exports['default'] = DS['default'].Model.extend({\n        name: Ember['default'].computed('descriptiveName', function () {\n            return this.get('descriptiveName');\n        }),\n\n        descriptiveName: DS['default'].attr('string'),\n\n        thingType: DS['default'].attr('string'),\n        engineType: DS['default'].attr('string'),\n\n        demoData: DS['default'].attr('string'),\n        demoContent: DS['default'].attr('string'),\n        description: DS['default'].attr('string'),\n\n\n        hasThing: DS['default'].attr(),\n        hasEngine: DS['default'].attr(),\n\n        status: DS['default'].belongsTo('engine-configuration-status', {async: true}),\n        language: DS['default'].belongsTo('language', {async: true}),\n        engineContentTypeCategory: DS['default'].belongsTo('engine-content-type-category', {async: true}),\n\n        isText: Ember['default'].computed.equal('engineType', 'text'),\n        isImage: Ember['default'].computed.equal('engineType', 'image')\n    });\n\n});","define('morgana/models/engine-configurations-contact', ['exports', 'ember-data'], function (exports, DS) {\n\n    'use strict';\n\n    exports['default'] = DS['default'].Model.extend({\n        message: DS['default'].attr('string')\n    });\n\n});","define('morgana/models/engine-content-type-category', ['exports', 'ember-data'], function (exports, DS) {\n\n    'use strict';\n\n    exports['default'] = DS['default'].Model.extend({\n        name: DS['default'].attr('string'),\n        description: DS['default'].attr('string'),\n        checked: DS['default'].attr('boolean')\n    });\n\n});","define('morgana/models/eventlog', ['exports', 'ember-data'], function (exports, DS) {\n\n    'use strict';\n\n    exports['default'] = DS['default'].Model.extend({\n        action: DS['default'].attr('string'),\n        message: DS['default'].attr('string'),\n        created: DS['default'].attr()\n    });\n\n});","define('morgana/models/field-requirement-level-data', ['exports', 'ember-data', 'ember'], function (exports, DS, Ember) {\n\n    'use strict';\n\n    exports['default'] = DS['default'].Model.extend({\n        label: DS['default'].attr('string'),\n        value: DS['default'].attr(),\n        requirementLevel: DS['default'].attr('number'),\n\n        displayValue: Ember['default'].computed('value', function () {\n            return Handlebars.Utils.escapeExpression(this.get('value'));\n        }),\n        displayLabel: Ember['default'].computed('label', function () {\n            return Ember['default'].String.capitalize(Handlebars.Utils.escapeExpression(this.get('label')));\n        }),\n        requirementLevelCssClassName: Ember['default'].computed('requirementLevel', function () {\n            return 'ax-field-level-' + (this.get('requirementLevel') || 0);\n        }),\n        requirementLevelEmptyCssClassName: Ember['default'].computed('requirementLevel', 'value', function () {\n            return 'ax-field-' + (this.get('value') ? 'not-' : '') + 'empty';\n        })\n\n    });\n\n});","define('morgana/models/image-request', ['exports', 'ember', 'ember-data', 'morgana/models/content-request'], function (exports, Ember, DS, ContentRequest) {\n\n    'use strict';\n\n    exports['default'] = ContentRequest['default'].extend({\n        generatedImageUrl: DS['default'].attr('string'),\n\n        content: Ember['default'].computed('generatedImageUrl', function () {\n            return this.get('generatedImageUrl');\n        }),\n        isImage: Ember['default'].computed(function () {\n            return true;\n        })\n    });\n\n});","define('morgana/models/invoice', ['exports', 'ember-data'], function (exports, DS) {\n\n    'use strict';\n\n    exports['default'] = DS['default'].Model.extend({\n        axcompany: DS['default'].attr('string'),\n        invoiceNumber: DS['default'].attr('string'),\n        invoiceDate: DS['default'].attr(),\n        informationalText: DS['default'].attr('string')\n    });\n\n});","define('morgana/models/language', ['exports', 'ember-data'], function (exports, DS) {\n\n    'use strict';\n\n    exports['default'] = DS['default'].Model.extend({\n        identifier: DS['default'].attr('string'),\n        name: DS['default'].attr('string'),\n        checked: DS['default'].attr('boolean')\n    });\n\n});","define('morgana/models/model-field-choice', ['exports', 'ember-data'], function (exports, DS) {\n\n    'use strict';\n\n    exports['default'] = DS['default'].Model.extend({\n        displayName: DS['default'].attr(),\n        value: DS['default'].attr()\n    });\n\n});","define('morgana/models/requirement-level-status', ['exports', 'ember-data'], function (exports, DS) {\n\n    'use strict';\n\n    exports['default'] = DS['default'].Model.extend({\n        'name': DS['default'].attr('string'),\n        'statusName': DS['default'].attr('string'),\n        'filled_field_message': DS['default'].attr('string'),\n        'unfilled_field_message': DS['default'].attr('string'),\n        'object_message': DS['default'].attr('string')\n    });\n\n});","define('morgana/models/tag', ['exports', 'ember-data'], function (exports, DS) {\n\n    'use strict';\n\n    exports['default'] = DS['default'].Model.extend({\n        name: DS['default'].attr('string'),\n        count: DS['default'].attr(),\n        contentProject: DS['default'].belongsTo('content-project', {async: true})\n    });\n\n});","define('morgana/models/text-request', ['exports', 'ember', 'ember-data', 'morgana/models/content-request'], function (exports, Ember, DS, ContentRequest) {\n\n    'use strict';\n\n    exports['default'] = ContentRequest['default'].extend({\n        generatedText: DS['default'].attr('string'),\n        spellingErrorCount: DS['default'].attr(),\n        languageErrors: DS['default'].attr('jsonStringParsed'),\n\n        content: Ember['default'].computed('generatedText', function () {\n            return this.get('generatedText');\n        }),\n        isText: Ember['default'].computed(function () {\n            return true;\n        }),\n        languageErrorCount: Ember['default'].computed('languageErrors', function () {\n            var languageErrors = this.get('languageErrors');\n            return (languageErrors && languageErrors.length) ? languageErrors.length : null;\n        }),\n        contentLength: Ember['default'].computed('generatedText', function () {\n            return this.get('generatedText').length;\n        })\n    });\n\n});","define('morgana/models/thing', ['exports', 'ember', 'ember-data'], function (exports, Ember, DS) {\n\n    'use strict';\n\n    exports['default'] = DS['default'].Model.extend({\n        uid: DS['default'].attr('string'),\n        sku: DS['default'].attr('string'),\n        uuid: DS['default'].attr('string'),\n        name: DS['default'].attr('string'),\n        tag: DS['default'].attr('string', {readOnly: true}),\n        status: DS['default'].attr('string'),\n        errorMsg: DS['default'].attr('string'),\n        modified: DS['default'].attr(),\n        contentProject: DS['default'].belongsTo('content-project', {async: true}),\n        requirementLevelStatusText: DS['default'].attr('string', {readOnly: true}),\n        mostImportantMissingRequirementLevel: DS['default'].attr('string', {readOnly: true}),\n        contentGenerationStatusCssClass: DS['default'].attr('string', {readOnly: true}),\n        contentGenerationStatusText: DS['default'].attr('string', {readOnly: true}),\n\n        // textLength are currently available only from es in list views. For detail views get this info from text request\n        textLengthInChars: DS['default'].attr('number', {readOnly: true}),\n        textLengthInWords: DS['default'].attr('number', {readOnly: true}),\n\n        mostImportantMissingRequirementLevelClassName: Ember['default'].computed('mostImportantMissingRequirementLevel', function () {\n            return 'ax-field-level-' + this.get('mostImportantMissingRequirementLevel');\n        }),\n\n        uuidUrlFormat: Ember['default'].computed('uuid', function () {\n            return this.get('uuid').replace(/\\-/g, '');\n        }),\n\n        hasMissingData: Ember['default'].computed('mostImportantMissingRequirementLevel', function () {\n            return parseInt(this.get('mostImportantMissingRequirementLevel'), 10) > 0;\n        })\n    });\n\n});","define('morgana/models/user-check-list', ['exports', 'ember-data'], function (exports, DS) {\n\n    'use strict';\n\n    exports['default'] = DS['default'].Model.extend({\n        show: DS['default'].attr('boolean'),\n        hasProfile: DS['default'].attr('boolean'),\n        hasContentProject: DS['default'].attr('boolean'),\n        hasThing: DS['default'].attr('boolean'),\n        hasGeneratedContent: DS['default'].attr('boolean')\n    });\n\n});","define('morgana/models/user', ['exports', 'ember', 'ember-data'], function (exports, Ember, DS) {\n\n    'use strict';\n\n    exports['default'] = DS['default'].Model.extend({\n        firstName: DS['default'].attr('string'),\n        lastName: DS['default'].attr('string'),\n        username: DS['default'].attr('string'),\n        email: DS['default'].attr('string'),\n        authToken: DS['default'].attr(),\n        apiUrl: DS['default'].attr(),\n        axcompany: DS['default'].attr(),\n        companyCredits: DS['default'].attr(),\n        availableFeatures: DS['default'].attr(),\n\n        fullName: Ember['default'].computed('firstName', 'lastName', function () {\n            return this.get('firstName') + ' ' + this.get('lastName');\n        })\n    });\n\n});","define('morgana/router', ['exports', 'ember', 'morgana/config/environment'], function (exports, Ember, config) {\n\n    'use strict';\n\n    var Router = Ember['default'].Router.extend({\n        location: config['default'].locationType\n    });\n\n    Router.map(function () {\n        this.resource('home', { path: '/' }, function () {\n            this.resource('credits', { path: '/credits' }, function () {\n                return;\n            });\n            this.resource('engine-configurations', function () {\n                this.route('contact');\n            });\n            this.resource('engine-configuration', { path: '/engine-configurations/:engine-configuration_id' }, function () {\n                this.route('content-project', { path: '/content-project' }, function () {\n                    this.route('new');\n                });\n            });\n            this.resource('content-projects', function () {\n                return;\n            });\n            this.resource('content-project', { path: 'content-project/:content-project_id' }, function () {\n                this.route('edit');\n                this.route('delete');\n                this.route('content-project-exports', function () {\n                });\n                this.route('bulk-upload', { path: '/bulk-upload' }, function () {\n                    this.route('upload');\n                });\n                this.route('thing-type', { path: '/things'}, function () {\n\n                    this.route('thing-new', { path: '/new' });\n                    this.route('thing', { path: '/:thing_id' }, function () {\n                        this.route('edit');\n                        this.route('delete');\n                    });\n                });\n            });\n            this.resource('eventlog', function () {\n                return;\n            });\n            this.resource('tags', { path: '/tags' }, function () {\n                this.route('upload');\n            });\n            this.resource('download-exports', { path: '/download-exports' }, function () {\n                return;\n            });\n            this.resource('profile', function () {\n                this.route('edit-company');\n                this.route('edit-user');\n            });\n        });\n\n\n        this.route('login');\n    });\n\n    exports['default'] = Router;\n\n});","define('morgana/routes/application', ['exports', 'ember', 'simple-auth/mixins/application-route-mixin', 'morgana/mixins/flash-messages-route', 'morgana/mixins/permissions'], function (exports, Ember, ApplicationRouteMixin, FlashMessagesRouteMixin, permissions) {\n\n    'use strict';\n\n    window.Raven = window.Raven || null;\n\n\n    exports['default'] = Ember['default'].Route.extend(ApplicationRouteMixin['default'], FlashMessagesRouteMixin['default'], {\n\n\n        currentUser: Ember['default'].computed.alias('session.currentUser')\n\n\n    });\n\n});","define('morgana/routes/content-project', ['exports', 'ember', 'morgana/mixins/permissions'], function (exports, Ember, permissions) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend({\n        model: function (params) {\n            var self = this,\n                cp;\n            if (params['content-project_id']) {\n                cp = this.store.find('ContentProject', params['content-project_id']);\n                cp.then(function (contentProject) {\n                    contentProject.get('engineConfiguration').then(function (engineConfiguration) {\n                        self._initPermissions(contentProject, engineConfiguration);\n                    });\n                });\n                return cp;\n            }\n        },\n\n        _initPermissions: function (contentProject, engineConfiguration) {\n            var currentUser = this.get('session.currentUser');\n\n            currentUser.reload();\n\n            permissions.Permissions.register(\n                permissions.Permission.extend({\n                    name: 'toggle',\n                    engineConfiguration: engineConfiguration,\n                    can: Ember['default'].computed('engineConfiguration.isText', function () {\n                        return this.get('engineConfiguration').get('isText');\n                    })\n                }).create()\n            );\n\n            permissions.Permissions.register(\n                permissions.Permission.extend({\n                    name: 'addThing',\n                    engineConfiguration: engineConfiguration,\n                    can: Ember['default'].computed('engineConfiguration.hasThing', function () {\n                        return this.get('engineConfiguration').get('hasThing');\n                    })\n                }).create()\n            );\n\n            permissions.Permissions.register(\n                permissions.Permission.extend({\n                    name: 'createContent',\n                    engineConfiguration: engineConfiguration,\n                    contentProject: contentProject,\n                    can: Ember['default'].computed('engineConfiguration.hasEngine', 'contentProject.hasThings', function () {\n                        return this.get('contentProject').get('hasThings') && this.get('engineConfiguration').get('hasEngine');\n                    })\n                }).create()\n            );\n\n            permissions.Permissions.register(\n                permissions.Permission.extend({\n                    name: 'payForContent',\n                    currentUser: currentUser,\n                    can: Ember['default'].computed('currentUser.companyCredits', function () {\n                        return parseInt(this.get('currentUser').get('companyCredits'), 10) > 0;\n                    })\n                }).create()\n            );\n\n\n            permissions.Permissions.register(\n                permissions.Permission.extend({\n                    name: 'downloadContent',\n                    engineConfiguration: engineConfiguration,\n                    contentProject: contentProject,\n                    can: Ember['default'].computed('engineConfiguration.hasEngine', 'contentProject.hasThings', function () {\n                        return this.get('contentProject').get('hasThings') && this.get('engineConfiguration').get('hasEngine');\n                    })\n                }).create()\n            );\n\n\n            permissions.Permissions.register(\n                permissions.Permission.extend({\n                    name: 'downloadImagesAsZip',\n                    engineConfiguration: engineConfiguration,\n                    contentProject: contentProject,\n                    can: Ember['default'].computed('engineConfiguration.hasEngine', 'contentProject.imagesZipFile', function () {\n                        return this.get('contentProject').get('imagesZipFile') && this.get('engineConfiguration').get('isImage') && this.get('engineConfiguration').get('hasEngine');\n                    })\n                }).create()\n            );\n\n            permissions.Permissions.register(\n                permissions.Permission.extend({\n                    name: 'generateImagesAsZip',\n                    engineConfiguration: engineConfiguration,\n                    contentProject: contentProject,\n                    can: Ember['default'].computed('engineConfiguration.isImage', 'engineConfiguration.hasEngine', 'contentProject.hasThings', function () {\n                        return this.get('engineConfiguration').get('isImage') && this.get('engineConfiguration').get('hasEngine') && this.get('contentProject').get('hasThings');\n                    })\n                }).create()\n            );\n\n            permissions.Permissions.register(\n                permissions.Permission.extend({\n                    name: 'downloadObjects',\n                    contentProject: contentProject,\n                    can: Ember['default'].computed('contentProject.hasThings', function () {\n                        return this.get('contentProject').get('hasThings');\n                    })\n                }).create()\n            );\n        }\n\n    });\n\n});","define('morgana/routes/content-project/bulk-upload', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend({\n\t});\n\n});","define('morgana/routes/content-project/bulk-upload/upload', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend({\n        model: function (params) {\n            var bulkupload = this.store.createRecord('bulkUpload');\n            bulkupload.set('contentProject', this.modelFor('content-project'));\n            return bulkupload;\n        }\n    });\n\n});","define('morgana/routes/content-project/content-project-exports', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend({\n\t});\n\n});","define('morgana/routes/content-project/content-project-exports/index', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend({\n        setupController: function (controller) {\n            var self = this,\n                promise = new Ember['default'].RSVP.Promise(function (resolve, reject) {\n                    var contentProject = self.modelFor('content-project'),\n                        contentProjectExportAdapter = self.store.getDynamicAdapter('contentProjectExport');\n\n                    contentProjectExportAdapter.reopen({\n                        pathForType: function (type) {\n                            return 'content-project/' + contentProject.get('id') + '/contentprojectexport';\n                        }\n                    });\n                    resolve(controller._loadPage(1));\n                });\n\n            promise.then(function (model) {\n                controller.set('model', model);\n            });\n        }\n    });\n\n});","define('morgana/routes/content-project/delete', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend({\n\t});\n\n});","define('morgana/routes/content-project/edit', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend({\n        setupController: function (controller, params) {\n            controller.set('model', this.modelFor('content-project'));\n        }\n    });\n\n});","define('morgana/routes/content-project/index', ['exports', 'ember', 'morgana/mixins/permissions'], function (exports, Ember, permissions) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend({\n         _getThingsModel: function () {\n            var self = this,\n                controller = this.controllerFor('things/index'),\n                contentProject = this.modelFor('content-project'),\n                thingAdapter = self.store.getDynamicAdapter('Thing');\n\n            thingAdapter.reopen({\n                pathForType: function (type) {\n                    return 'content-project/' + contentProject.get('id') + '/thinglist/';\n                }\n            });\n            return controller._loadPage(1);\n\n        },\n\n\n        model: function (params) {\n            return this.modelFor('content-project');\n        },\n\n\n        setupController: function (controller, context) {\n            var thingsController = this.controllerFor('things/index'),\n                contentProject = this.modelFor('content-project');\n\n            this._super(controller, context);\n            thingsController.set('contentProject', contentProject);\n            this._getThingsModel().then(function (things) {\n                thingsController.set('model', things);\n            });\n\n            controller.set('_perms', permissions.Permissions);\n\n\n        },\n\n        renderTemplate: function () {\n            var thingsController = this.controllerFor('things/index');\n\n            this.render('content_project/index');\n            this.render('things/_thing_list', {\n                into: 'content_project/index',\n                outlet: 'things',\n                controller: thingsController\n            });\n        }\n    });\n\n});","define('morgana/routes/content-project/thing-type', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend({\n\t});\n\n});","define('morgana/routes/content-project/thing-type/thing-new', ['exports', 'ember', 'morgana/models/thing'], function (exports, Ember, ThingModel) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend({\n        viewName: 'foundation',\n        model: function (params) {\n            var self = this,\n                contentProject = this.modelFor('content-project'),\n                model;\n\n            model = contentProject.get('engineConfiguration').then(function (engineConfiguration) {\n                var thingType = engineConfiguration.get('thingType'),\n                    thingAdapter = self.store.getDynamicAdapter(thingType);\n\n                thingAdapter.reopen({\n                    pathForType: function (type) {\n                        return 'content-project/' + contentProject.get('id') + '/thing';\n                    }\n                });\n\n                return self.store.getDynamicModel(thingType, ThingModel['default']).then(function () {\n                    var thing = self.store.createRecord(thingType);\n                    thing.set('contentProject', contentProject);\n                    return thing;\n                });\n\n            });\n\n            return model;\n        }\n    });\n\n});","define('morgana/routes/content-project/thing-type/thing', ['exports', 'ember', 'morgana/models/thing'], function (exports, Ember, ThingModel) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend({\n\n        model: function (params) {\n            var self = this,\n                contentProject = this.modelFor('content-project'),\n                model;\n\n            model = new Ember['default'].RSVP.Promise(function (resolve, reject) {\n                contentProject.get('engineConfiguration').then(function (engineConfiguration) {\n                    var thingType = engineConfiguration.get('thingType'),\n                        thingAdapter = self.store.getDynamicAdapter(thingType),\n                        ret = {};\n                    thingAdapter.reopen({\n                        pathForType: function (type) {\n                            return 'content-project/' + contentProject.get('id') + '/thing';\n                        },\n                        useUpdateFieldsForDynamicModels: false\n                    });\n\n\n                    ret = self.store.getDynamicModel(thingType, ThingModel['default']).then(function () {\n                        return self.store.find(thingType, params.thing_id);\n                    });\n\n                    resolve(ret);\n                });\n    //\n            });\n\n            return model;\n        }\n    });\n\n});","define('morgana/routes/content-project/thing-type/thing/delete', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend({\n        viewName: 'foundation'\n    });\n\n});","define('morgana/routes/content-project/thing-type/thing/edit', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend({\n        viewName: 'foundation'\n    });\n\n});","define('morgana/routes/content-project/thing-type/thing/index', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend({\n        viewName: 'foundation',\n\n        setupController: function (controller, context) {\n            var self = this,\n                contentProject = this.modelFor('contentProject');\n            controller.set('contentRequest', null);\n            contentProject.get('engineConfiguration').then(function (engineConfiguration) {\n                var engineType = engineConfiguration.get('engineType'),\n                    thingType = engineConfiguration.get('thingType'),\n                    contentRequestClass = Ember['default'].String.capitalize(engineType) + 'Request',\n                    contentRequestAdapter = self.store.getDynamicAdapter(contentRequestClass);\n\n                contentRequestAdapter.pathForType = function (type) {\n                    return self.store.getDynamicAdapter(thingType).pathForType() + '/' + context.get('id') + '/content_request';\n                };\n\n                self.store.unloadAll(contentRequestClass); //important otherwise findAll returns previously loaded crs aswell\n                self.store.find(contentRequestClass, 'fakeId').then(function (contentRequest) {\n                    controller.set('contentRequest', contentRequest);\n                }, function (e) {\n                    return; //nothing here\n                });\n                controller.set('engineConfiguration', engineConfiguration);\n                controller.set('contentProject', contentProject);\n            });\n\n            this._super(controller, context);\n        }\n    });\n\n});","define('morgana/routes/content-projects', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend({\n\t});\n\n});","define('morgana/routes/credits/index', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend({\n        viewName: 'foundation',\n\n        model: function () {\n            return this.get('currentUser');\n        },\n        currentUser: Ember['default'].computed(function () {\n            return this.controllerFor('application').get('currentUser');\n        }),\n        setupController: function (controller, context) {\n            context.reload();\n            this._super(controller, context);\n            this.setupCreditHistoryController();\n            this.setupInvoicesController();\n        },\n\n        setupCreditHistoryController: function () {\n            var controller = this.controllerFor('credits.creditHistory'),\n                promise = this.store.find('credit-history');\n\n            promise.then(function (model) {\n                controller.set('model', model);\n            });\n        },\n\n        setupInvoicesController: function () {\n            var controller = this.controllerFor('credits.invoices'),\n                promise = this.store.find('invoice');\n\n            promise.then(function (model) {\n                controller.set('model', model);\n            });\n        },\n\n        renderTemplate: function () {\n            this.render('credits/index');\n            this.renderCreditHistory('credits/index');\n            this.renderInvoices('credits/index');\n        },\n\n        renderCreditHistory: function (containerTemplate) {\n            var controller = this.controllerFor('credits.creditHistory');\n            this.render('credits/-credit-history', {\n                into: containerTemplate,\n                outlet: 'credit_history',\n                controller: controller\n            });\n        },\n\n        renderInvoices: function (containerTemplate) {\n            var controller = this.controllerFor('credits.invoices');\n            this.render('credits/-invoices', {\n                into: containerTemplate,\n                outlet: 'invoices',\n                controller: controller\n            });\n        }\n\n\n\n    });\n\n});","define('morgana/routes/download-exports', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend({\n\n\n\n\t});\n\n});","define('morgana/routes/download-exports/index', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend({\n        setupController: function (controller) {\n            var self = this,\n                promise = new Ember['default'].RSVP.Promise(function (resolve, reject) {\n                    var contentProjectExportAdapter = self.store.getDynamicAdapter('contentProjectExport');\n\n                    contentProjectExportAdapter.reopen({\n                        pathForType: function (type) {\n                            return 'download-exports/';\n                        }\n                    });\n                    resolve(controller._loadPage(1));\n                });\n\n            promise.then(function (model) {\n                controller.set('model', model);\n            });\n        }\n    });\n\n});","define('morgana/routes/engine-configuration', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend({\n        model: function (params) {\n            return this.store.find('EngineConfiguration', params['engine-configuration_id']);\n        }\n    });\n\n});","define('morgana/routes/engine-configuration/content-project', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend({\n\t});\n\n});","define('morgana/routes/engine-configuration/content-project/new', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend({\n        model: function (params) {\n            var contentProject = this.store.createRecord('contentProject');\n            contentProject.set('engineConfiguration', this.modelFor('engine-configuration'));\n            return contentProject;\n        }\n    });\n\n});","define('morgana/routes/engine-configuration/index', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend({\n        model: function () {\n            return this.modelFor('engine-configuration');\n        }\n    });\n\n});","define('morgana/routes/engine-configurations', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend({\n        model: function () {\n            var self = this;\n            return new Ember['default'].RSVP.Promise(function (resolve, reject) {\n                self.store.find('EngineConfiguration').then(function (engineConfigurations) {\n                    engineConfigurations.forEach(function (engineConfiguration) {\n                        var filters = engineConfiguration.get('filters') || [];\n                        engineConfiguration.reopen({\n                            filters: filters\n                        });\n                    });\n                    resolve(engineConfigurations);\n                });\n\n            });\n        }\n    });\n\n});","define('morgana/routes/engine-configurations/contact', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend({\n        model: function (params) {\n            return this.store.createRecord('EngineConfigurationsContact');\n        }\n    });\n\n});","define('morgana/routes/engine-configurations/index', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend({\n        model: function() {\n            return this.modelFor('engine-configurations');\n        }\n    });\n\n});","define('morgana/routes/eventlog', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend({\n\t});\n\n});","define('morgana/routes/eventlog/index', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend({\n        setupController: function (controller) {\n            var promise = new Ember['default'].RSVP.Promise(function (resolve, reject) {\n                    resolve(controller._loadPage(1));\n                });\n            promise.then(function (model) {\n                controller.set('model', model);\n            });\n        }\n    });\n\n});","define('morgana/routes/home', ['exports', 'ember', 'simple-auth/mixins/authenticated-route-mixin', 'morgana/mixins/permissions'], function (exports, Ember, AuthenticatedRouteMixin, permissions) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend(AuthenticatedRouteMixin['default'], {\n\n\n\n        model: function () {\n            return this._initCurrentUser();\n        },\n\n        _initCurrentUser: function () {\n            var route = this,\n                currentUser;\n\n                currentUser =  new Ember['default'].RSVP.Promise(function (resolve, reject) {\n                    route.store.find('user', route.get('session.currentUserId')).then(function (user) {\n                        if (user) {\n                            try {\n                                Raven.setUserContext({\n                                    username: user.get('username'),\n                                    id: user.get('id')\n                                });\n                            } catch (e) {\n                                console.log('Raven is not defined');\n                            }\n                            route.get('session').set('currentUser', user);\n                            route._initPermissions(user);\n\n                            resolve(user);\n\n                        } else {\n                            try {\n                                Raven.captureMessage('No user found!');\n                            } catch (e) {\n                                console.log('Raven is not defined');\n                            }\n                            reject();\n                        }\n                    }, function (e) {\n                        try {\n                            Raven.captureMessage('Error loading user', e);\n                        } catch (e2) {\n                            console.log('Raven is not defined');\n                        }\n\n                        reject();\n                    });\n                });\n\n            return currentUser;\n        },\n\n        _initPermissions: function (currentUser) {\n            permissions.Permissions.register(\n                permissions.Permission.extend({\n                    name: 'showTagOverview',\n                    currentUser: currentUser,\n                    can: Ember['default'].computed('currentUser.availableFeatures.show_tag_overview', function () {\n                        return this.get('currentUser.availableFeatures.show_tag_overview');\n                    })\n                }).create()\n            );\n            permissions.Permissions.register(\n                permissions.Permission.extend({\n                    name: 'multiContentProjectUploads',\n                    currentUser: currentUser,\n                    can: Ember['default'].computed('currentUser.availableFeatures.multi_content_project_uploads', function () {\n                        return this.get('currentUser.availableFeatures.multi_content_project_uploads');\n                    })\n                }).create()\n            );\n            permissions.Permissions.register(\n                permissions.Permission.extend({\n                    name: 'showSkuInTagList',\n                    currentUser: currentUser,\n                    can: Ember['default'].computed('currentUser.availableFeatures.show_sku_in_tag_list', function () {\n                        return this.get('currentUser.availableFeatures.show_sku_in_tag_list');\n                    })\n                }).create()\n            );\n        }\n\n\n\n    });\n\n});","define('morgana/routes/home/index', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend({\n        model: function () {\n            return this.get('currentUser');\n        },\n\n        setupController: function (controller, context) {\n            context.reload();\n            this._super(controller, context);\n            this.setupContentProjectsController();\n            this.setupUserCheckListController();\n        },\n\n        currentUser: Ember['default'].computed(function () {\n            return this.controllerFor('application').get('currentUser');\n        }),\n\n        setupContentProjectsController: function () {\n            var controller = this.controllerFor('contentProjects.index'),\n                promise = new Ember['default'].RSVP.Promise(function (resolve, reject) {\n                    resolve(controller._loadPage(1));\n                });\n            promise.then(function (model) {\n                controller.set('model', model);\n            });\n        },\n\n        setupUserCheckListController: function () {\n            var controller = this.controllerFor('userCheckList.index'),\n                promise = this.store.find('userCheckList');\n\n            promise.then(function (userCheckList) {\n                controller.set('model', userCheckList.objectAt(0));\n            });\n        },\n\n        renderTemplate: function () {\n            this.render('home/index');\n            this.renderUserCheckList('home/index');\n            this.renderContentProjects('home/index');\n        },\n\n        renderContentProjects: function (containerTemplate) {\n            var controller = this.controllerFor('content-projects.index');\n            this.render('content-projects/-content-project-list', {\n                into: containerTemplate,\n                outlet: 'content_project_list',\n                controller: controller\n            });\n        },\n\n        renderUserCheckList: function (containerTemplate) {\n            var controller = this.controllerFor('userCheckList.index');\n            this.render('home/-user-check-list', {\n                into: containerTemplate,\n                outlet: 'user_check_list',\n                controller: controller\n            });\n        }\n    });\n\n});","define('morgana/routes/login', ['exports', 'ember', 'simple-auth/mixins/unauthenticated-route-mixin'], function (exports, Ember, UnauthenticatedRouteMixin) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend(UnauthenticatedRouteMixin['default'], {\n\n\t});\n\n});","define('morgana/routes/profile', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend({\n\n        model: function () {\n            var self = this,\n                currentUser = this.get('session.currentUser');\n            return new Ember['default'].RSVP.Promise(function (resolve, reject) {\n\n                var axCompanyAdapter = self.store.getDynamicAdapter('axCompany'),\n                    ret;\n\n                axCompanyAdapter.reopen({\n                    useUpdateFieldsForDynamicModels: currentUser.get('axcompany')\n                });\n\n                ret = self.store.getDynamicModel('axCompany').then(function () {\n                    return self.store.fetch('axCompany', currentUser.get('axcompany'));\n                });\n\n                resolve(ret);\n            });\n        }\n\n    });\n\n});","define('morgana/routes/profile/edit-company', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend({\n\n        model: function (params) {\n            var model = this.modelFor('profile');\n            model.send('becomeDirty');\n            model.rollback();\n            return model;\n        }\n    });\n\n});","define('morgana/routes/profile/edit-user', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend({\n        model: function () {\n            return this.get('currentUser');\n        },\n\n        setupController: function (controller, context) {\n            context.reload();\n            this._super(controller, context);\n        },\n\n        currentUser: Ember['default'].computed(function () {\n            return this.controllerFor('application').get('currentUser');\n        })\n    });\n\n});","define('morgana/routes/profile/index', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend({\n\n        model: function (params) {\n            var model = this.modelFor('profile');\n            model.send('becomeDirty');\n            model.rollback();\n            return model;\n        },\n\n\n        setupController: function (controller, context) {\n            this.get('session.currentUser').reload();\n            this._super(controller, context);\n        }\n    });\n\n});","define('morgana/routes/tags', ['exports', 'ember', 'morgana/mixins/permissions'], function (exports, Ember, permissions) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend({\n\n        model: function () {\n            var self = this,\n                controller = this.controllerFor('tags/index'),\n                thingAdapter = self.store.getDynamicAdapter('Thing');\n\n            thingAdapter.reopen({\n                pathForType: function () {\n                    return 'allthings/';\n                }\n            });\n\n\n            return this.store.find('contentProject', {page_size: 10000}).then(function () {\n                return controller._loadPage(1);\n            });\n        },\n\n        beforeModel: function () {\n            var route = this,\n                currentUser = this.get('session.currentUser');\n            currentUser.reload().then(function (currentUser) {\n                route._initPermissions(currentUser);\n            });\n        },\n\n        _initPermissions: function (currentUser) {\n\n            permissions.Permissions.register(\n                permissions.Permission.extend({\n                    name: 'payForContent',\n                    currentUser: currentUser,\n                    can: Ember['default'].computed('currentUser.companyCredits', function () {\n                        return parseInt(currentUser.get('companyCredits'), 10) > 0;\n                    })\n                }).create()\n            );\n        }\n    });\n\n});","define('morgana/routes/tags/index', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend({\n\n\n        model: function () {\n            var route = this,\n                promise = new Ember['default'].RSVP.Promise(function (resolve) {\n                    return route.store.find('requirementLevelStatus').then(function () {\n                        resolve(route.modelFor('tags'));\n                    });\n\n                });\n\n            return promise;\n        }\n\n\n    });\n\n});","define('morgana/routes/tags/upload', ['exports', 'ember', 'ember-data', 'morgana/mixins/permissions'], function (exports, Ember, DS, permissions) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend({\n\n        model: function () {\n            var route = this,\n                canMultiContentProjectUploads = permissions.Permissions.getPermission('multiContentProjectUploads').get('can'),\n\n                bulkUpload = new Ember['default'].RSVP.Promise(function (resolve, reject) {\n                    if (canMultiContentProjectUploads) {\n                        resolve(route.store.find('contentProject', {page_size: 1, page: 1}).then(function (contentProjects) {\n                            var bulkUploadGeneral = route.store.createRecord('bulkUploadGeneral'),\n                                firstContentProject = contentProjects.objectAt(0);\n\n                            bulkUploadGeneral.set('contentProject', firstContentProject);\n\n                            return bulkUploadGeneral;\n                        }));\n\n                    } else {\n                        resolve(route.store.createRecord('bulkUploadGeneral'));\n                    }\n                });\n\n\n            return bulkUpload;\n        },\n\n        setupController: function (controller, context) {\n            var route = this,\n                canMultiContentProjectUploads = permissions.Permissions.getPermission('multiContentProjectUploads').get('can'),\n                allContentProjects;\n\n            this._super(controller, context);\n\n            if (!canMultiContentProjectUploads) {\n                route.store.find('contentProject', {page_size: 10000, page: 1}).then(function (contentProjects) {\n                    controller.set('allContentProjects', contentProjects);\n                });\n\n            }\n        }\n    });\n\n});","define('morgana/serializers/application', ['exports', 'ember-data', 'ember', 'morgana/mixins/server-side-model-serializer'], function (exports, DS, Ember, ServerSideModelSerializerMixin) {\n\n    'use strict';\n\n    exports['default'] = DS['default'].RESTSerializer.extend(ServerSideModelSerializerMixin['default'], {\n        keyForAttribute: function (attr) {\n            return Ember['default'].String.underscore(attr);\n        },\n        keyForRelationship: function (attr) {\n            return Ember['default'].String.underscore(attr);\n        },\n        serializeIntoHash: function (hash, type, record, options) {\n            // No root element for restapi\n            Ember['default'].$.extend(hash, this.serialize(record, options));\n        },\n        typeForRoot: function (key) {\n            return Ember['default'].String.camelize(key);\n        }\n    });\n\n});","define('morgana/serializers/content-request', ['exports', 'morgana/serializers/application'], function (exports, ApplicationSerializer) {\n\n\t'use strict';\n\n\texports['default'] = ApplicationSerializer['default'].extend();\n\n});","define('morgana/serializers/eventlog', ['exports', 'morgana/serializers/application'], function (exports, ApplicationSerializer) {\n\n    'use strict';\n\n    exports['default'] = ApplicationSerializer['default'].extend({\n        typeForRoot: function () {\n            return this._super('eventlog');\n        }\n    });\n\n});","define('morgana/serializers/image-request', ['exports', 'morgana/serializers/content-request'], function (exports, ContentRequestSerializer) {\n\n\t'use strict';\n\n\texports['default'] = ContentRequestSerializer['default'].extend({\n\t});\n\n});","define('morgana/serializers/text-request', ['exports', 'morgana/serializers/content-request'], function (exports, ContentRequestSerializer) {\n\n\t'use strict';\n\n\texports['default'] = ContentRequestSerializer['default'].extend({\n\t});\n\n});","define('morgana/serializers/thing', ['exports', 'morgana/serializers/application'], function (exports, ApplicationSerializer) {\n\n    'use strict';\n\n    exports['default'] = ApplicationSerializer['default'].extend({\n        typeForRoot: function () {\n            return this._super('thing');\n        },\n\n        normalizeHash: {\n            'thing': function (hash) {\n\n                if (!hash.content_project && hash.content_project_pk) {\n                    hash.content_project = hash.content_project_pk;\n                }\n                return hash;\n            }\n        },\n\n        // because normalizeHash was called to late in super\n        normalize: function(type, hash, prop) {\n            if (this.normalizeHash && this.normalizeHash[prop]) {\n                this.normalizeHash[prop](hash);\n            }\n            this.normalizeId(hash);\n            this.normalizeAttributes(type, hash);\n            this.normalizeRelationships(type, hash);\n            this.normalizeUsingDeclaredMapping(type, hash);\n\n            this.applyTransforms(type, hash);\n            return hash;\n        }\n\n    });\n\n});","define('morgana/serializers/user-check-list', ['exports', 'morgana/serializers/application'], function (exports, ApplicationSerializer) {\n\n    'use strict';\n\n    exports['default'] = ApplicationSerializer['default'].extend({\n\n        extractSingle: function (store, type, payload, id, requestType) {\n            var singlePayload = this.normalizeSingleObjectPayload(payload);\n            return this._super(store, type, singlePayload, id, requestType);\n\n        },\n        extractArray: function (store, type, arrayPayload, id, requestType) {\n            var singlePayload = this.normalizeSingleObjectPayload(arrayPayload, true);\n            return this._super(store, type, singlePayload, id, requestType);\n        },\n\n        normalizeSingleObjectPayload: function (payload, isForArray) {\n            var ret = {};\n            payload.userCheckList.id = 'unique';\n\n            if (isForArray) {\n                ret.userCheckList = [payload.userCheckList];\n\n            } else {\n                ret = payload;\n            }\n\n            return ret;\n        }\n    });\n\n});","define('morgana/store', ['exports', 'ember-data', 'morgana/mixins/server-side-model-store'], function (exports, DS, ServerSideModelStoreMixin) {\n\n\t'use strict';\n\n\texports['default'] = DS['default'].Store.extend(ServerSideModelStoreMixin['default']);\n\n});","define('morgana/templates/application', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, helper, options, escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing, functionType=\"function\", blockHelperMissing=helpers.blockHelperMissing;\n\n  function program1(depth0,data) {\n    \n    var buffer = '', stack1;\n    data.buffer.push(\"\\n    \");\n    stack1 = helpers['if'].call(depth0, \"hasMessages\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\");\n    return buffer;\n    }\n  function program2(depth0,data) {\n    \n    var buffer = '', stack1;\n    data.buffer.push(\"\\n        <aside class=\\\"ember-flash-messages\\\" class=\\\"row\\\">\\n        \");\n    stack1 = helpers.each.call(depth0, \"message\", \"in\", \"messages\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\\n        </aside>\\n    \");\n    return buffer;\n    }\n  function program3(depth0,data) {\n    \n    var buffer = '';\n    data.buffer.push(\"\\n            <div class=\\\"columns\\\">\\n          <div \");\n    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n      'class': (\":alert-box message.messageType\")\n    },hashTypes:{'class': \"STRING\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\n    data.buffer.push(\">\\n              \");\n    data.buffer.push(escapeExpression(helpers.view.call(depth0, \"child-view-or-string\", {hash:{\n      'contentBinding': (\"message.text\")\n    },hashTypes:{'contentBinding': \"STRING\"},hashContexts:{'contentBinding': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n    data.buffer.push(\"\\n            <a href='#' class='dismiss' \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"dismissFlashMessage\", \"message\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data})));\n    data.buffer.push(\">x</a>\\n          </div>\\n          </div>\\n        \");\n    return buffer;\n    }\n\n    data.buffer.push(escapeExpression((helper = helpers.render || (depth0 && depth0.render),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"navigation\", options) : helperMissing.call(depth0, \"render\", \"navigation\", options))));\n    data.buffer.push(\"\\n\\n\");\n    options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data}\n    if (helper = helpers['flash-messages']) { stack1 = helper.call(depth0, options); }\n    else { helper = (depth0 && depth0['flash-messages']); stack1 = typeof helper === functionType ? helper.call(depth0, options) : helper; }\n    if (!helpers['flash-messages']) { stack1 = blockHelperMissing.call(depth0, 'flash-messages', {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data}); }\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n<main class=\\\"full-width\\\">\\n    <section class=\\\"row\\\">\\n        <div class=\\\"small-12 large-12 columns\\\">\\n        \");\n    stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n            </div>\\n    </section>\\n</main>\\n\");\n    return buffer;\n    \n  });\n\n});","define('morgana/templates/components/button-with-loader', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, escapeExpression=this.escapeExpression;\n\n\n    data.buffer.push(\"<a \");\n    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n      'class': (\"displayAsButton:button displayAsButton:expand isLoading:loading isAlert:alert\")\n    },hashTypes:{'class': \"STRING\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\n    data.buffer.push(\" \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"showLoading\", {hash:{\n      'on': (\"click\")\n    },hashTypes:{'on': \"STRING\"},hashContexts:{'on': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n    data.buffer.push(\">\");\n    stack1 = helpers._triageMustache.call(depth0, \"buttonText\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</a>\\n\");\n    return buffer;\n    \n  });\n\n});","define('morgana/templates/content-project', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1;\n\n\n    stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\");\n    return buffer;\n    \n  });\n\n});","define('morgana/templates/content-project/-form-fields', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n    data.buffer.push(\"<section class=\\\"large-8 small-12 columns\\\">\\n    <fieldset>\\n\\n        <div class=\\\"holder\\\" id=\\\"div_id_name\\\">\\n            <label class=\\\"required\\\" for=\\\"id_name\\\">Name</label>\\n            \");\n    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n      'value': (\"name\"),\n      'id': (\"id_name\"),\n      'class': (\"textinput\"),\n      'required': (true),\n      'autofocus': (\"\")\n    },hashTypes:{'value': \"ID\",'id': \"STRING\",'class': \"STRING\",'required': \"BOOLEAN\",'autofocus': \"STRING\"},hashContexts:{'value': depth0,'id': depth0,'class': depth0,'required': depth0,'autofocus': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n    data.buffer.push(\"\\n            <small class=\\\"error\\\">This field is required.</small>\\n        </div>\\n    </fieldset>\\n    <fieldset>\\n        <legend>Advanced Configuration</legend>\\n        <dl data-accordion=\\\"\\\" class=\\\"accordion\\\">\\n            <dd class=\\\"accordion-navigation\\\">\\n\\n                <a href=\\\"#content-project-advanced-configuration\\\">\\n                    <div class=\\\"accordion-navigation-head\\\">\\n                        <div class=\\\"accordion-navigation-head-description\\\">\\n                            For advanced configuration you can customize the generated content. Please be aware, that\\n                            your choices made here will not directly correlate with the text output, since multiple\\n                            factors play a role in content generation - and the stochastic functions apply to the bulk\\n                            of content you generate, not necessarily to a single text. If you have no special needs, you\\n                            should keep the default values.\\n                        </div>\\n                        <div class=\\\"accordion-navigation-head-icon\\\">\\n                            <i class=\\\"right fi-plus\\\"></i>\\n                        </div>\\n                    </div>\\n                </a>\\n\\n                <div class=\\\"content\\\" id=\\\"content-project-advanced-configuration\\\">\\n\\n                    <div class=\\\"holder\\\" id=\\\"div_id_keyword_density\\\">\\n                        <div class=\\\"panel-info\\\">\\n                            The keyword density regulates the usage of specific keywords in your text. We automatically\\n                            select appropriate synonyms or matching terms. The default is set to 3.\\n                        </div>\\n                        <label class=\\\"required\\\" for=\\\"id_keyword_density\\\">\\n                            Keyword density <span>(\");\n    stack1 = helpers._triageMustache.call(depth0, \"keywordDensity\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\")</span>\\n                        </label>\\n                        \");\n    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n      'type': (\"range\"),\n      'required': (true),\n      'value': (\"keywordDensity\"),\n      'id': (\"id_keyword_density\"),\n      'min': (\"1\"),\n      'max': (\"10\"),\n      'step': (\"0.1\"),\n      'pattern': (\"number\")\n    },hashTypes:{'type': \"STRING\",'required': \"BOOLEAN\",'value': \"ID\",'id': \"STRING\",'min': \"STRING\",'max': \"STRING\",'step': \"STRING\",'pattern': \"STRING\"},hashContexts:{'type': depth0,'required': depth0,'value': depth0,'id': depth0,'min': depth0,'max': depth0,'step': depth0,'pattern': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n    data.buffer.push(\"\\n\\n                        <small class=\\\"error\\\">This field requires a number &gt;= 0.</small>\\n                    </div>\\n                    <div class=\\\"holder\\\" id=\\\"div_id_keyword_deviation\\\">\\n                        <div class=\\\"panel-info\\\">\\n                            The keyword deviation index regulates the spread of the keyword density. The default is set\\n                            to 33%, which will result of +/- 33% keyword density over the bulk content.\\n                        </div>\\n                        <label class=\\\"required\\\" for=\\\"id_keyword_deviation\\\">\\n                            Keyword deviation <span>(\");\n    stack1 = helpers._triageMustache.call(depth0, \"keywordDeviation\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\")</span>\\n                        </label>\\n                        \");\n    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n      'type': (\"range\"),\n      'required': (true),\n      'value': (\"keywordDeviation\"),\n      'id': (\"id_keyword_deviation\"),\n      'min': (\"1\"),\n      'max': (\"50\"),\n      'step': (\"0.1\"),\n      'pattern': (\"number\")\n    },hashTypes:{'type': \"STRING\",'required': \"BOOLEAN\",'value': \"ID\",'id': \"STRING\",'min': \"STRING\",'max': \"STRING\",'step': \"STRING\",'pattern': \"STRING\"},hashContexts:{'type': depth0,'required': depth0,'value': depth0,'id': depth0,'min': depth0,'max': depth0,'step': depth0,'pattern': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n    data.buffer.push(\"\\n                        <small class=\\\"error\\\">This field requires a number &gt;= 0.</small>\\n                    </div>\\n                    <div class=\\\"holder\\\" id=\\\"div_id_max_length\\\">\\n                        <div class=\\\"panel-info\\\">\\n                            Every Training Type has an intrinsic length, which depends on the available data and the\\n                            programming of the training. If you need shorter text, you can limit the length of the text.\\n                            Default is 0, which results in automatic.\\n                        </div>\\n                        <label for=\\\"id_max_length\\\">\\n                            Max length <span>(\");\n    stack1 = helpers._triageMustache.call(depth0, \"maxLength\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\")</span>\\n                        </label>\\n                        \");\n    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n      'type': (\"range\"),\n      'required': (true),\n      'value': (\"maxLength\"),\n      'id': (\"id_max_length\"),\n      'min': (\"0\"),\n      'max': (\"2500\"),\n      'step': (\"1\"),\n      'pattern': (\"^[0-9]*$\")\n    },hashTypes:{'type': \"STRING\",'required': \"BOOLEAN\",'value': \"ID\",'id': \"STRING\",'min': \"STRING\",'max': \"STRING\",'step': \"STRING\",'pattern': \"STRING\"},hashContexts:{'type': depth0,'required': depth0,'value': depth0,'id': depth0,'min': depth0,'max': depth0,'step': depth0,'pattern': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n    data.buffer.push(\"\\n                        <small class=\\\"error\\\">Only numbers &gt;= 0 are allowed.</small>\\n                    </div>\\n                </div>\\n            </dd>\\n        </dl>\\n\\n    </fieldset>\\n\\n</section>\\n\");\n    return buffer;\n    \n  });\n\n});","define('morgana/templates/content-project/bulk-upload', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1;\n\n\n    stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\");\n    return buffer;\n    \n  });\n\n});","define('morgana/templates/content-project/bulk-upload/upload', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, helper, options, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n    data.buffer.push(\"<section id=\\\"content_project_wizard\\\">\\n    <header class=\\\"row\\\">\\n        <div class=\\\"small-12 columns\\\">\\n            <h1>Bulk Upload File\\n                <small>\");\n    stack1 = helpers._triageMustache.call(depth0, \"contentProject.name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</small>\\n\\n            </h1>\\n        </div>\\n    </header>\\n    <div class=\\\"row\\\">\\n        <form \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"upload\", {hash:{\n      'on': (\"submit\")\n    },hashTypes:{'on': \"STRING\"},hashContexts:{'on': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n    data.buffer.push(\" data-abide>\\n\\n            <section class=\\\"large-8 small-12 columns\\\">\\n                <fieldset>\\n                    <div class=\\\"holder\\\" id=\\\"div_id_tag\\\">\\n                        <label for=\\\"id_tag\\\">Tag</label>\\n                        \");\n    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n      'value': (\"tag\"),\n      'id': (\"id_tag\"),\n      'class': (\"textinput\"),\n      'placeholder': (\"KWxx\")\n    },hashTypes:{'value': \"ID\",'id': \"STRING\",'class': \"STRING\",'placeholder': \"STRING\"},hashContexts:{'value': depth0,'id': depth0,'class': depth0,'placeholder': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n    data.buffer.push(\"\\n                    </div>\\n                    <div class=\\\"holder\\\" id=\\\"div_id_data_file\\\">\\n                        <label for=\\\"id_data_file\\\">File</label>\\n                        \");\n    data.buffer.push(escapeExpression(helpers.view.call(depth0, \"FileUploadField\", {hash:{\n      'uploadFile': (\"dataFile\")\n    },hashTypes:{'uploadFile': \"ID\"},hashContexts:{'uploadFile': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n    data.buffer.push(\"\\n                    </div>\\n                </fieldset>\\n            </section>\\n\\n            <aside class=\\\"small-12 large-4 columns\\\">\\n                \");\n    data.buffer.push(escapeExpression((helper = helpers['button-with-loader'] || (depth0 && depth0['button-with-loader']),options={hash:{\n      'isLoading': (\"actionsLoadingStages.back\"),\n      'buttonText': (\"Back to Content Project Detail\"),\n      'action': (\"back\")\n    },hashTypes:{'isLoading': \"ID\",'buttonText': \"STRING\",'action': \"STRING\"},hashContexts:{'isLoading': depth0,'buttonText': depth0,'action': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"button-with-loader\", options))));\n    data.buffer.push(\"\\n                \");\n    data.buffer.push(escapeExpression((helper = helpers['button-with-loader'] || (depth0 && depth0['button-with-loader']),options={hash:{\n      'isLoading': (\"actionsLoadingStages.upload\"),\n      'buttonText': (\"Upload File\"),\n      'action': (\"upload\")\n    },hashTypes:{'isLoading': \"ID\",'buttonText': \"STRING\",'action': \"STRING\"},hashContexts:{'isLoading': depth0,'buttonText': depth0,'action': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"button-with-loader\", options))));\n    data.buffer.push(\"\\n            </aside>\\n        </form>\\n    </div>\\n</section>\\n\");\n    return buffer;\n    \n  });\n\n});","define('morgana/templates/content-project/content-project-exports', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1;\n\n\n    stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\");\n    return buffer;\n    \n  });\n\n});","define('morgana/templates/content-project/content-project-exports/-content-project-export-list', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n  function program1(depth0,data) {\n    \n    var buffer = '', helper, options;\n    data.buffer.push(\"\\n    \");\n    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"things/_loading\", options) : helperMissing.call(depth0, \"partial\", \"things/_loading\", options))));\n    data.buffer.push(\"\\n\");\n    return buffer;\n    }\n\n  function program3(depth0,data) {\n    \n    var buffer = '', stack1;\n    data.buffer.push(\"\\n\\n\");\n    stack1 = helpers['if'].call(depth0, \"hasItems\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(10, program10, data),fn:self.program(4, program4, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\");\n    return buffer;\n    }\n  function program4(depth0,data) {\n    \n    var buffer = '', stack1;\n    data.buffer.push(\"\\n<table>\\n    <thead>\\n        <tr>\\n            <th>Status</th>\\n            <th>Created</th>\\n            <th>Filename</th>\\n            <th>Details</th>\\n            <th></th>\\n        </tr>\\n    </thead>\\n    <tbody>\\n        \");\n    stack1 = helpers.each.call(depth0, \"export\", \"in\", \"model\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n    </tbody>\\n</table>\\n\");\n    data.buffer.push(escapeExpression(helpers.view.call(depth0, \"tableFooter\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data})));\n    data.buffer.push(\"\\n\\n\");\n    return buffer;\n    }\n  function program5(depth0,data) {\n    \n    var buffer = '', stack1, helper, options;\n    data.buffer.push(\"\\n        <tr>\\n            <td>\");\n    stack1 = helpers._triageMustache.call(depth0, \"export.status\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</td>\\n            <td>\");\n    data.buffer.push(escapeExpression((helper = helpers.ago || (depth0 && depth0.ago),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"export.created\", options) : helperMissing.call(depth0, \"ago\", \"export.created\", options))));\n    data.buffer.push(\"</td>\\n            <td>\");\n    stack1 = helpers._triageMustache.call(depth0, \"export.name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</td>\\n            <td>\");\n    stack1 = helpers._triageMustache.call(depth0, \"export.details\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</td>\\n            <td>\");\n    stack1 = helpers['if'].call(depth0, \"export.isDownloadable\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(8, program8, data),fn:self.program(6, program6, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</td>\\n        </tr>\\n        \");\n    return buffer;\n    }\n  function program6(depth0,data) {\n    \n    var buffer = '';\n    data.buffer.push(\"<a \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"downloadFile\", \"export\", {hash:{\n      'on': (\"click\")\n    },hashTypes:{'on': \"STRING\"},hashContexts:{'on': depth0},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data})));\n    data.buffer.push(\">download</a>\");\n    return buffer;\n    }\n\n  function program8(depth0,data) {\n    \n    \n    data.buffer.push(\"not ready (yet)\");\n    }\n\n  function program10(depth0,data) {\n    \n    \n    data.buffer.push(\"\\n<div class=\\\"panel-info\\\">\\n    There are no Exports.\\n</div>\\n\");\n    }\n\n    stack1 = helpers['if'].call(depth0, \"isLoading\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\");\n    return buffer;\n    \n  });\n\n});","define('morgana/templates/content-project/content-project-exports/index', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n    data.buffer.push(\"<section>\\n    <header class=\\\"row\\\">\\n        <div class=\\\"small-12 columns\\\">\\n            <h1>Exports</h1>\\n        </div>\\n    </header>\\n    <div class=\\\"row\\\">\\n        <section class=\\\"large-8 small-12 columns\\\">\\n            \");\n    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"content_project/content-project-exports/-content-project-export-list\", options) : helperMissing.call(depth0, \"partial\", \"content_project/content-project-exports/-content-project-export-list\", options))));\n    data.buffer.push(\"\\n        </section>\\n        <aside class=\\\"small-12 large-4 columns\\\">\\n\\n        </aside>\\n\\n    </div>\\n</section>\");\n    return buffer;\n    \n  });\n\n});","define('morgana/templates/content-project/delete', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n    data.buffer.push(\"<section id=\\\"content_project_wizard\\\">\\n    <header class=\\\"row\\\">\\n        <div class=\\\"small-12 columns\\\">\\n            <h1>Delete Content Project \");\n    stack1 = helpers._triageMustache.call(depth0, \"name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"?\\n            </h1>\\n        </div>\\n    </header>\\n    <div class=\\\"row\\\">\\n\\n            <section class=\\\"large-8 small-12 columns\\\">\\n                <div class=\\\"warn-delete-panel panel\\\">\\n                     Are you sure that you want to delete this content project including all its objects and generated texts?\\n                </div>\\n            </section>\\n\\n            <aside class=\\\"small-12 large-4 columns\\\">\\n                \");\n    data.buffer.push(escapeExpression((helper = helpers['button-with-loader'] || (depth0 && depth0['button-with-loader']),options={hash:{\n      'isLoading': (\"actionsLoadingStages.back\"),\n      'buttonText': (\"Back to Content Project\"),\n      'action': (\"back\")\n    },hashTypes:{'isLoading': \"ID\",'buttonText': \"STRING\",'action': \"STRING\"},hashContexts:{'isLoading': depth0,'buttonText': depth0,'action': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"button-with-loader\", options))));\n    data.buffer.push(\"\\n                \");\n    data.buffer.push(escapeExpression((helper = helpers['button-with-loader'] || (depth0 && depth0['button-with-loader']),options={hash:{\n      'isAlert': (true),\n      'isLoading': (\"actionsLoadingStages.delete\"),\n      'buttonText': (\"Yes, delete this Content Project!\"),\n      'action': (\"delete\")\n    },hashTypes:{'isAlert': \"BOOLEAN\",'isLoading': \"ID\",'buttonText': \"STRING\",'action': \"STRING\"},hashContexts:{'isAlert': depth0,'isLoading': depth0,'buttonText': depth0,'action': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"button-with-loader\", options))));\n    data.buffer.push(\"\\n            </aside>\\n    </div>\\n</section>\");\n    return buffer;\n    \n  });\n\n});","define('morgana/templates/content-project/edit', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, helper, options, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n    data.buffer.push(\"<section id=\\\"content_project_wizard\\\">\\n    <header class=\\\"row\\\">\\n        <div class=\\\"small-12 columns\\\">\\n            <h1>Edit Content Project\\n                <small>\");\n    stack1 = helpers._triageMustache.call(depth0, \"name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</small>\\n            </h1>\\n        </div>\\n    </header>\\n    <div class=\\\"row\\\">\\n        <form \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"edit\", {hash:{\n      'on': (\"submit\")\n    },hashTypes:{'on': \"STRING\"},hashContexts:{'on': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n    data.buffer.push(\" data-abide>\\n\\n            \");\n    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"content-project/-form-fields\", options) : helperMissing.call(depth0, \"partial\", \"content-project/-form-fields\", options))));\n    data.buffer.push(\"\\n\\n            <aside class=\\\"small-12 large-4 columns\\\">\\n                \");\n    data.buffer.push(escapeExpression((helper = helpers['button-with-loader'] || (depth0 && depth0['button-with-loader']),options={hash:{\n      'isLoading': (\"actionsLoadingStages.back\"),\n      'buttonText': (\"Back to Content Project Detail\"),\n      'action': (\"back\")\n    },hashTypes:{'isLoading': \"ID\",'buttonText': \"STRING\",'action': \"STRING\"},hashContexts:{'isLoading': depth0,'buttonText': depth0,'action': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"button-with-loader\", options))));\n    data.buffer.push(\"\\n                \");\n    data.buffer.push(escapeExpression((helper = helpers['button-with-loader'] || (depth0 && depth0['button-with-loader']),options={hash:{\n      'isLoading': (\"actionsLoadingStages.edit\"),\n      'buttonText': (\"Save Content Project\"),\n      'action': (\"edit\")\n    },hashTypes:{'isLoading': \"ID\",'buttonText': \"STRING\",'action': \"STRING\"},hashContexts:{'isLoading': depth0,'buttonText': depth0,'action': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"button-with-loader\", options))));\n    data.buffer.push(\"\\n            </aside>\\n        </form>\\n    </div>\\n</section>\");\n    return buffer;\n    \n  });\n\n});","define('morgana/templates/content-project/index', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, helper, options, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;\n\n  function program1(depth0,data) {\n    \n    var buffer = '', helper, options;\n    data.buffer.push(\"\\n                 <div data-dropdown=\\\"add_thing_drop\\\" \");\n    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n      'class': (\":dropdown :button :expand actionsLoadingStages.addThing:loading\")\n    },hashTypes:{'class': \"STRING\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\n    data.buffer.push(\">\\n                    <span>\\n                        Add Objects\\n                    </span>\\n                    <ul id=\\\"add_thing_drop\\\" class=\\\"f-dropdown content\\\" data-dropdown-content>\\n                        <li>\\n                            \");\n    data.buffer.push(escapeExpression((helper = helpers['button-with-loader'] || (depth0 && depth0['button-with-loader']),options={hash:{\n      'displayAsButton': (false),\n      'isLoading': (\"actionsLoadingStages.addThing\"),\n      'buttonText': (\"Add single object\"),\n      'action': (\"createThing\")\n    },hashTypes:{'displayAsButton': \"BOOLEAN\",'isLoading': \"ID\",'buttonText': \"STRING\",'action': \"STRING\"},hashContexts:{'displayAsButton': depth0,'isLoading': depth0,'buttonText': depth0,'action': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"button-with-loader\", options))));\n    data.buffer.push(\"\\n                        </li>\\n                        <li>\\n                            \");\n    data.buffer.push(escapeExpression((helper = helpers['button-with-loader'] || (depth0 && depth0['button-with-loader']),options={hash:{\n      'displayAsButton': (false),\n      'isLoading': (\"actionsLoadingStages.addThing\"),\n      'buttonText': (\"Import File\"),\n      'action': (\"uploadFile\")\n    },hashTypes:{'displayAsButton': \"BOOLEAN\",'isLoading': \"ID\",'buttonText': \"STRING\",'action': \"STRING\"},hashContexts:{'displayAsButton': depth0,'isLoading': depth0,'buttonText': depth0,'action': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"button-with-loader\", options))));\n    data.buffer.push(\"\\n                        </li>\\n\\n                    </ul>\\n                 </div>\\n\\n            \");\n    return buffer;\n    }\n\n  function program3(depth0,data) {\n    \n    var buffer = '', stack1, helper, options;\n    data.buffer.push(\"\\n                \");\n    stack1 = (helper = helpers['can-do'] || (depth0 && depth0['can-do']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.program(6, program6, data),fn:self.program(4, program4, data),contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"payForContent\", options) : helperMissing.call(depth0, \"can-do\", \"payForContent\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\\n            \");\n    return buffer;\n    }\n  function program4(depth0,data) {\n    \n    var buffer = '', helper, options;\n    data.buffer.push(\"\\n                    <div data-dropdown=\\\"generate_content_drop\\\" \");\n    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n      'class': (\":dropdown :button :expand actionsLoadingStages.generateContent:loading\")\n    },hashTypes:{'class': \"STRING\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\n    data.buffer.push(\">\\n                        <span>\\n                            Generate content\\n                        </span>\\n                        <ul id=\\\"generate_content_drop\\\" class=\\\"f-dropdown content\\\" data-dropdown-content>\\n                            <li>\\n                                \");\n    data.buffer.push(escapeExpression((helper = helpers['button-with-loader'] || (depth0 && depth0['button-with-loader']),options={hash:{\n      'displayAsButton': (false),\n      'isLoading': (\"actionsLoadingStages.generateContent\"),\n      'buttonText': (\"Generate all missing content\"),\n      'action': (\"generateContent\")\n    },hashTypes:{'displayAsButton': \"BOOLEAN\",'isLoading': \"ID\",'buttonText': \"STRING\",'action': \"STRING\"},hashContexts:{'displayAsButton': depth0,'isLoading': depth0,'buttonText': depth0,'action': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"button-with-loader\", options))));\n    data.buffer.push(\"\\n                            </li>\\n                            <li>\\n                                \");\n    data.buffer.push(escapeExpression((helper = helpers['button-with-loader'] || (depth0 && depth0['button-with-loader']),options={hash:{\n      'displayAsButton': (false),\n      'isLoading': (\"actionsLoadingStages.generateContent\"),\n      'buttonText': (\"(Re-)generate all content\"),\n      'action': (\"forceGenerateContent\")\n    },hashTypes:{'displayAsButton': \"BOOLEAN\",'isLoading': \"ID\",'buttonText': \"STRING\",'action': \"STRING\"},hashContexts:{'displayAsButton': depth0,'isLoading': depth0,'buttonText': depth0,'action': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"button-with-loader\", options))));\n    data.buffer.push(\"\\n                            </li>\\n\\n                        </ul>\\n                    </div>\\n\\n\\n                \");\n    return buffer;\n    }\n\n  function program6(depth0,data) {\n    \n    var buffer = '', helper, options;\n    data.buffer.push(\"\\n                    <div>\\n                        \");\n    data.buffer.push(escapeExpression((helper = helpers['button-with-loader'] || (depth0 && depth0['button-with-loader']),options={hash:{\n      'isLoading': (\"actionsLoadingStages.buyCredits\"),\n      'buttonText': (\"Buy credits to generate content\"),\n      'action': (\"buyCredits\")\n    },hashTypes:{'isLoading': \"ID\",'buttonText': \"STRING\",'action': \"STRING\"},hashContexts:{'isLoading': depth0,'buttonText': depth0,'action': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"button-with-loader\", options))));\n    data.buffer.push(\"\\n                    </div>\\n\\n                \");\n    return buffer;\n    }\n\n  function program8(depth0,data) {\n    \n    var buffer = '', helper, options;\n    data.buffer.push(\"\\n                 <div data-dropdown=\\\"download_content_drop\\\" \");\n    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n      'class': (\":dropdown :button :expand actionsLoadingStages.downloadContent:loading\")\n    },hashTypes:{'class': \"STRING\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\n    data.buffer.push(\">\\n                    <span>\\n                        Download content as Excel\\n                    </span>\\n                    <ul id=\\\"download_content_drop\\\" class=\\\"f-dropdown content\\\" data-dropdown-content>\\n                        <li>\\n                            \");\n    data.buffer.push(escapeExpression((helper = helpers['button-with-loader'] || (depth0 && depth0['button-with-loader']),options={hash:{\n      'displayAsButton': (false),\n      'isLoading': (\"actionsLoadingStages.downloadContent\"),\n      'buttonText': (\"Download texts as XLSX\"),\n      'action': (\"downloadContent\")\n    },hashTypes:{'displayAsButton': \"BOOLEAN\",'isLoading': \"ID\",'buttonText': \"STRING\",'action': \"STRING\"},hashContexts:{'displayAsButton': depth0,'isLoading': depth0,'buttonText': depth0,'action': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"button-with-loader\", options))));\n    data.buffer.push(\"\\n                        </li>\\n                        <li>\\n                            \");\n    data.buffer.push(escapeExpression((helper = helpers['button-with-loader'] || (depth0 && depth0['button-with-loader']),options={hash:{\n      'displayAsButton': (false),\n      'isLoading': (\"actionsLoadingStages.downloadContent\"),\n      'buttonText': (\"Download example XLSX\"),\n      'action': (\"downloadExample\")\n    },hashTypes:{'displayAsButton': \"BOOLEAN\",'isLoading': \"ID\",'buttonText': \"STRING\",'action': \"STRING\"},hashContexts:{'displayAsButton': depth0,'isLoading': depth0,'buttonText': depth0,'action': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"button-with-loader\", options))));\n    data.buffer.push(\"\\n                        </li>\\n\\n                    </ul>\\n                 </div>\\n\\n            \");\n    return buffer;\n    }\n\n  function program10(depth0,data) {\n    \n    var buffer = '', helper, options;\n    data.buffer.push(\"\\n                <div>\\n                    \");\n    data.buffer.push(escapeExpression((helper = helpers['button-with-loader'] || (depth0 && depth0['button-with-loader']),options={hash:{\n      'isLoading': (\"actionsLoadingStages.downloadImages\"),\n      'buttonText': (\"Download images as zip\"),\n      'action': (\"downloadImages\")\n    },hashTypes:{'isLoading': \"ID\",'buttonText': \"STRING\",'action': \"STRING\"},hashContexts:{'isLoading': depth0,'buttonText': depth0,'action': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"button-with-loader\", options))));\n    data.buffer.push(\"\\n                </div>\\n            \");\n    return buffer;\n    }\n\n  function program12(depth0,data) {\n    \n    var buffer = '', stack1;\n    data.buffer.push(\"\\n                \");\n    stack1 = helpers['if'].call(depth0, \"generatingZip\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(15, program15, data),fn:self.program(13, program13, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n            \");\n    return buffer;\n    }\n  function program13(depth0,data) {\n    \n    \n    data.buffer.push(\"\\n                    <div>\\n                        <a class=\\\"button expand disabled\\\" >\\n                            Generating images zip\\n                        </a>\\n                    </div>\\n                \");\n    }\n\n  function program15(depth0,data) {\n    \n    var buffer = '', helper, options;\n    data.buffer.push(\"\\n                    <div>\\n                        \");\n    data.buffer.push(escapeExpression((helper = helpers['button-with-loader'] || (depth0 && depth0['button-with-loader']),options={hash:{\n      'isLoading': (\"actionsLoadingStages.createImageZip\"),\n      'buttonText': (\"(Re-)Generate images zip\"),\n      'action': (\"createImageZip\")\n    },hashTypes:{'isLoading': \"ID\",'buttonText': \"STRING\",'action': \"STRING\"},hashContexts:{'isLoading': depth0,'buttonText': depth0,'action': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"button-with-loader\", options))));\n    data.buffer.push(\"\\n                    </div>\\n                \");\n    return buffer;\n    }\n\n    data.buffer.push(\"<section>\\n    <header class=\\\"row\\\">\\n        <div class=\\\"small-12 columns\\\">\\n            <h1>\\n                Content Project&nbsp;\\n                <small>\");\n    stack1 = helpers._triageMustache.call(depth0, \"name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</small>\\n            </h1>\\n        </div>\\n        <div class=\\\"small-12 columns\\\">\\n        </div>\\n    </header>\\n    <div class=\\\"row\\\">\\n        <section class=\\\"large-8 small-12 columns\\\">\\n            <section>\\n                \");\n    data.buffer.push(escapeExpression((helper = helpers.outlet || (depth0 && depth0.outlet),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"things\", options) : helperMissing.call(depth0, \"outlet\", \"things\", options))));\n    data.buffer.push(\"\\n            </section>\\n        </section>\\n        <aside class=\\\"small-12 large-4 columns\\\">\\n            \");\n    data.buffer.push(escapeExpression((helper = helpers['button-with-loader'] || (depth0 && depth0['button-with-loader']),options={hash:{\n      'isLoading': (\"actionsLoadingStages.back\"),\n      'buttonText': (\"Back to Content Projects Overview\"),\n      'action': (\"back\")\n    },hashTypes:{'isLoading': \"ID\",'buttonText': \"STRING\",'action': \"STRING\"},hashContexts:{'isLoading': depth0,'buttonText': depth0,'action': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"button-with-loader\", options))));\n    data.buffer.push(\"\\n\\n            \");\n    stack1 = (helper = helpers['can-do'] || (depth0 && depth0['can-do']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"addThing\", options) : helperMissing.call(depth0, \"can-do\", \"addThing\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\\n\\n            \");\n    stack1 = (helper = helpers['can-do'] || (depth0 && depth0['can-do']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"createContent\", options) : helperMissing.call(depth0, \"can-do\", \"createContent\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\\n\\n            \");\n    stack1 = (helper = helpers['can-do'] || (depth0 && depth0['can-do']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(8, program8, data),contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"downloadContent\", options) : helperMissing.call(depth0, \"can-do\", \"downloadContent\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\\n\\n            \");\n    stack1 = (helper = helpers['can-do'] || (depth0 && depth0['can-do']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(10, program10, data),contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"downloadImagesAsZip\", options) : helperMissing.call(depth0, \"can-do\", \"downloadImagesAsZip\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\\n\\n            \");\n    stack1 = (helper = helpers['can-do'] || (depth0 && depth0['can-do']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(12, program12, data),contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"generateImagesAsZip\", options) : helperMissing.call(depth0, \"can-do\", \"generateImagesAsZip\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\\n            <div data-dropdown=\\\"edit_content_project_drop\\\"  \");\n    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n      'class': (\":dropdown :button :expand actionsLoadingStages.edit:loading\")\n    },hashTypes:{'class': \"STRING\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\n    data.buffer.push(\">\\n                <span>\\n                    Edit this Content Project\\n                </span>\\n                <ul id=\\\"edit_content_project_drop\\\" class=\\\"f-dropdown content\\\" data-dropdown-content>\\n                    <li>\\n                        \");\n    data.buffer.push(escapeExpression((helper = helpers['button-with-loader'] || (depth0 && depth0['button-with-loader']),options={hash:{\n      'displayAsButton': (false),\n      'isLoading': (\"actionsLoadingStages.edit\"),\n      'buttonText': (\"Edit this Content Project\"),\n      'action': (\"edit\")\n    },hashTypes:{'displayAsButton': \"BOOLEAN\",'isLoading': \"ID\",'buttonText': \"STRING\",'action': \"STRING\"},hashContexts:{'displayAsButton': depth0,'isLoading': depth0,'buttonText': depth0,'action': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"button-with-loader\", options))));\n    data.buffer.push(\"\\n                    </li>\\n                    <li>\\n                        \");\n    data.buffer.push(escapeExpression((helper = helpers['button-with-loader'] || (depth0 && depth0['button-with-loader']),options={hash:{\n      'displayAsButton': (false),\n      'isLoading': (\"actionsLoadingStages.edit\"),\n      'buttonText': (\"Delete this Content Project\"),\n      'action': (\"delete\")\n    },hashTypes:{'displayAsButton': \"BOOLEAN\",'isLoading': \"ID\",'buttonText': \"STRING\",'action': \"STRING\"},hashContexts:{'displayAsButton': depth0,'isLoading': depth0,'buttonText': depth0,'action': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"button-with-loader\", options))));\n    data.buffer.push(\"\\n                    </li>\\n\\n                </ul>\\n            </div>\\n\\n            <div>\\n                <div class=\\\"panel callout radius\\\">\\n                    <h5>\\n                        Properties\\n                    </h5>\\n\\n                    <ul class=\\\"detail-list\\\">\\n                        <li>\\n                            <span class=\\\"\\\">\");\n    stack1 = helpers._triageMustache.call(depth0, \"countThings\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\" Objects</span>\\n                        </li>\\n                        <li>\\n                            <span class=\\\"\\\">\");\n    stack1 = helpers._triageMustache.call(depth0, \"countGeneratedTextsDisplay\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\" Texts </span>\\n                        </li>\\n                        <li>\\n                            <span class=\\\"\\\">\");\n    stack1 = helpers._triageMustache.call(depth0, \"countGeneratedTextsErrorsDisplay\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\" Errors </span>\\n                        </li>\\n                        <li>\\n                            <span class=\\\"\\\">Keyword Density: \");\n    stack1 = helpers._triageMustache.call(depth0, \"keywordDensity\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\" </span>\\n                        </li>\\n                        <li>\\n                            <span class=\\\"\\\">Keyword Deviation: \");\n    stack1 = helpers._triageMustache.call(depth0, \"keywordDeviation\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\" </span>\\n                        </li>\\n                        <li>\\n                            <span class=\\\"\\\">Max Length: \");\n    stack1 = helpers._triageMustache.call(depth0, \"maxLength\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</span>\\n                        </li>\\n                        <li>\\n                            <span class=\\\"\\\">Training Type: \");\n    stack1 = helpers._triageMustache.call(depth0, \"engineConfiguration.name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</span>\\n                        </li>\\n                        <li>\\n                            <span class=\\\"\\\">Category: \");\n    stack1 = helpers._triageMustache.call(depth0, \"engineConfiguration.engineContentTypeCategory.name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</span>\\n                        </li>\\n                        <li>\\n                            <span class=\\\"\\\">Language: \");\n    stack1 = helpers._triageMustache.call(depth0, \"engineConfiguration.language.name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</span>\\n                        </li>\\n                        <li>\\n                            <span class=\\\"\\\">Status: \");\n    stack1 = helpers._triageMustache.call(depth0, \"engineConfiguration.status.name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</span>\\n                        </li>\\n                    </ul>\\n                </div>\\n            </div>\\n        </aside>\\n    </div>\\n</section>\\n\");\n    return buffer;\n    \n  });\n\n});","define('morgana/templates/content-project/thing-type', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1;\n\n\n    stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\");\n    return buffer;\n    \n  });\n\n});","define('morgana/templates/content-project/thing-type/thing-new', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', helper, options, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n    data.buffer.push(\"<section id=\\\"content_project_wizard\\\">\\n    <header class=\\\"row\\\">\\n        <div class=\\\"small-12 columns\\\">\\n            <h1>Create New Object\\n            </h1>\\n        </div>\\n    </header>\\n    <div class=\\\"row\\\">\\n\\n        <form \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"create\", {hash:{\n      'on': (\"submit\")\n    },hashTypes:{'on': \"STRING\"},hashContexts:{'on': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n    data.buffer.push(\" data-abide>\\n            <section class=\\\"large-8 small-12 columns\\\">\\n                \");\n    data.buffer.push(escapeExpression(helpers.view.call(depth0, \"serverSideModelFormFields\", {hash:{\n      'modelBinding': (\"model\"),\n      'mainFieldBinding': (\"mainFields\"),\n      'optionalFieldsBinding': (\"optionalFields\")\n    },hashTypes:{'modelBinding': \"STRING\",'mainFieldBinding': \"STRING\",'optionalFieldsBinding': \"STRING\"},hashContexts:{'modelBinding': depth0,'mainFieldBinding': depth0,'optionalFieldsBinding': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n    data.buffer.push(\"\\n            </section>\\n\\n            <aside class=\\\"small-12 large-4 columns\\\">\\n                <div data-ax-fixed-container>\\n                    \");\n    data.buffer.push(escapeExpression((helper = helpers['button-with-loader'] || (depth0 && depth0['button-with-loader']),options={hash:{\n      'isLoading': (\"actionsLoadingStages.back\"),\n      'buttonText': (\"Back to Content Project Detail\"),\n      'action': (\"back\")\n    },hashTypes:{'isLoading': \"ID\",'buttonText': \"STRING\",'action': \"STRING\"},hashContexts:{'isLoading': depth0,'buttonText': depth0,'action': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"button-with-loader\", options))));\n    data.buffer.push(\"\\n                    \");\n    data.buffer.push(escapeExpression((helper = helpers['button-with-loader'] || (depth0 && depth0['button-with-loader']),options={hash:{\n      'isLoading': (\"actionsLoadingStages.create\"),\n      'buttonText': (\"Create Object\"),\n      'action': (\"create\")\n    },hashTypes:{'isLoading': \"ID\",'buttonText': \"STRING\",'action': \"STRING\"},hashContexts:{'isLoading': depth0,'buttonText': depth0,'action': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"button-with-loader\", options))));\n    data.buffer.push(\"\\n                </div>\\n            </aside>\\n        </form>\\n\\n    </div>\\n</section>\");\n    return buffer;\n    \n  });\n\n});","define('morgana/templates/content-project/thing-type/thing', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1;\n\n\n    stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\");\n    return buffer;\n    \n  });\n\n});","define('morgana/templates/content-project/thing-type/thing/-server-side-model-form-field-container', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', helper, options, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n    data.buffer.push(\"<div class=\\\"holder\\\">\\n    <label>\\n        <label \");\n    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n      'class': (\"field.required:required\")\n    },hashTypes:{'class': \"STRING\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\n    data.buffer.push(\">\");\n    data.buffer.push(escapeExpression((helper = helpers['capitalize-string'] || (depth0 && depth0['capitalize-string']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"field.label\", options) : helperMissing.call(depth0, \"capitalize-string\", \"field.label\", options))));\n    data.buffer.push(\"</label>\\n        <div class=\\\"row collapse\\\">\\n            <div class=\\\"small-11 columns\\\">\\n                \");\n    data.buffer.push(escapeExpression(helpers.view.call(depth0, \"serverSideModelFormField\", {hash:{\n      'fieldBinding': (\"field\"),\n      'modelBinding': (\"model\")\n    },hashTypes:{'fieldBinding': \"STRING\",'modelBinding': \"STRING\"},hashContexts:{'fieldBinding': depth0,'modelBinding': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n    data.buffer.push(\"\\n            </div>\\n            <div class=\\\"small-1 columns\\\">\\n                \");\n    data.buffer.push(escapeExpression(helpers.view.call(depth0, \"serverSideModelFormFieldIndicator\", {hash:{\n      'fieldBinding': (\"field\"),\n      'modelBinding': (\"model\")\n    },hashTypes:{'fieldBinding': \"STRING\",'modelBinding': \"STRING\"},hashContexts:{'fieldBinding': depth0,'modelBinding': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n    data.buffer.push(\"\\n            </div>\\n        </div>\\n    </label>\\n</div>\");\n    return buffer;\n    \n  });\n\n});","define('morgana/templates/content-project/thing-type/thing/-server-side-model-form-fields', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, escapeExpression=this.escapeExpression, self=this;\n\n  function program1(depth0,data) {\n    \n    var buffer = '';\n    data.buffer.push(\"\\n        \");\n    data.buffer.push(escapeExpression(helpers.view.call(depth0, \"serverSideModelFormFieldContainer\", {hash:{\n      'fieldBinding': (\"field\"),\n      'modelBinding': (\"model\")\n    },hashTypes:{'fieldBinding': \"STRING\",'modelBinding': \"STRING\"},hashContexts:{'fieldBinding': depth0,'modelBinding': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n    data.buffer.push(\"\\n    \");\n    return buffer;\n    }\n\n  function program3(depth0,data) {\n    \n    var buffer = '', stack1;\n    data.buffer.push(\"\\n    <fieldset>\\n        <legend>Optional Fields</legend>\\n        <dl data-accordion=\\\"\\\" class=\\\"accordion\\\">\\n            <dd class=\\\"accordion-navigation\\\">\\n\\n                <a href=\\\"#optional-fields\\\">\\n                    <div class=\\\"accordion-navigation-head\\\">\\n                        <div class=\\\"accordion-navigation-head-description\\\">\\n                            You can provide additional information about the object. This can improve the quality of your content even further.\\n                        </div>\\n                        <div class=\\\"accordion-navigation-head-icon\\\">\\n                            <i class=\\\"right fi-plus\\\"></i>\\n                        </div>\\n                    </div>\\n                </a>\\n\\n                <div class=\\\"content\\\" id=\\\"optional-fields\\\">\\n                    \");\n    stack1 = helpers.each.call(depth0, \"field\", \"in\", \"optionalFields\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(4, program4, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n                </div>\\n            </dd>\\n        </dl>\\n    </fieldset>\\n\\n\");\n    return buffer;\n    }\n  function program4(depth0,data) {\n    \n    var buffer = '';\n    data.buffer.push(\"\\n                        \");\n    data.buffer.push(escapeExpression(helpers.view.call(depth0, \"serverSideModelFormFieldContainer\", {hash:{\n      'fieldBinding': (\"field\"),\n      'modelBinding': (\"model\")\n    },hashTypes:{'fieldBinding': \"STRING\",'modelBinding': \"STRING\"},hashContexts:{'fieldBinding': depth0,'modelBinding': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n    data.buffer.push(\"\\n                    \");\n    return buffer;\n    }\n\n    data.buffer.push(\"\\n<fieldset>\\n    \");\n    stack1 = helpers.each.call(depth0, \"field\", \"in\", \"mainFields\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n</fieldset>\\n\");\n    stack1 = helpers['if'].call(depth0, \"optionalFields\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\");\n    return buffer;\n    \n  });\n\n});","define('morgana/templates/content-project/thing-type/thing/delete', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n    data.buffer.push(\"<section id=\\\"content_project_wizard\\\">\\n    <header class=\\\"row\\\">\\n        <div class=\\\"small-12 columns\\\">\\n            <h1>Delete Objectt \");\n    stack1 = helpers._triageMustache.call(depth0, \"name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"?\\n            </h1>\\n        </div>\\n    </header>\\n    <div class=\\\"row\\\">\\n\\n            <section class=\\\"large-8 small-12 columns\\\">\\n                <div class=\\\"warn-delete-panel panel\\\">\\n                     Are you sure that you want to delete this object and generated texts?\\n                </div>\\n            </section>\\n\\n            <aside class=\\\"small-12 large-4 columns\\\">\\n                \");\n    data.buffer.push(escapeExpression((helper = helpers['button-with-loader'] || (depth0 && depth0['button-with-loader']),options={hash:{\n      'isLoading': (\"actionsLoadingStages.back\"),\n      'buttonText': (\"Back to Object Detail\"),\n      'action': (\"back\")\n    },hashTypes:{'isLoading': \"ID\",'buttonText': \"STRING\",'action': \"STRING\"},hashContexts:{'isLoading': depth0,'buttonText': depth0,'action': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"button-with-loader\", options))));\n    data.buffer.push(\"\\n                \");\n    data.buffer.push(escapeExpression((helper = helpers['button-with-loader'] || (depth0 && depth0['button-with-loader']),options={hash:{\n      'isAlert': (true),\n      'isLoading': (\"actionsLoadingStages.delete\"),\n      'buttonText': (\"Yes, delete this Object!\"),\n      'action': (\"delete\")\n    },hashTypes:{'isAlert': \"BOOLEAN\",'isLoading': \"ID\",'buttonText': \"STRING\",'action': \"STRING\"},hashContexts:{'isAlert': depth0,'isLoading': depth0,'buttonText': depth0,'action': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"button-with-loader\", options))));\n    data.buffer.push(\"\\n            </aside>\\n    </div>\\n</section>\");\n    return buffer;\n    \n  });\n\n});","define('morgana/templates/content-project/thing-type/thing/edit', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, helper, options, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n    data.buffer.push(\"<section>\\n    <header class=\\\"row\\\">\\n        <div class=\\\"small-12 columns\\\">\\n            <h1>Edit Object\\n                <small>\");\n    stack1 = helpers._triageMustache.call(depth0, \"uid\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\" \");\n    stack1 = helpers._triageMustache.call(depth0, \"name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</small>\\n            </h1>\\n        </div>\\n    </header>\\n    <div class=\\\"row\\\">\\n\\n        <form \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"edit\", {hash:{\n      'on': (\"submit\")\n    },hashTypes:{'on': \"STRING\"},hashContexts:{'on': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n    data.buffer.push(\" data-abide>\\n            <section class=\\\"large-8 small-12 columns\\\">\\n                \");\n    data.buffer.push(escapeExpression(helpers.view.call(depth0, \"serverSideModelFormFields\", {hash:{\n      'modelBinding': (\"model\"),\n      'mainFieldBinding': (\"mainFields\"),\n      'optionalFieldsBinding': (\"optionalFields\")\n    },hashTypes:{'modelBinding': \"STRING\",'mainFieldBinding': \"STRING\",'optionalFieldsBinding': \"STRING\"},hashContexts:{'modelBinding': depth0,'mainFieldBinding': depth0,'optionalFieldsBinding': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n    data.buffer.push(\"\\n            </section>\\n\\n            <aside class=\\\"small-12 large-4 columns\\\">\\n                <div data-ax-fixed-container>\\n                    \");\n    data.buffer.push(escapeExpression((helper = helpers['button-with-loader'] || (depth0 && depth0['button-with-loader']),options={hash:{\n      'isLoading': (\"actionsLoadingStages.back\"),\n      'buttonText': (\"Back to Object Detail\"),\n      'action': (\"back\")\n    },hashTypes:{'isLoading': \"ID\",'buttonText': \"STRING\",'action': \"STRING\"},hashContexts:{'isLoading': depth0,'buttonText': depth0,'action': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"button-with-loader\", options))));\n    data.buffer.push(\"\\n                    \");\n    data.buffer.push(escapeExpression((helper = helpers['button-with-loader'] || (depth0 && depth0['button-with-loader']),options={hash:{\n      'isLoading': (\"actionsLoadingStages.edit\"),\n      'buttonText': (\"Save Object\"),\n      'action': (\"edit\")\n    },hashTypes:{'isLoading': \"ID\",'buttonText': \"STRING\",'action': \"STRING\"},hashContexts:{'isLoading': depth0,'buttonText': depth0,'action': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"button-with-loader\", options))));\n    data.buffer.push(\"\\n                </div>\\n            </aside>\\n        </form>\\n\\n    </div>\\n</section>\");\n    return buffer;\n    \n  });\n\n});","define('morgana/templates/content-project/thing-type/thing/index', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n  function program1(depth0,data) {\n    \n    var buffer = '', stack1;\n    data.buffer.push(\"\\n            <div class=\\\"panel-alert panel text-center panel\\\">\\n                \");\n    stack1 = helpers._triageMustache.call(depth0, \"errorMsg\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n            </div>\\n            \");\n    return buffer;\n    }\n\n  function program3(depth0,data) {\n    \n    var buffer = '', stack1;\n    data.buffer.push(\"\\n                <section>\\n\\n                    <div id=\\\"content-output\\\" class=\\\"notranslate\\\">\\n\\n                        \");\n    stack1 = helpers['if'].call(depth0, \"contentRequest.isText\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(6, program6, data),fn:self.program(4, program4, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n                    </div>\\n                </section>\\n            \");\n    return buffer;\n    }\n  function program4(depth0,data) {\n    \n    var buffer = '', helper, options;\n    data.buffer.push(\"\\n                            \");\n    data.buffer.push(escapeExpression((helper = helpers['text-with-errors'] || (depth0 && depth0['text-with-errors']),options={hash:{\n      'errors': (\"contentRequest.languageErrors\")\n    },hashTypes:{'errors': \"ID\"},hashContexts:{'errors': depth0},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"contentRequest.content\", options) : helperMissing.call(depth0, \"text-with-errors\", \"contentRequest.content\", options))));\n    data.buffer.push(\"\\n                        \");\n    return buffer;\n    }\n\n  function program6(depth0,data) {\n    \n    var buffer = '', stack1;\n    data.buffer.push(\"\\n                            \");\n    stack1 = helpers['if'].call(depth0, \"contentRequest.isImage\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(7, program7, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n                        \");\n    return buffer;\n    }\n  function program7(depth0,data) {\n    \n    var buffer = '';\n    data.buffer.push(\"\\n                                <div class=\\\"text-center\\\">\\n                                    <a target=\\\"_blank\\\" \");\n    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n      'href': (\"contentRequest.content\")\n    },hashTypes:{'href': \"STRING\"},hashContexts:{'href': depth0},contexts:[],types:[],data:data})));\n    data.buffer.push(\">\\n                                        <img \");\n    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n      'src': (\"contentRequest.content\")\n    },hashTypes:{'src': \"STRING\"},hashContexts:{'src': depth0},contexts:[],types:[],data:data})));\n    data.buffer.push(\">\\n                                    </a>\\n                                </div>\\n                            \");\n    return buffer;\n    }\n\n  function program9(depth0,data) {\n    \n    \n    data.buffer.push(\"\\n                        <li class=\\\"tab-title\\\"><a href=\\\"#metrics\\\">Analytics</a></li>\\n                    \");\n    }\n\n  function program11(depth0,data) {\n    \n    var buffer = '', stack1;\n    data.buffer.push(\"\\n                        <div class=\\\"content\\\" id=\\\"metrics\\\">\\n                            <table>\\n                                <tr>\\n                                    <th class=\\\"text-right\\\">Generation time in seconds:</th>\\n                                    <td>\");\n    stack1 = helpers._triageMustache.call(depth0, \"contentRequest.durationDisplay\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</td>\\n                                </tr>\\n                                \");\n    stack1 = helpers['if'].call(depth0, \"contentRequest.isText\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(12, program12, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\\n                            </table>\\n                        </div>\\n                    \");\n    return buffer;\n    }\n  function program12(depth0,data) {\n    \n    var buffer = '', stack1;\n    data.buffer.push(\"\\n                                    <tr>\\n                                        <th class=\\\"text-right\\\">Spelling errors:</th>\\n                                        <td>\");\n    stack1 = helpers._triageMustache.call(depth0, \"contentRequest.spellingErrorCount\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <th class=\\\"text-right\\\">Spelling/grammar errors:</th>\\n                                        <td>\");\n    stack1 = helpers._triageMustache.call(depth0, \"contentRequest.languageErrorCount\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</td>\\n                                    </tr>\\n                                \");\n    return buffer;\n    }\n\n  function program14(depth0,data) {\n    \n    \n    data.buffer.push(\"To Content Project\");\n    }\n\n  function program16(depth0,data) {\n    \n    \n    data.buffer.push(\"To Import List\");\n    }\n\n  function program18(depth0,data) {\n    \n    var buffer = '', stack1, helper, options;\n    data.buffer.push(\"\\n                \");\n    stack1 = (helper = helpers['can-do'] || (depth0 && depth0['can-do']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.program(24, program24, data),fn:self.program(19, program19, data),contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"payForContent\", options) : helperMissing.call(depth0, \"can-do\", \"payForContent\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\\n            \");\n    return buffer;\n    }\n  function program19(depth0,data) {\n    \n    var buffer = '', stack1;\n    data.buffer.push(\"\\n\\n                    <div>\\n                        \");\n    stack1 = helpers['if'].call(depth0, \"model.isContentGenerationAvailable\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(22, program22, data),fn:self.program(20, program20, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n                    </div>\\n\\n                \");\n    return buffer;\n    }\n  function program20(depth0,data) {\n    \n    var buffer = '', helper, options;\n    data.buffer.push(\"\\n                            \");\n    data.buffer.push(escapeExpression((helper = helpers['button-with-loader'] || (depth0 && depth0['button-with-loader']),options={hash:{\n      'isLoading': (\"actionsLoadingStages.generateContent\"),\n      'buttonText': (\"Generate content\"),\n      'action': (\"generateContent\")\n    },hashTypes:{'isLoading': \"ID\",'buttonText': \"STRING\",'action': \"STRING\"},hashContexts:{'isLoading': depth0,'buttonText': depth0,'action': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"button-with-loader\", options))));\n    data.buffer.push(\"\\n                        \");\n    return buffer;\n    }\n\n  function program22(depth0,data) {\n    \n    \n    data.buffer.push(\"\\n                            <button\\n                                data-tooltip\\n                                aria-haspopup=\\\"true\\\"\\n                                role=\\\"tooltip\\\"\\n                                class=\\\"low expand disabled has-tip\\\"\\n                                title=\\\"The requirements for content generation are unmet. Please check your data and improve data quality.\\\">\\n                                Content generation unavailable</button>\\n                        \");\n    }\n\n  function program24(depth0,data) {\n    \n    var buffer = '', helper, options;\n    data.buffer.push(\"\\n                    <div>\\n                        \");\n    data.buffer.push(escapeExpression((helper = helpers['button-with-loader'] || (depth0 && depth0['button-with-loader']),options={hash:{\n      'isLoading': (\"actionsLoadingStages.buyCredits\"),\n      'buttonText': (\"Buy Credits to generate content\"),\n      'action': (\"buyCredits\")\n    },hashTypes:{'isLoading': \"ID\",'buttonText': \"STRING\",'action': \"STRING\"},hashContexts:{'isLoading': depth0,'buttonText': depth0,'action': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"button-with-loader\", options))));\n    data.buffer.push(\"\\n                    </div>\\n                \");\n    return buffer;\n    }\n\n    data.buffer.push(\"<section id=\\\"content_project_wizard\\\">\\n\\n    <header class=\\\"row\\\">\\n        <div class=\\\"small-12 columns\\\">\\n            <h1>Object Detail&nbsp;\\n                <small class=\\\"notranslate\\\">\");\n    stack1 = helpers._triageMustache.call(depth0, \"model.name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</small>\\n            </h1>\\n        </div>\\n    </header>\\n    <div class=\\\"row\\\">\\n        <section class=\\\"large-8 small-12 columns\\\">\\n            <div \");\n    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n      'class': (\"infoPanelStatusCssClass :text-center :panel\")\n    },hashTypes:{'class': \"STRING\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\n    data.buffer.push(\">\\n                \");\n    stack1 = helpers._triageMustache.call(depth0, \"contentGenerationStatusText\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n            </div>\\n            \");\n    stack1 = helpers['if'].call(depth0, \"errorMsg\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n            \");\n    stack1 = helpers['if'].call(depth0, \"contentRequest.content\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\\n            <section>\\n\\n                <ul class=\\\"tabs\\\" data-tab>\\n                    <li class=\\\"tab-title active\\\"><a href=\\\"#properties-simple\\\">Properties</a></li>\\n                    <li class=\\\"tab-title\\\"><a href=\\\"#properties-complete\\\">All Data</a></li>\\n                    \");\n    stack1 = helpers['if'].call(depth0, \"contentRequest\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(9, program9, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n                </ul>\\n                <div class=\\\"tabs-content\\\">\\n                    <div class=\\\"content active\\\" id=\\\"properties-simple\\\">\\n                        \");\n    data.buffer.push(escapeExpression((helper = helpers['field-detail'] || (depth0 && depth0['field-detail']),options={hash:{\n      'fields': (\"mainFields\"),\n      'model': (\"model\")\n    },hashTypes:{'fields': \"ID\",'model': \"ID\"},hashContexts:{'fields': depth0,'model': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"field-detail\", options))));\n    data.buffer.push(\"\\n                    </div>\\n                    <div class=\\\"content\\\" id=\\\"properties-complete\\\">\\n                        \");\n    data.buffer.push(escapeExpression((helper = helpers['field-detail'] || (depth0 && depth0['field-detail']),options={hash:{\n      'fields': (\"fields\"),\n      'model': (\"model\")\n    },hashTypes:{'fields': \"ID\",'model': \"ID\"},hashContexts:{'fields': depth0,'model': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"field-detail\", options))));\n    data.buffer.push(\"\\n                    </div>\\n                    \");\n    stack1 = helpers['if'].call(depth0, \"contentRequest\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(11, program11, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n                </div>\\n            </section>\\n        </section>\\n        <aside class=\\\"small-12 large-4 columns\\\">\\n            \");\n    stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{\n      'classNames': (\"button expand low\")\n    },hashTypes:{'classNames': \"STRING\"},hashContexts:{'classNames': depth0},inverse:self.noop,fn:self.program(14, program14, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"content-project\", options) : helperMissing.call(depth0, \"link-to\", \"content-project\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n            \");\n    stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{\n      'classNames': (\"button expand low\")\n    },hashTypes:{'classNames': \"STRING\"},hashContexts:{'classNames': depth0},inverse:self.noop,fn:self.program(16, program16, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"tags\", options) : helperMissing.call(depth0, \"link-to\", \"tags\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\\n            \");\n    stack1 = (helper = helpers['can-do'] || (depth0 && depth0['can-do']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(18, program18, data),contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"createContent\", options) : helperMissing.call(depth0, \"can-do\", \"createContent\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\\n            <div data-dropdown=\\\"edit_thing_drop\\\"  \");\n    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n      'class': (\":dropdown :button :expand actionsLoadingStages.edit:loading\")\n    },hashTypes:{'class': \"STRING\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\n    data.buffer.push(\">\\n                <span>\\n                    Edit this Object\\n                </span>\\n                <ul id=\\\"edit_thing_drop\\\" class=\\\"f-dropdown content\\\" data-dropdown-content>\\n                    <li>\\n                        \");\n    data.buffer.push(escapeExpression((helper = helpers['button-with-loader'] || (depth0 && depth0['button-with-loader']),options={hash:{\n      'displayAsButton': (false),\n      'isLoading': (\"actionsLoadingStages.edit\"),\n      'buttonText': (\"Edit this Object\"),\n      'action': (\"edit\")\n    },hashTypes:{'displayAsButton': \"BOOLEAN\",'isLoading': \"ID\",'buttonText': \"STRING\",'action': \"STRING\"},hashContexts:{'displayAsButton': depth0,'isLoading': depth0,'buttonText': depth0,'action': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"button-with-loader\", options))));\n    data.buffer.push(\"\\n                    </li>\\n                    <li>\\n                        \");\n    data.buffer.push(escapeExpression((helper = helpers['button-with-loader'] || (depth0 && depth0['button-with-loader']),options={hash:{\n      'displayAsButton': (false),\n      'isLoading': (\"actionsLoadingStages.edit\"),\n      'buttonText': (\"Delete this Object\"),\n      'action': (\"delete\")\n    },hashTypes:{'displayAsButton': \"BOOLEAN\",'isLoading': \"ID\",'buttonText': \"STRING\",'action': \"STRING\"},hashContexts:{'displayAsButton': depth0,'isLoading': depth0,'buttonText': depth0,'action': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"button-with-loader\", options))));\n    data.buffer.push(\"\\n                    </li>\\n\\n                </ul>\\n            </div>\\n\\n            <div>\\n                \");\n    data.buffer.push(escapeExpression((helper = helpers['button-with-loader'] || (depth0 && depth0['button-with-loader']),options={hash:{\n      'isLoading': (\"actionsLoadingStages.reportJiraIssue\"),\n      'buttonText': (\"Report an issue with this text\"),\n      'action': (\"reportJiraIssue\")\n    },hashTypes:{'isLoading': \"ID\",'buttonText': \"STRING\",'action': \"STRING\"},hashContexts:{'isLoading': depth0,'buttonText': depth0,'action': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"button-with-loader\", options))));\n    data.buffer.push(\"\\n            </div>\\n\\n\\n\\n        </aside>\\n\\n\\n    </div>\\n</section>\\n\");\n    return buffer;\n    \n  });\n\n});","define('morgana/templates/content-projects', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1;\n\n\n    stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\");\n    return buffer;\n    \n  });\n\n});","define('morgana/templates/content-projects/-content-project-list', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n  function program1(depth0,data) {\n    \n    var buffer = '', helper, options;\n    data.buffer.push(\"\\n    \");\n    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"things/-loading\", options) : helperMissing.call(depth0, \"partial\", \"things/-loading\", options))));\n    data.buffer.push(\"\\n\");\n    return buffer;\n    }\n\n  function program3(depth0,data) {\n    \n    var buffer = '', stack1;\n    data.buffer.push(\"\\n\\n\");\n    stack1 = helpers['if'].call(depth0, \"hasItems\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(7, program7, data),fn:self.program(4, program4, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\");\n    return buffer;\n    }\n  function program4(depth0,data) {\n    \n    var buffer = '', stack1;\n    data.buffer.push(\"\\n    <table>\\n        <thead>\\n            <tr>\\n                <th>Content Project</th>\\n                <th>Training Type</th>\\n                <th>Status</th>\\n                <th>Owner</th>\\n                <th># Processed</th>\\n                <th># of Errors</th>\\n            </tr>\\n        </thead>\\n        <tbody>\\n        \");\n    stack1 = helpers.each.call(depth0, \"contentProject\", \"in\", \"model\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n        <tbody>\\n    </table>\\n    \");\n    data.buffer.push(escapeExpression(helpers.view.call(depth0, \"tableFooter\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data})));\n    data.buffer.push(\"\\n\");\n    return buffer;\n    }\n  function program5(depth0,data) {\n    \n    var buffer = '', stack1;\n    data.buffer.push(\"\\n            <tr \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"contentProjectDetail\", \"contentProject\", {hash:{\n      'on': (\"click\")\n    },hashTypes:{'on': \"STRING\"},hashContexts:{'on': depth0},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data})));\n    data.buffer.push(\" class=\\\"clickable\\\">\\n                <td>\");\n    stack1 = helpers._triageMustache.call(depth0, \"contentProject.name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</td>\\n                <td>\");\n    stack1 = helpers._triageMustache.call(depth0, \"contentProject.engineConfiguration.name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</td>\\n                <td>\");\n    stack1 = helpers._triageMustache.call(depth0, \"contentProject.engineConfiguration.status.name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</td>\\n                <td>\");\n    stack1 = helpers._triageMustache.call(depth0, \"contentProject.axcompany_name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</td>\\n                <td>\");\n    stack1 = helpers._triageMustache.call(depth0, \"contentProject.countGeneratedTexts\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"/\");\n    stack1 = helpers._triageMustache.call(depth0, \"contentProject.countThings\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</td>\\n                <td>\");\n    stack1 = helpers._triageMustache.call(depth0, \"contentProject.countGeneratedTextsErrors\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</td>\\n            </tr>\\n        \");\n    return buffer;\n    }\n\n  function program7(depth0,data) {\n    \n    \n    data.buffer.push(\"\\n\\n\");\n    }\n\n    stack1 = helpers['if'].call(depth0, \"isLoading\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\");\n    return buffer;\n    \n  });\n\n});","define('morgana/templates/content-projects/index', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n    data.buffer.push(\"<section>\\n    <header class=\\\"row\\\">\\n        <div class=\\\"small-12 columns\\\">\\n            <h1>Content Projects\\n            </h1>\\n        </div>\\n    </header>\\n    <div class=\\\"row\\\">\\n        <section class=\\\"large-8 small-12 columns\\\">\\n           \");\n    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"content-projects/_content-project-list\", options) : helperMissing.call(depth0, \"partial\", \"content-projects/_content-project-list\", options))));\n    data.buffer.push(\"\\n        </section>\\n        <aside class=\\\"small-12 large-4 columns\\\">\\n            <a \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"createContentProject\", {hash:{\n      'on': (\"click\")\n    },hashTypes:{'on': \"STRING\"},hashContexts:{'on': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n    data.buffer.push(\"\\n                class=\\\"button expand\\\">\\n                Create Content Project\\n            </a>\\n        </aside>\\n    </div>\\n</section>\");\n    return buffer;\n    \n  });\n\n});","define('morgana/templates/credits/-credit-history', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n  function program1(depth0,data) {\n    \n    var buffer = '', helper, options;\n    data.buffer.push(\"\\n                \");\n    data.buffer.push(escapeExpression((helper = helpers.render || (depth0 && depth0.render),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data},helper ? helper.call(depth0, \"credits/credit-history-element\", \"creditHistoryElement\", options) : helperMissing.call(depth0, \"render\", \"credits/credit-history-element\", \"creditHistoryElement\", options))));\n    data.buffer.push(\"\\n            \");\n    return buffer;\n    }\n\n    data.buffer.push(\"<div>\\n    <table>\\n        <tbody>\\n            \");\n    stack1 = helpers.each.call(depth0, \"creditHistoryElement\", \"in\", \"model\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n        </tbody>\\n    </table>\\n</div>\");\n    return buffer;\n    \n  });\n\n});","define('morgana/templates/credits/-invoices', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n  function program1(depth0,data) {\n    \n    var buffer = '', stack1;\n    data.buffer.push(\"\\n            <tr>\\n                <td>\\n                    <div class=\\\"row ax-invoice\\\">\\n                        <div class=\\\"small-3 columns ax-invoice-name\\\">\\n                            \");\n    stack1 = helpers._triageMustache.call(depth0, \"invoice.invoiceNumber\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n                        </div>\\n                        <div class=\\\"small-2 columns text-right ax-invoice-date\\\">\\n                            \");\n    stack1 = helpers['if'].call(depth0, \"invoice.invoiceDate\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n                        </div>\\n                        <div class=\\\"small-5 columns text-left ax-invoice-name\\\">\\n                            \");\n    stack1 = helpers._triageMustache.call(depth0, \"invoice.informationalText\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n                        </div>\\n                        <div class=\\\"small-2 columns text-right\\\">\\n                            <a class=\\\"button small\\\" \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"downloadInvoice\", \"invoice\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"ID\",\"ID\"],data:data})));\n    data.buffer.push(\"><i class=\\\"fi-download\\\"></i> Download now</a>\\n                        </div>\\n                    </div>\\n                </td>\\n            </tr>\\n        \");\n    return buffer;\n    }\n  function program2(depth0,data) {\n    \n    var buffer = '', helper, options;\n    data.buffer.push(\"\\n                                <label><i class=\\\"fi-calendar\\\"></i>\\n                                    \");\n    data.buffer.push(escapeExpression((helper = helpers.moment || (depth0 && depth0.moment),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"ID\",\"STRING\"],data:data},helper ? helper.call(depth0, \"invoice.invoiceDate\", \"YYYY-MM-DD\", options) : helperMissing.call(depth0, \"moment\", \"invoice.invoiceDate\", \"YYYY-MM-DD\", options))));\n    data.buffer.push(\"\\n                                </label>\\n                            \");\n    return buffer;\n    }\n\n  function program4(depth0,data) {\n    \n    \n    data.buffer.push(\"\\n            <tr>\\n                <td>\\n                    Your Invoices are listed here for further reference. Please allow approximately 3 business days\\n                    until the invoice is shown here.\\n                </td>\\n            </tr>\\n        \");\n    }\n\n    data.buffer.push(\"<div>\\n    <table>\\n        <tbody>\\n        \");\n    stack1 = helpers.each.call(depth0, \"invoice\", \"in\", \"model\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(4, program4, data),fn:self.program(1, program1, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\\n        </tbody>\\n    </table>\\n</div>\");\n    return buffer;\n    \n  });\n\n});","define('morgana/templates/credits/credit-history-element', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n  function program1(depth0,data) {\n    \n    var buffer = '', stack1, helper, options;\n    data.buffer.push(\"\\n            \");\n    stack1 = helpers._triageMustache.call(depth0, \"model.amount\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\" credits added (most recently \");\n    data.buffer.push(escapeExpression((helper = helpers.ago || (depth0 && depth0.ago),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"model.last\", options) : helperMissing.call(depth0, \"ago\", \"model.last\", options))));\n    data.buffer.push(\" ago)\\n        \");\n    return buffer;\n    }\n\n  function program3(depth0,data) {\n    \n    var buffer = '', stack1, helper, options;\n    data.buffer.push(\"\\n            \");\n    stack1 = helpers._triageMustache.call(depth0, \"model.amount\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\" credits deducted (most recently \");\n    data.buffer.push(escapeExpression((helper = helpers.ago || (depth0 && depth0.ago),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"model.last\", options) : helperMissing.call(depth0, \"ago\", \"model.last\", options))));\n    data.buffer.push(\" ago)\\n        \");\n    return buffer;\n    }\n\n    data.buffer.push(\"<tr>\\n    <td>\\n        \");\n    stack1 = helpers['if'].call(depth0, \"isAdd\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n    </td>\\n</tr>\");\n    return buffer;\n    \n  });\n\n});","define('morgana/templates/credits/index', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n    data.buffer.push(\"<section>\\n    <header class=\\\"row\\\">\\n        <div class=\\\"small-12 columns\\\">\\n            <h1>Credit\\n                <small>Overview</small>\\n            </h1>\\n        </div>\\n    </header>\\n    <div class=\\\"row\\\">\\n\\n        <section class=\\\"large-8 small-12 columns\\\">\\n            <div class=\\\"user-credits\\\">\\n                You have <label>\");\n    stack1 = helpers._triageMustache.call(depth0, \"model.companyCredits\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</label> credits left\\n            </div>\\n            <ul class=\\\"tabs\\\" data-tab>\\n                <li class=\\\"tab-title active\\\"><a href=\\\"#credit-tab-1\\\">History</a></dd>\\n                <li class=\\\"tab-title\\\"><a href=\\\"#credit-tab-2\\\">Invoices</a></dd>\\n            </ul>\\n            <div class=\\\"tabs-content\\\">\\n                <div class=\\\"content active\\\" id=\\\"credit-tab-1\\\">\\n                    \");\n    data.buffer.push(escapeExpression((helper = helpers.outlet || (depth0 && depth0.outlet),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"credit_history\", options) : helperMissing.call(depth0, \"outlet\", \"credit_history\", options))));\n    data.buffer.push(\"\\n                </div>\\n                <div class=\\\"content\\\" id=\\\"credit-tab-2\\\">\\n                    \");\n    data.buffer.push(escapeExpression((helper = helpers.outlet || (depth0 && depth0.outlet),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"invoices\", options) : helperMissing.call(depth0, \"outlet\", \"invoices\", options))));\n    data.buffer.push(\"\\n                </div>\\n            </div>\\n        </section>\\n        <aside class=\\\"small-12 large-4 columns\\\">\\n\\n            <h4>Buy More Credits!</h4>\\n\\n            <div class=\\\"text-right\\\">\\n                <a class=\\\"button expand\\\"\\n                   href=\\\"https://sites.fastspring.com/aexea/instant/small1000\\\"\\n                        >\\n                    1,000 Credits / 250 €\\n                </a>\\n            </div>\\n            <div>\\n                <a class=\\\"button expand\\\"\\n                   href=\\\"https://sites.fastspring.com/aexea/instant/medium5500\\\"\\n                        >\\n                    5,500 Credits / 1000 €\\n                </a>\\n            </div>\\n            <div>\\n                <a class=\\\"button expand\\\"\\n                   href=\\\"https://sites.fastspring.com/aexea/instant/large30000\\\"\\n                        >\\n                    30,000 Credits / 5000 €\\n                </a>\\n            </div>\\n            <div class=\\\"panel callout radius\\\">\\n                Please Note: Payments will be handled via our payment provider FastSpring.\\n            </div>\\n\\n        </aside>\\n    </div>\\n</section>\\n\");\n    return buffer;\n    \n  });\n\n});","define('morgana/templates/download-exports', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1;\n\n\n    stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\");\n    return buffer;\n    \n  });\n\n});","define('morgana/templates/download-exports/index', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, helper, options, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;\n\n  function program1(depth0,data) {\n    \n    var buffer = '';\n    data.buffer.push(\"\\n                <button \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"toTags\", {hash:{\n      'on': (\"click\")\n    },hashTypes:{'on': \"STRING\"},hashContexts:{'on': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n    data.buffer.push(\" class=\\\"button expand low\\\">To Import List</button>\\n            \");\n    return buffer;\n    }\n\n    data.buffer.push(\"<section>\\n    <header class=\\\"row\\\">\\n        <div class=\\\"small-12 columns\\\">\\n            <h1>Exports</h1>\\n        </div>\\n    </header>\\n    <div class=\\\"row\\\">\\n        <section class=\\\"large-8 small-12 columns\\\">\\n            \");\n    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"content_project/content-project-exports/-content-project-export-list\", options) : helperMissing.call(depth0, \"partial\", \"content_project/content-project-exports/-content-project-export-list\", options))));\n    data.buffer.push(\"\\n        </section>\\n        <aside class=\\\"small-12 large-4 columns\\\">\\n            <button \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"toContentProjects\", {hash:{\n      'on': (\"click\")\n    },hashTypes:{'on': \"STRING\"},hashContexts:{'on': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n    data.buffer.push(\" class=\\\"button expand low\\\">To Content Projects Overview</button>\\n            \");\n    stack1 = (helper = helpers['can-do'] || (depth0 && depth0['can-do']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"showTagOverview\", options) : helperMissing.call(depth0, \"can-do\", \"showTagOverview\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n        </aside>\\n\\n    </div>\\n</section>\");\n    return buffer;\n    \n  });\n\n});","define('morgana/templates/engine-configuration', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1;\n\n\n    stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\");\n    return buffer;\n    \n  });\n\n});","define('morgana/templates/engine-configuration/content-project', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1;\n\n\n    stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\");\n    return buffer;\n    \n  });\n\n});","define('morgana/templates/engine-configuration/content-project/new', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, helper, options, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n    data.buffer.push(\"<section id=\\\"content_project_wizard\\\">\\n    <header class=\\\"row\\\">\\n        <div class=\\\"small-12 columns\\\">\\n            <h1>Create Content Project\\n                <small>for \");\n    stack1 = helpers._triageMustache.call(depth0, \"engineConfiguration.descriptiveName\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</small>\\n            </h1>\\n        </div>\\n    </header>\\n    <div class=\\\"row\\\">\\n        <form \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"create\", {hash:{\n      'on': (\"submit\")\n    },hashTypes:{'on': \"STRING\"},hashContexts:{'on': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n    data.buffer.push(\" data-abide>\\n\\n            \");\n    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"content-project/-form-fields\", options) : helperMissing.call(depth0, \"partial\", \"content-project/-form-fields\", options))));\n    data.buffer.push(\"\\n\\n            <aside class=\\\"small-12 large-4 columns\\\">\\n                \");\n    data.buffer.push(escapeExpression((helper = helpers['button-with-loader'] || (depth0 && depth0['button-with-loader']),options={hash:{\n      'isLoading': (\"actionsLoadingStages.back\"),\n      'buttonText': (\"Back to Training Type\"),\n      'action': (\"back\")\n    },hashTypes:{'isLoading': \"ID\",'buttonText': \"STRING\",'action': \"STRING\"},hashContexts:{'isLoading': depth0,'buttonText': depth0,'action': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"button-with-loader\", options))));\n    data.buffer.push(\"\\n                \");\n    data.buffer.push(escapeExpression((helper = helpers['button-with-loader'] || (depth0 && depth0['button-with-loader']),options={hash:{\n      'isLoading': (\"actionsLoadingStages.edit\"),\n      'buttonText': (\"Create Content Project\"),\n      'action': (\"create\")\n    },hashTypes:{'isLoading': \"ID\",'buttonText': \"STRING\",'action': \"STRING\"},hashContexts:{'isLoading': depth0,'buttonText': depth0,'action': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"button-with-loader\", options))));\n    data.buffer.push(\"\\n            </aside>\\n        </form>\\n    </div>\\n</section>\");\n    return buffer;\n    \n  });\n\n});","define('morgana/templates/engine-configuration/index', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, escapeExpression=this.escapeExpression, self=this;\n\n  function program1(depth0,data) {\n    \n    var buffer = '';\n    data.buffer.push(\"\\n                    \");\n    data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"demoData\", {hash:{\n      'unescaped': (\"true\")\n    },hashTypes:{'unescaped': \"STRING\"},hashContexts:{'unescaped': depth0},contexts:[depth0],types:[\"ID\"],data:data})));\n    data.buffer.push(\"\\n                \");\n    return buffer;\n    }\n\n  function program3(depth0,data) {\n    \n    \n    data.buffer.push(\"\\n                    There's no Demo data yet.\\n                \");\n    }\n\n  function program5(depth0,data) {\n    \n    var buffer = '', stack1;\n    data.buffer.push(\"\\n                    \");\n    stack1 = helpers['if'].call(depth0, \"isText\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(6, program6, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n                \");\n    return buffer;\n    }\n  function program6(depth0,data) {\n    \n    var buffer = '';\n    data.buffer.push(\"\\n                        \");\n    data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"demoContent\", {hash:{\n      'unescaped': (\"true\")\n    },hashTypes:{'unescaped': \"STRING\"},hashContexts:{'unescaped': depth0},contexts:[depth0],types:[\"ID\"],data:data})));\n    data.buffer.push(\"\\n                    \");\n    return buffer;\n    }\n\n  function program8(depth0,data) {\n    \n    \n    data.buffer.push(\"\\n                    There's no Demo content yet.\\n                \");\n    }\n\n    data.buffer.push(\"<section id=\\\"content_project_wizard\\\">\\n    <header class=\\\"row\\\">\\n        <div class=\\\"small-12 columns\\\">\\n            <h1>Training Type\\n                <small>for \");\n    stack1 = helpers._triageMustache.call(depth0, \"descriptiveName\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</small>\\n            </h1>\\n            <div class=\\\"engine-configuration-description\\\">\\n                \");\n    data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"description\", {hash:{\n      'unescaped': (\"true\")\n    },hashTypes:{'unescaped': \"STRING\"},hashContexts:{'unescaped': depth0},contexts:[depth0],types:[\"ID\"],data:data})));\n    data.buffer.push(\"\\n            </div>\\n        </div>\\n    </header>\\n    <div class=\\\"row\\\">\\n        <section class=\\\"large-8 small-12 columns\\\">\\n            <section>\\n                <h3>Demo Data</h3>\\n                <div class=\\\"demo\\\">\\n                \");\n    stack1 = helpers['if'].call(depth0, \"demoData\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n                </div>\\n            </section>\\n            <section>\\n                <h3>Demo Content</h3>\\n                <div class=\\\"demo\\\">\\n                \");\n    stack1 = helpers['if'].call(depth0, \"demoContent\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(8, program8, data),fn:self.program(5, program5, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n                </div>\\n            </section>\\n        </section>\\n        <aside class=\\\"small-12 large-4 columns\\\">\\n            <button \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"back\", {hash:{\n      'on': (\"click\")\n    },hashTypes:{'on': \"STRING\"},hashContexts:{'on': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n    data.buffer.push(\"\\n                class=\\\"button expand low\\\">\\n                Back to Training Types\\n            </button>\\n            <button \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"createContentProject\", {hash:{\n      'on': (\"click\")\n    },hashTypes:{'on': \"STRING\"},hashContexts:{'on': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n    data.buffer.push(\"\\n                class=\\\"button expand\\\">\\n                Create Content Project\\n            </button>\\n            <section>\\n                <h3>Details</h3>\\n                <dl>\\n                    <dt>Category</dt>\\n                    <dd><label>\");\n    stack1 = helpers._triageMustache.call(depth0, \"engineContentTypeCategory.name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</label><span>\");\n    stack1 = helpers._triageMustache.call(depth0, \"engineContentTypeCategory.description\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</span></dd>\\n                    <dt>Language</dt>\\n                    <dd>\");\n    stack1 = helpers._triageMustache.call(depth0, \"language.name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</dd>\\n                    <dt>Status</dt>\\n                    <dd><label>\");\n    stack1 = helpers._triageMustache.call(depth0, \"status.name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</label><span>\");\n    stack1 = helpers._triageMustache.call(depth0, \"status.description\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</span></dd>\\n                </dl>\\n            </section>\\n        </aside>\\n    </div>\\n</section>\");\n    return buffer;\n    \n  });\n\n});","define('morgana/templates/engine-configurations', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1;\n\n\n    stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\");\n    return buffer;\n    \n  });\n\n});","define('morgana/templates/engine-configurations/contact', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', helper, options, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n    data.buffer.push(\"<section id=\\\"content_project_wizard\\\">\\n    <header class=\\\"row\\\">\\n        <div class=\\\"small-12 columns\\\">\\n            <h1>Contact us\\n                <small>for your content needs</small>\\n            </h1>\\n            <p>\\n                We would be happy to provide content for you.\\n            </p>\\n            <p>\\n                Please provide us with some info on your content needs, the medium/plattform you plan to use the content on, and what data you can provide.\\n            </p>\\n            <p>\\n                We will contact you with details on how to proceed and with pricing information.\\n            </p>\\n        </div>\\n    </header>\\n    <div class=\\\"row\\\">\\n        <form \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"create\", {hash:{\n      'on': (\"submit\")\n    },hashTypes:{'on': \"STRING\"},hashContexts:{'on': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n    data.buffer.push(\" data-abide>\\n\\n           <section class=\\\"large-8 small-12 columns\\\">\\n                <fieldset>\\n\\n                    <div class=\\\"holder\\\" id=\\\"div_id_message\\\">\\n                        <label class=\\\"required\\\" for=\\\"id_message\\\">Your message</label>\\n                        \");\n    data.buffer.push(escapeExpression((helper = helpers.textarea || (depth0 && depth0.textarea),options={hash:{\n      'value': (\"message\"),\n      'id': (\"id_message\"),\n      'class': (\"textinput\"),\n      'required': (true)\n    },hashTypes:{'value': \"ID\",'id': \"STRING\",'class': \"STRING\",'required': \"BOOLEAN\"},hashContexts:{'value': depth0,'id': depth0,'class': depth0,'required': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"textarea\", options))));\n    data.buffer.push(\"\\n                        <small class=\\\"error\\\">This field is required.</small>\\n                    </div>\\n\\n                </fieldset>\\n           </section>\\n\\n            <aside class=\\\"small-12 large-4 columns\\\">\\n                \");\n    data.buffer.push(escapeExpression((helper = helpers['button-with-loader'] || (depth0 && depth0['button-with-loader']),options={hash:{\n      'isLoading': (\"actionsLoadingStages.back\"),\n      'buttonText': (\"Back to Training Types\"),\n      'action': (\"back\")\n    },hashTypes:{'isLoading': \"ID\",'buttonText': \"STRING\",'action': \"STRING\"},hashContexts:{'isLoading': depth0,'buttonText': depth0,'action': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"button-with-loader\", options))));\n    data.buffer.push(\"\\n                \");\n    data.buffer.push(escapeExpression((helper = helpers['button-with-loader'] || (depth0 && depth0['button-with-loader']),options={hash:{\n      'isLoading': (\"actionsLoadingStages.edit\"),\n      'buttonText': (\"Send your message\"),\n      'action': (\"create\")\n    },hashTypes:{'isLoading': \"ID\",'buttonText': \"STRING\",'action': \"STRING\"},hashContexts:{'isLoading': depth0,'buttonText': depth0,'action': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"button-with-loader\", options))));\n    data.buffer.push(\"\\n            </aside>\\n        </form>\\n    </div>\\n</section>\");\n    return buffer;\n    \n  });\n\n});","define('morgana/templates/engine-configurations/index', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, helper, options, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;\n\n  function program1(depth0,data) {\n    \n    var buffer = '', stack1, helper, options;\n    data.buffer.push(\"\\n                    <li \");\n    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n      'class': (\"status.checked:checked\")\n    },hashTypes:{'class': \"STRING\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\n    data.buffer.push(\"><label>\");\n    stack1 = helpers._triageMustache.call(depth0, \"status.name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\" \");\n    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n      'type': (\"checkbox\"),\n      'checked': (\"status.checked\")\n    },hashTypes:{'type': \"STRING\",'checked': \"ID\"},hashContexts:{'type': depth0,'checked': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n    data.buffer.push(\"</label></li>\\n                \");\n    return buffer;\n    }\n\n  function program3(depth0,data) {\n    \n    var buffer = '', stack1, helper, options;\n    data.buffer.push(\"\\n                    <li \");\n    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n      'class': (\"language.checked:checked\")\n    },hashTypes:{'class': \"STRING\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\n    data.buffer.push(\"><label>\");\n    stack1 = helpers._triageMustache.call(depth0, \"language.name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\" \");\n    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n      'type': (\"checkbox\"),\n      'checked': (\"language.checked\")\n    },hashTypes:{'type': \"STRING\",'checked': \"ID\"},hashContexts:{'type': depth0,'checked': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n    data.buffer.push(\"</label></li>\\n                \");\n    return buffer;\n    }\n\n  function program5(depth0,data) {\n    \n    var buffer = '', stack1, helper, options;\n    data.buffer.push(\"\\n                    <li \");\n    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n      'class': (\"category.checked:checked\")\n    },hashTypes:{'class': \"STRING\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\n    data.buffer.push(\"><label>\");\n    stack1 = helpers._triageMustache.call(depth0, \"category.name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\" \");\n    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n      'type': (\"checkbox\"),\n      'checked': (\"category.checked\")\n    },hashTypes:{'type': \"STRING\",'checked': \"ID\"},hashContexts:{'type': depth0,'checked': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n    data.buffer.push(\"</label></li>\\n                \");\n    return buffer;\n    }\n\n  function program7(depth0,data) {\n    \n    var buffer = '', stack1, helper, options;\n    data.buffer.push(\"\\n            <div class=\\\"row\\\">\\n                <div class=\\\"columns\\\">\\n                    <ul class=\\\"engine-configuration-list columns\\\">\\n                        \");\n    stack1 = helpers.each.call(depth0, \"engineConfiguration\", \"in\", \"filteredContent\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(8, program8, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n                        <li class=\\\"contact-us\\\">\\n                            \");\n    stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(11, program11, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"engine-configurations.contact\", options) : helperMissing.call(depth0, \"link-to\", \"engine-configurations.contact\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n                        </li>\\n                    </ul>\\n                </div>\\n            </div>\\n            \");\n    return buffer;\n    }\n  function program8(depth0,data) {\n    \n    var buffer = '', stack1, helper, options;\n    data.buffer.push(\"\\n                        <li \");\n    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n      'class': (\"engineConfiguration.status.id\")\n    },hashTypes:{'class': \"STRING\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\n    data.buffer.push(\">\\n                            \");\n    stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(9, program9, data),contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data},helper ? helper.call(depth0, \"engine-configuration\", \"engineConfiguration.id\", options) : helperMissing.call(depth0, \"link-to\", \"engine-configuration\", \"engineConfiguration.id\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n                        </li>\\n                        \");\n    return buffer;\n    }\n  function program9(depth0,data) {\n    \n    var buffer = '', stack1;\n    data.buffer.push(\"\\n                                \");\n    stack1 = helpers._triageMustache.call(depth0, \"engineConfiguration.descriptiveName\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n                            \");\n    return buffer;\n    }\n\n  function program11(depth0,data) {\n    \n    \n    data.buffer.push(\" You couldn't find what you need? Please contact us!\");\n    }\n\n  function program13(depth0,data) {\n    \n    \n    data.buffer.push(\"\\n            <div class=\\\"row\\\">\\n                <div class=\\\"columns\\\">\\n                    <p>No Training Type found for your search.</p>\\n                </div>\\n            </div>\\n            \");\n    }\n\n    data.buffer.push(\"<section id=\\\"content_project_wizard\\\">\\n    <header class=\\\"row\\\">\\n        <div class=\\\"small-12 columns\\\">\\n            <h1>Please select a Training Type for your new Content Project\\n            </h1>\\n        </div>\\n    </header>\\n    <div class=\\\"row\\\">\\n        <section class=\\\"large-8 small-12 columns\\\">\\n            <div class=\\\"row\\\">\\n\\n        <aside class=\\\"large-4 columns\\\">\\n            <label class=\\\"ax-filter-box\\\">\\n                \");\n    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n      'type': (\"text\"),\n      'value': (\"myFilter\"),\n      'placeholder': (\"Filter\"),\n      'autofocus': (\"\")\n    },hashTypes:{'type': \"STRING\",'value': \"ID\",'placeholder': \"STRING\",'autofocus': \"STRING\"},hashContexts:{'type': depth0,'value': depth0,'placeholder': depth0,'autofocus': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n    data.buffer.push(\"\\n                <i class=\\\"fi-magnifying-glass\\\"></i>\\n            </label>\\n            <h3>Status</h3>\\n            <ul class=\\\"facette-list\\\">\\n                \");\n    stack1 = helpers.each.call(depth0, \"status\", \"in\", \"allEngineConfigurationStatus\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n            </ul>\\n            <h3>Languages</h3>\\n            <ul class=\\\"facette-list\\\">\\n                \");\n    stack1 = helpers.each.call(depth0, \"language\", \"in\", \"allLanguages\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n            </ul>\\n            <h3>Categories</h3>\\n            <ul class=\\\"facette-list\\\">\\n                \");\n    stack1 = helpers.each.call(depth0, \"category\", \"in\", \"allEngineContentTypeCategories\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n            </ul>\\n        </aside>\\n        <section class=\\\"large-8 columns\\\">\\n            \");\n    stack1 = helpers['if'].call(depth0, \"filteredContent\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(13, program13, data),fn:self.program(7, program7, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n        </section>\\n    </div>\\n            </section>\\n\\n\\n        <aside class=\\\"small-12 large-4 columns\\\">\\n            <a \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"back\", {hash:{\n      'on': (\"click\")\n    },hashTypes:{'on': \"STRING\"},hashContexts:{'on': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n    data.buffer.push(\"\\n                class=\\\"button expand low\\\">\\n                Back to Content Project Overview\\n            </a>\\n        </aside>\\n\\n    </div>\\n\\n</section>\");\n    return buffer;\n    \n  });\n\n});","define('morgana/templates/eventlog', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1;\n\n\n    stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\");\n    return buffer;\n    \n  });\n\n});","define('morgana/templates/eventlog/-eventlog-list', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n  function program1(depth0,data) {\n    \n    var buffer = '', helper, options;\n    data.buffer.push(\"\\n    \");\n    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"things/-loading\", options) : helperMissing.call(depth0, \"partial\", \"things/-loading\", options))));\n    data.buffer.push(\"\\n\");\n    return buffer;\n    }\n\n  function program3(depth0,data) {\n    \n    var buffer = '', stack1;\n    data.buffer.push(\"\\n\\n\");\n    stack1 = helpers['if'].call(depth0, \"hasItems\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(7, program7, data),fn:self.program(4, program4, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\");\n    return buffer;\n    }\n  function program4(depth0,data) {\n    \n    var buffer = '', stack1;\n    data.buffer.push(\"\\n<table>\\n  <thead>\\n    <tr>\\n      <th>Action</th>\\n      <th>Message</th>\\n      <th>Created</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    \");\n    stack1 = helpers.each.call(depth0, \"event\", \"in\", \"model\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n  </tbody>\\n</table>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"columns text-right\\\">\\n        <ul class=\\\"pagination\\\">\\n          <li>\\n            <a \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"previous\", {hash:{\n      'on': (\"click\")\n    },hashTypes:{'on': \"STRING\"},hashContexts:{'on': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n    data.buffer.push(\">Previous</a>\\n          </li>\\n          <li>\\n            \");\n    data.buffer.push(escapeExpression(helpers.view.call(depth0, \"select\", {hash:{\n      'content': (\"allPages\"),\n      'value': (\"selectedPage\")\n    },hashTypes:{'content': \"ID\",'value': \"ID\"},hashContexts:{'content': depth0,'value': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n    data.buffer.push(\"\\n          </li>\\n          <li>\\n            <a \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"next\", {hash:{\n      'on': (\"click\")\n    },hashTypes:{'on': \"STRING\"},hashContexts:{'on': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n    data.buffer.push(\">Next</a>\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n\\n    \");\n    return buffer;\n    }\n  function program5(depth0,data) {\n    \n    var buffer = '', stack1, helper, options;\n    data.buffer.push(\"\\n\\n    <tr>\\n      <td>\");\n    stack1 = helpers._triageMustache.call(depth0, \"event.action\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</td>\\n      <td>\");\n    stack1 = helpers._triageMustache.call(depth0, \"event.message\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</td>\\n      <td>\");\n    data.buffer.push(escapeExpression((helper = helpers.ago || (depth0 && depth0.ago),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"event.created\", options) : helperMissing.call(depth0, \"ago\", \"event.created\", options))));\n    data.buffer.push(\"</td>\\n    </tr>\\n    \");\n    return buffer;\n    }\n\n  function program7(depth0,data) {\n    \n    \n    data.buffer.push(\"\\n    <div class=\\\"panel-info\\\">\\n      There are no Events.\\n    </div>\\n    \");\n    }\n\n    stack1 = helpers['if'].call(depth0, \"isLoading\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\");\n    return buffer;\n    \n  });\n\n});","define('morgana/templates/eventlog/index', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n    data.buffer.push(\"<section>\\n    <header class=\\\"row\\\">\\n        <div class=\\\"small-12 columns\\\">\\n            <h1>EventLog</h1>\\n        </div>\\n    </header>\\n    <div class=\\\"row\\\">\\n        <section class=\\\"large-8 small-12 columns\\\">\\n            \");\n    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"eventlog/-eventlog-list\", options) : helperMissing.call(depth0, \"partial\", \"eventlog/-eventlog-list\", options))));\n    data.buffer.push(\"\\n        </section>\\n        <aside class=\\\"small-12 large-4 columns\\\">\\n\\n        </aside>\\n\\n    </div>\\n</section>\");\n    return buffer;\n    \n  });\n\n});","define('morgana/templates/home', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1;\n\n\n    stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\");\n    return buffer;\n    \n  });\n\n});","define('morgana/templates/home/-user-check-list', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var stack1, escapeExpression=this.escapeExpression, self=this;\n\n  function program1(depth0,data) {\n    \n    var buffer = '', stack1;\n    data.buffer.push(\"\\n    <div class=\\\"panel callout radius\\\">\\n        <section class=\\\"row\\\">\\n            <div class=\\\"small-12 columns\\\">\\n                <p>\\n                    <strong>We added some Demo Content to your account</strong> below and invite you to explore the\\n                    features of myAx by\\n                    generating some texts.\\n                </p>\\n                <h4>\\n                    Things you should do next:\\n                </h4>\\n            </div>\\n\\n            <div class=\\\"small-12 large-6 columns\\\">\\n                <ol id=\\\"checklist\\\">\\n                    <li>\\n                        Explore the Demo Content Projects\\n                    </li>\\n                    <li \");\n    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n      'class': (\"hasProfile:complete\")\n    },hashTypes:{'class': \"STRING\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\n    data.buffer.push(\">\\n                        \");\n    stack1 = helpers['if'].call(depth0, \"hasProfile\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(4, program4, data),fn:self.program(2, program2, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n                    </li>\\n                    <li \");\n    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n      'class': (\"hasContentProject:complete\")\n    },hashTypes:{'class': \"STRING\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\n    data.buffer.push(\">\\n                        \");\n    stack1 = helpers['if'].call(depth0, \"hasContentProject\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(8, program8, data),fn:self.program(6, program6, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n                    </li>\\n                    <li \");\n    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n      'class': (\"hasThing:complete\")\n    },hashTypes:{'class': \"STRING\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\n    data.buffer.push(\">\\n                        Add Objects to your Content Project\\n                    </li>\\n                    <li \");\n    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n      'class': (\"hasGeneratedContent:complete\")\n    },hashTypes:{'class': \"STRING\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\n    data.buffer.push(\">\\n                        Request your first Generated Content from AX\\n                    </li>\\n                </ol>\\n\\n            </div>\\n            <div class=\\\"small-12 large-6 columns\\\">\\n                <p>\\n                    If you want to generate content for your own production systems, <a \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"addContentProject\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data})));\n    data.buffer.push(\">add a Content Project</a>.\\n                </p>\\n            </div>\\n\\n\\n        </section>\\n    </div>\\n\");\n    return buffer;\n    }\n  function program2(depth0,data) {\n    \n    \n    data.buffer.push(\"\\n                            Complete your Profile\\n                        \");\n    }\n\n  function program4(depth0,data) {\n    \n    var buffer = '';\n    data.buffer.push(\"\\n                            <a \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"editProfile\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data})));\n    data.buffer.push(\">Complete your Profile</a>\\n                        \");\n    return buffer;\n    }\n\n  function program6(depth0,data) {\n    \n    \n    data.buffer.push(\"\\n                            Add own Content Projects\\n                        \");\n    }\n\n  function program8(depth0,data) {\n    \n    var buffer = '';\n    data.buffer.push(\"\\n                            <a \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"addContentProject\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data})));\n    data.buffer.push(\">Add own Content Projects</a>\\n                        \");\n    return buffer;\n    }\n\n    stack1 = helpers['if'].call(depth0, \"show\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    else { data.buffer.push(''); }\n    \n  });\n\n});","define('morgana/templates/home/_account_status', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, escapeExpression=this.escapeExpression;\n\n\n    data.buffer.push(\"\\n<div class=\\\"panel callout radius pricing-table\\\">\\n                    <h5>\\n                        Your Account Status\\n                    </h5>\\n                    <p class=\\\"price\\\">\\n            <a \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"creditOverview\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n    data.buffer.push(\">\\n\\n                <span>\");\n    stack1 = helpers._triageMustache.call(depth0, \"currentUser.companyCredits\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</span>\\n                <small>credits left</small>\\n            </a>\\n        </p>\\n    </div>\");\n    return buffer;\n    \n  });\n\n});","define('morgana/templates/home/index', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n    data.buffer.push(\"<section>\\n    <header class=\\\"row\\\">\\n        <div class=\\\"small-12 columns\\\">\\n            <h1>Hello \");\n    stack1 = helpers._triageMustache.call(depth0, \"model.firstName\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\" \");\n    stack1 = helpers._triageMustache.call(depth0, \"model.lastName\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n            </h1>\\n        </div>\\n    </header>\\n    <div class=\\\"row\\\">\\n        <section class=\\\"large-8 small-12 columns\\\">\\n            \");\n    data.buffer.push(escapeExpression((helper = helpers.outlet || (depth0 && depth0.outlet),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"user_check_list\", options) : helperMissing.call(depth0, \"outlet\", \"user_check_list\", options))));\n    data.buffer.push(\"\\n            \");\n    data.buffer.push(escapeExpression((helper = helpers.outlet || (depth0 && depth0.outlet),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"content_project_list\", options) : helperMissing.call(depth0, \"outlet\", \"content_project_list\", options))));\n    data.buffer.push(\"\\n        </section>\\n        <aside class=\\\"small-12 large-4 columns\\\">\\n            <div>\\n                \");\n    data.buffer.push(escapeExpression((helper = helpers['button-with-loader'] || (depth0 && depth0['button-with-loader']),options={hash:{\n      'isLoading': (\"actionsLoadingStages.addContentProject\"),\n      'buttonText': (\"Add Content Project\"),\n      'action': (\"addContentProject\")\n    },hashTypes:{'isLoading': \"ID\",'buttonText': \"STRING\",'action': \"STRING\"},hashContexts:{'isLoading': depth0,'buttonText': depth0,'action': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"button-with-loader\", options))));\n    data.buffer.push(\"\\n            </div>\\n            \");\n    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"home/_account_status\", options) : helperMissing.call(depth0, \"partial\", \"home/_account_status\", options))));\n    data.buffer.push(\"\\n        </aside>\\n    </div>\\n</section>\\n\");\n    return buffer;\n    \n  });\n\n});","define('morgana/templates/loading', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    \n\n\n    data.buffer.push(\"<section>\\n   <div class=\\\"row\\\">\\n       <div class=\\\"small-12 columns text-center\\\">\\n            <img src=\\\"/assets/ax-template/svg/ax-loader.min.svg\\\" class=\\\"small-12 medium-4\\\" alt=\\\"\\\" />\\n            <h2>Loading...</h2>\\n       </div>\\n   </div>\\n</section>\");\n    \n  });\n\n});","define('morgana/templates/login', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n  function program1(depth0,data) {\n    \n    var buffer = '', helper, options;\n    data.buffer.push(\"\\n            \");\n    data.buffer.push(escapeExpression((helper = helpers['button-with-loader'] || (depth0 && depth0['button-with-loader']),options={hash:{\n      'isLoading': (\"actionsLoadingStages.invalidateSession\"),\n      'buttonText': (\"Logout\"),\n      'action': (\"invalidateSession\")\n    },hashTypes:{'isLoading': \"ID\",'buttonText': \"STRING\",'action': \"STRING\"},hashContexts:{'isLoading': depth0,'buttonText': depth0,'action': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"button-with-loader\", options))));\n    data.buffer.push(\"\\n            \");\n    return buffer;\n    }\n\n  function program3(depth0,data) {\n    \n    var buffer = '', helper, options;\n    data.buffer.push(\"\\n            \");\n    data.buffer.push(escapeExpression((helper = helpers['button-with-loader'] || (depth0 && depth0['button-with-loader']),options={hash:{\n      'isLoading': (\"actionsLoadingStages.authenticateSession\"),\n      'buttonText': (\"Login\"),\n      'action': (\"authenticate\")\n    },hashTypes:{'isLoading': \"ID\",'buttonText': \"STRING\",'action': \"STRING\"},hashContexts:{'isLoading': depth0,'buttonText': depth0,'action': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"button-with-loader\", options))));\n    data.buffer.push(\"\\n            \");\n    return buffer;\n    }\n\n    data.buffer.push(\"<section>\\n    <header class=\\\"row\\\">\\n        <div class=\\\"small-12 columns\\\">\\n            <h1>Login\\n            </h1>\\n        </div>\\n    </header>\\n    <div class=\\\"row\\\">\\n\\n        <section class=\\\"large-8 small-12 columns\\\">\\n            <form \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"authenticate\", {hash:{\n      'on': (\"submit\")\n    },hashTypes:{'on': \"STRING\"},hashContexts:{'on': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n    data.buffer.push(\" data-abide>\\n                <div class=\\\"holder\\\">\\n                    <label class=\\\"required\\\" for=\\\"id_email\\\">Email</label>\\n                    \");\n    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n      'value': (\"identification\"),\n      'id': (\"id_email\"),\n      'class': (\"textinput\"),\n      'required': (true),\n      'autofocus': (\"\")\n    },hashTypes:{'value': \"ID\",'id': \"STRING\",'class': \"STRING\",'required': \"BOOLEAN\",'autofocus': \"STRING\"},hashContexts:{'value': depth0,'id': depth0,'class': depth0,'required': depth0,'autofocus': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n    data.buffer.push(\"\\n                    <small class=\\\"error\\\">This field is required.</small>\\n                </div>\\n                <div class=\\\"holder\\\">\\n                    <label class=\\\"required\\\" for=\\\"id_password\\\">Password</label>\\n                    \");\n    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n      'value': (\"password\"),\n      'id': (\"id_password\"),\n      'class': (\"password\"),\n      'type': (\"password\"),\n      'required': (true)\n    },hashTypes:{'value': \"ID\",'id': \"STRING\",'class': \"STRING\",'type': \"STRING\",'required': \"BOOLEAN\"},hashContexts:{'value': depth0,'id': depth0,'class': depth0,'type': depth0,'required': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n    data.buffer.push(\"\\n                    <small class=\\\"error\\\">This field is required.</small>\\n                </div>\\n            </form>\\n        </section>\\n        <aside class=\\\"small-12 large-4 columns\\\">\\n            \");\n    stack1 = helpers['if'].call(depth0, \"session.isAuthenticated\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n        </aside>\\n\\n    </div>\\n</section>\");\n    return buffer;\n    \n  });\n\n});","define('morgana/templates/navigation', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, helper, options, self=this, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n  function program1(depth0,data) {\n    \n    \n    data.buffer.push(\"<img alt=\\\"Logo\\\" src=\\\"/assets/ax-template/img/logo.png\\\">\");\n    }\n\n  function program3(depth0,data) {\n    \n    var buffer = '', stack1, helper, options;\n    data.buffer.push(\"\\n            <ul class=\\\"left\\\">\\n                <li>\\n                    \");\n    stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(4, program4, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"home\", options) : helperMissing.call(depth0, \"link-to\", \"home\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n                </li>\\n\\n    \");\n    stack1 = (helper = helpers['can-do'] || (depth0 && depth0['can-do']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(6, program6, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"showTagOverview\", options) : helperMissing.call(depth0, \"can-do\", \"showTagOverview\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n                <li>\\n                    \");\n    stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(13, program13, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"profile\", options) : helperMissing.call(depth0, \"link-to\", \"profile\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n                </li>\\n\\n                <li>\\n                    \");\n    stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(15, program15, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"eventlog\", options) : helperMissing.call(depth0, \"link-to\", \"eventlog\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n                </li>\\n\\n\\n                <li class=\\\"\\\">\\n                    \");\n    stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(17, program17, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"credits\", options) : helperMissing.call(depth0, \"link-to\", \"credits\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n                </li>\\n\\n\\n            </ul>\\n\\n\\n            <!-- Right Nav Section -->\\n            <ul class=\\\"right\\\">\\n\\n                <li class=\\\"has-dropdown not-click\\\">\\n                    <a href=\\\"javascript:;\\\">\");\n    stack1 = helpers._triageMustache.call(depth0, \"currentUser.email\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</a>\\n\\n                    <ul class=\\\"dropdown\\\">\\n\\n                        <li>\\n\\n                                <a \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"invalidateSession\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n    data.buffer.push(\"><i class=\\\"step fi-lock size-16\\\"></i>Logout</a>\\n\\n                        </li>\\n                    </ul>\\n                </li>\\n\\n            </ul>\\n\");\n    return buffer;\n    }\n  function program4(depth0,data) {\n    \n    \n    data.buffer.push(\"\\n                        <i class=\\\"step fi-home size-16\\\"></i> Home\\n                    \");\n    }\n\n  function program6(depth0,data) {\n    \n    var buffer = '', stack1, helper, options;\n    data.buffer.push(\"\\n                <li class=\\\"has-dropdown\\\">\\n                    <a href=\\\"javascript:;\\\">Data Overview</a>\\n                    <ul class=\\\"dropdown\\\">\\n\\n                        <li>\\n                            \");\n    stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(7, program7, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"tags.upload\", options) : helperMissing.call(depth0, \"link-to\", \"tags.upload\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n                        </li>\\n\\n                        <li>\\n                            \");\n    stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(9, program9, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"tags\", options) : helperMissing.call(depth0, \"link-to\", \"tags\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n                        </li>\\n                        <li>\\n                            \");\n    stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(11, program11, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"download-exports\", options) : helperMissing.call(depth0, \"link-to\", \"download-exports\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n                        </li>\\n                    </ul>\\n                </li>\\n    \");\n    return buffer;\n    }\n  function program7(depth0,data) {\n    \n    \n    data.buffer.push(\"\\n                                Upload Data File\\n                            \");\n    }\n\n  function program9(depth0,data) {\n    \n    \n    data.buffer.push(\"\\n                                List Objects\\n                            \");\n    }\n\n  function program11(depth0,data) {\n    \n    \n    data.buffer.push(\"\\n                                Download Content\\n                            \");\n    }\n\n  function program13(depth0,data) {\n    \n    \n    data.buffer.push(\"\\n                        Profile\\n                    \");\n    }\n\n  function program15(depth0,data) {\n    \n    \n    data.buffer.push(\"\\n                        Eventlog\\n                    \");\n    }\n\n  function program17(depth0,data) {\n    \n    \n    data.buffer.push(\"\\n                        Credits\\n                    \");\n    }\n\n    data.buffer.push(\"<div class=\\\"contain-to-grid sticky\\\">\\n    <div data-options=\\\"sticky_on: large\\\" data-topbar=\\\"\\\" class=\\\"top-bar\\\">\\n        <ul class=\\\"title-area\\\">\\n            <li class=\\\"name\\\">\\n                <h1>\\n                        \");\n    stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"home\", options) : helperMissing.call(depth0, \"link-to\", \"home\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n                </h1>\\n            </li>\\n            <li class=\\\"toggle-topbar menu-icon\\\">\\n                <a href=\\\"javascript:;\\\"><span>Menu</span></a>\\n            </li>\\n        </ul>\\n\\n\\n        <section class=\\\"top-bar-section\\\">\\n            <!-- Left Nav Section -->\\n\\n\");\n    stack1 = helpers['if'].call(depth0, \"session.isAuthenticated\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n        </section>\\n    </div>\\n</div>\");\n    return buffer;\n    \n  });\n\n});","define('morgana/templates/profile', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1;\n\n\n    stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\");\n    return buffer;\n    \n  });\n\n});","define('morgana/templates/profile/-server-side-model-form-field-container', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', helper, options, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n    data.buffer.push(\"<div class=\\\"holder\\\">\\n    <label>\\n        <label \");\n    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n      'class': (\"field.required:required\")\n    },hashTypes:{'class': \"STRING\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\n    data.buffer.push(\">\");\n    data.buffer.push(escapeExpression((helper = helpers['capitalize-string'] || (depth0 && depth0['capitalize-string']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"field.label\", options) : helperMissing.call(depth0, \"capitalize-string\", \"field.label\", options))));\n    data.buffer.push(\"</label>\\n        <div class=\\\"row collapse\\\">\\n            <div class=\\\"small-12 columns\\\">\\n                \");\n    data.buffer.push(escapeExpression(helpers.view.call(depth0, \"serverSideModelFormField\", {hash:{\n      'fieldBinding': (\"field\"),\n      'modelBinding': (\"model\")\n    },hashTypes:{'fieldBinding': \"STRING\",'modelBinding': \"STRING\"},hashContexts:{'fieldBinding': depth0,'modelBinding': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n    data.buffer.push(\"\\n            </div>\\n        </div>\\n    </label>\\n</div>\");\n    return buffer;\n    \n  });\n\n});","define('morgana/templates/profile/-server-side-model-form-fields', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, escapeExpression=this.escapeExpression, self=this;\n\n  function program1(depth0,data) {\n    \n    var buffer = '';\n    data.buffer.push(\"\\n        \");\n    data.buffer.push(escapeExpression(helpers.view.call(depth0, \"serverSideModelFormFieldContainer\", {hash:{\n      'fieldBinding': (\"field\"),\n      'templateName': (\"profile/-server-side-model-form-field-container\")\n    },hashTypes:{'fieldBinding': \"STRING\",'templateName': \"STRING\"},hashContexts:{'fieldBinding': depth0,'templateName': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n    data.buffer.push(\"\\n    \");\n    return buffer;\n    }\n\n    data.buffer.push(\"\\n<fieldset>\\n    \");\n    stack1 = helpers.each.call(depth0, \"field\", \"in\", \"fields\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n</fieldset>\\n\");\n    return buffer;\n    \n  });\n\n});","define('morgana/templates/profile/edit-company', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', helper, options, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n    data.buffer.push(\"<section>\\n    <header class=\\\"row\\\">\\n        <div class=\\\"small-12 columns\\\">\\n            <h1>Edit Organization\\n            </h1>\\n        </div>\\n    </header>\\n    <div class=\\\"row\\\">\\n\\n        <form \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"edit\", {hash:{\n      'on': (\"submit\")\n    },hashTypes:{'on': \"STRING\"},hashContexts:{'on': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n    data.buffer.push(\" data-abide>\\n            <section class=\\\"large-8 small-12 columns\\\">\\n                \");\n    data.buffer.push(escapeExpression(helpers.view.call(depth0, \"serverSideModelFormFields\", {hash:{\n      'templateName': (\"profile/-server-side-model-form-fields\")\n    },hashTypes:{'templateName': \"STRING\"},hashContexts:{'templateName': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n    data.buffer.push(\"\\n            </section>\\n\\n            <aside class=\\\"small-12 large-4 columns\\\">\\n                <div data-ax-fixed-container>\\n                    \");\n    data.buffer.push(escapeExpression((helper = helpers['button-with-loader'] || (depth0 && depth0['button-with-loader']),options={hash:{\n      'isLoading': (\"actionsLoadingStages.back\"),\n      'buttonText': (\"Back to Profile\"),\n      'action': (\"back\")\n    },hashTypes:{'isLoading': \"ID\",'buttonText': \"STRING\",'action': \"STRING\"},hashContexts:{'isLoading': depth0,'buttonText': depth0,'action': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"button-with-loader\", options))));\n    data.buffer.push(\"\\n                    \");\n    data.buffer.push(escapeExpression((helper = helpers['button-with-loader'] || (depth0 && depth0['button-with-loader']),options={hash:{\n      'isLoading': (\"actionsLoadingStages.edit\"),\n      'buttonText': (\"Save Organization\"),\n      'action': (\"edit\")\n    },hashTypes:{'isLoading': \"ID\",'buttonText': \"STRING\",'action': \"STRING\"},hashContexts:{'isLoading': depth0,'buttonText': depth0,'action': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"button-with-loader\", options))));\n    data.buffer.push(\"\\n                </div>\\n            </aside>\\n        </form>\\n\\n    </div>\\n</section>\");\n    return buffer;\n    \n  });\n\n});","define('morgana/templates/profile/edit-user', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', helper, options, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n    data.buffer.push(\"<section id=\\\"content_project_wizard\\\">\\n    <header class=\\\"row\\\">\\n        <div class=\\\"small-12 columns\\\">\\n            <h1>Edit User\\n            </h1>\\n        </div>\\n    </header>\\n    <div class=\\\"row\\\">\\n\\n        <section class=\\\"large-8 small-12 columns\\\">\\n            <form \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"edit\", {hash:{\n      'on': (\"submit\")\n    },hashTypes:{'on': \"STRING\"},hashContexts:{'on': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n    data.buffer.push(\" data-abide>\\n                <div class=\\\"holder\\\">\\n                    <label class=\\\"required\\\" for=\\\"id_first_name\\\">First Name</label>\\n                    \");\n    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n      'value': (\"model.firstName\"),\n      'id': (\"id_first_name\"),\n      'class': (\"textinput\"),\n      'required': (true),\n      'autofocus': (\"\")\n    },hashTypes:{'value': \"ID\",'id': \"STRING\",'class': \"STRING\",'required': \"BOOLEAN\",'autofocus': \"STRING\"},hashContexts:{'value': depth0,'id': depth0,'class': depth0,'required': depth0,'autofocus': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n    data.buffer.push(\"\\n                    <small class=\\\"error\\\">This field is required.</small>\\n                </div>\\n                <div class=\\\"holder\\\">\\n                    <label class=\\\"required\\\" for=\\\"id_last_name\\\">Last Name</label>\\n                    \");\n    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n      'value': (\"model.lastName\"),\n      'id': (\"id_last_name\"),\n      'class': (\"textinput\"),\n      'required': (true)\n    },hashTypes:{'value': \"ID\",'id': \"STRING\",'class': \"STRING\",'required': \"BOOLEAN\"},hashContexts:{'value': depth0,'id': depth0,'class': depth0,'required': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n    data.buffer.push(\"\\n                    <small class=\\\"error\\\">This field is required.</small>\\n                </div>\\n            </form>\\n        </section>\\n        <aside class=\\\"small-12 large-4 columns\\\">\\n            \");\n    data.buffer.push(escapeExpression((helper = helpers['button-with-loader'] || (depth0 && depth0['button-with-loader']),options={hash:{\n      'isLoading': (\"actionsLoadingStages.back\"),\n      'buttonText': (\"Back to Profile\"),\n      'action': (\"back\")\n    },hashTypes:{'isLoading': \"ID\",'buttonText': \"STRING\",'action': \"STRING\"},hashContexts:{'isLoading': depth0,'buttonText': depth0,'action': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"button-with-loader\", options))));\n    data.buffer.push(\"\\n            \");\n    data.buffer.push(escapeExpression((helper = helpers['button-with-loader'] || (depth0 && depth0['button-with-loader']),options={hash:{\n      'isLoading': (\"actionsLoadingStages.edit\"),\n      'buttonText': (\"Save User\"),\n      'action': (\"edit\")\n    },hashTypes:{'isLoading': \"ID\",'buttonText': \"STRING\",'action': \"STRING\"},hashContexts:{'isLoading': depth0,'buttonText': depth0,'action': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"button-with-loader\", options))));\n    data.buffer.push(\"\\n        </aside>\\n\\n    </div>\\n</section>\");\n    return buffer;\n    \n  });\n\n});","define('morgana/templates/profile/index', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, helper, options, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n    data.buffer.push(\"<section>\\n\\n    <header class=\\\"row\\\">\\n        <div class=\\\"small-12 columns\\\">\\n            <h1>Profile\\n            </h1>\\n        </div>\\n    </header>\\n    <div class=\\\"row\\\">\\n        <section class=\\\"large-8 small-12 columns\\\">\\n\\n            <section>\\n                <table>\\n                    <tbody>\\n                        <tr>\\n                            <th class=\\\"text-right\\\">Email:</th>\\n                            <td>\");\n    stack1 = helpers._triageMustache.call(depth0, \"currentUser.email\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</td>\\n                        </tr>\\n                        <tr>\\n                            <th class=\\\"text-right\\\">Name:</th>\\n                            <td>\");\n    stack1 = helpers._triageMustache.call(depth0, \"currentUser.fullName\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</td>\\n                        </tr>\\n                        <tr>\\n                            <th class=\\\"text-right\\\">API token:</th>\\n                            <td>\");\n    stack1 = helpers._triageMustache.call(depth0, \"currentUser.authToken\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</td>\\n                        </tr>\\n                        <tr>\\n                            <th class=\\\"text-right\\\">AX rest api:</th>\\n                            <td><a \");\n    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n      'href': (\"currentUser.apiUrl\")\n    },hashTypes:{'href': \"ID\"},hashContexts:{'href': depth0},contexts:[],types:[],data:data})));\n    data.buffer.push(\">\");\n    stack1 = helpers._triageMustache.call(depth0, \"currentUser.apiUrl\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</a></td>\\n                        </tr>\\n                        <tr>\\n                            <th class=\\\"text-right\\\">API Example Calls/Doc</th>\\n                            <td><a href=\\\"http://blog.ax-semantics.com/pages/apidoc.html\\\">http://blog.ax-semantics.com/pages/apidoc.html</a></td>\\n                        </tr>\\n                    </tbody>\\n\\n                </table>\\n                    <h4>Organization information</h4>\\n                    \");\n    data.buffer.push(escapeExpression((helper = helpers['field-detail'] || (depth0 && depth0['field-detail']),options={hash:{\n      'fields': (\"fields\"),\n      'model': (\"model\")\n    },hashTypes:{'fields': \"ID\",'model': \"ID\"},hashContexts:{'fields': depth0,'model': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"field-detail\", options))));\n    data.buffer.push(\"\\n\\n            </section>\\n        </section>\\n        <aside class=\\\"small-12 large-4 columns\\\">\\n            <div>\\n                \");\n    data.buffer.push(escapeExpression((helper = helpers['button-with-loader'] || (depth0 && depth0['button-with-loader']),options={hash:{\n      'isLoading': (\"actionsLoadingStages.editUser\"),\n      'buttonText': (\"Edit User\"),\n      'action': (\"editUser\")\n    },hashTypes:{'isLoading': \"ID\",'buttonText': \"STRING\",'action': \"STRING\"},hashContexts:{'isLoading': depth0,'buttonText': depth0,'action': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"button-with-loader\", options))));\n    data.buffer.push(\"\\n                \");\n    data.buffer.push(escapeExpression((helper = helpers['button-with-loader'] || (depth0 && depth0['button-with-loader']),options={hash:{\n      'isLoading': (\"actionsLoadingStages.editCompany\"),\n      'buttonText': (\"Edit Organization\"),\n      'action': (\"editCompany\")\n    },hashTypes:{'isLoading': \"ID\",'buttonText': \"STRING\",'action': \"STRING\"},hashContexts:{'isLoading': depth0,'buttonText': depth0,'action': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"button-with-loader\", options))));\n    data.buffer.push(\"\\n            </div>\\n\\n        </aside>\\n\\n\\n    </div>\\n</section>\\n\");\n    return buffer;\n    \n  });\n\n});","define('morgana/templates/tags', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1;\n\n\n    stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\");\n    return buffer;\n    \n  });\n\n});","define('morgana/templates/tags/-filtered-thing-list', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;\n\n  function program1(depth0,data) {\n    \n    var buffer = '', helper, options;\n    data.buffer.push(\"\\n    <form \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"searchFields\", {hash:{\n      'on': (\"submit\")\n    },hashTypes:{'on': \"STRING\"},hashContexts:{'on': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n    data.buffer.push(\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"small-10 columns\\\">\\n                \");\n    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n      'value': (\"searchTerm\"),\n      'placeholder': (\"for UID or Object Name\")\n    },hashTypes:{'value': \"ID\",'placeholder': \"STRING\"},hashContexts:{'value': depth0,'placeholder': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n    data.buffer.push(\"\\n            </div>\\n            <div class=\\\"small-2 columns\\\">\\n                \");\n    data.buffer.push(escapeExpression((helper = helpers['button-with-loader'] || (depth0 && depth0['button-with-loader']),options={hash:{\n      'isLoading': (\"actionsLoadingStages.searchFields\"),\n      'buttonText': (\"Search\"),\n      'action': (\"searchFields\")\n    },hashTypes:{'isLoading': \"ID\",'buttonText': \"STRING\",'action': \"STRING\"},hashContexts:{'isLoading': depth0,'buttonText': depth0,'action': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"button-with-loader\", options))));\n    data.buffer.push(\"\\n            </div>\\n        </div>\\n    </form>\\n\");\n    return buffer;\n    }\n\n  function program3(depth0,data) {\n    \n    var buffer = '', helper, options;\n    data.buffer.push(\"\\n    \");\n    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"things/-loading\", options) : helperMissing.call(depth0, \"partial\", \"things/-loading\", options))));\n    data.buffer.push(\"\\n\");\n    return buffer;\n    }\n\n  function program5(depth0,data) {\n    \n    var buffer = '', stack1;\n    data.buffer.push(\"\\n\\n\");\n    stack1 = helpers['if'].call(depth0, \"hasItems\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(15, program15, data),fn:self.program(6, program6, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\");\n    return buffer;\n    }\n  function program6(depth0,data) {\n    \n    var buffer = '', stack1, helper, options;\n    data.buffer.push(\"\\n    <table>\\n        <thead>\\n            <tr>\\n                <th \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"sortField\", \"tag\", {hash:{\n      'on': (\"click\")\n    },hashTypes:{'on': \"STRING\"},hashContexts:{'on': depth0},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n    data.buffer.push(\" \");\n    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n      'class': (\":clickable sortFieldData.tag.cssClass\")\n    },hashTypes:{'class': \"STRING\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\n    data.buffer.push(\">\\n                    Tag<i class=\\\"sort-indicator\\\"/></th>\\n                <th \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"sortField\", \"content_project_pk\", {hash:{\n      'on': (\"click\")\n    },hashTypes:{'on': \"STRING\"},hashContexts:{'on': depth0},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n    data.buffer.push(\" \");\n    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n      'class': (\":clickable sortFieldData.content_project_pk.cssClass\")\n    },hashTypes:{'class': \"STRING\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\n    data.buffer.push(\">\\n                    ContentProject<i class=\\\"sort-indicator\\\"/></th>\\n\\n                <th \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"sortField\", \"uid\", {hash:{\n      'on': (\"click\")\n    },hashTypes:{'on': \"STRING\"},hashContexts:{'on': depth0},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n    data.buffer.push(\" \");\n    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n      'class': (\":clickable sortFieldData.uid.cssClass\")\n    },hashTypes:{'class': \"STRING\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\n    data.buffer.push(\">\\n                    UID<i class=\\\"sort-indicator\\\"/></th>\\n\\n                \");\n    stack1 = (helper = helpers['can-do'] || (depth0 && depth0['can-do']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(7, program7, data),contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"showSkuInTagList\", options) : helperMissing.call(depth0, \"can-do\", \"showSkuInTagList\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\\n                <th \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"sortField\", \"name\", {hash:{\n      'on': (\"click\")\n    },hashTypes:{'on': \"STRING\"},hashContexts:{'on': depth0},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n    data.buffer.push(\" \");\n    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n      'class': (\":clickable sortFieldData.name.cssClass\")\n    },hashTypes:{'class': \"STRING\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\n    data.buffer.push(\">\\n                    Object<i class=\\\"sort-indicator\\\"/></th>\\n\\n\\n                <th \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"sortField\", \"status\", {hash:{\n      'on': (\"click\")\n    },hashTypes:{'on': \"STRING\"},hashContexts:{'on': depth0},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n    data.buffer.push(\" \");\n    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n      'class': (\":clickable sortFieldData.status.cssClass\")\n    },hashTypes:{'class': \"STRING\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\n    data.buffer.push(\">\\n                    Content Status<i class=\\\"sort-indicator\\\"/></th>\\n                <th \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"sortField\", \"most_important_missing_requirement_level\", {hash:{\n      'on': (\"click\")\n    },hashTypes:{'on': \"STRING\"},hashContexts:{'on': depth0},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n    data.buffer.push(\" \");\n    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n      'class': (\":clickable sortFieldData.most_important_missing_requirement_level.cssClass\")\n    },hashTypes:{'class': \"STRING\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\n    data.buffer.push(\">\\n                    Validity<i class=\\\"sort-indicator\\\"/></th>\\n                <th \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"sortField\", \"text_length_in_chars\", {hash:{\n      'on': (\"click\")\n    },hashTypes:{'on': \"STRING\"},hashContexts:{'on': depth0},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n    data.buffer.push(\" \");\n    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n      'class': (\":clickable sortFieldData.text_length_in_chars.cssClass\")\n    },hashTypes:{'class': \"STRING\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\n    data.buffer.push(\">\\n                    Text Length<i class=\\\"sort-indicator\\\"/></th>\\n                <th \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"sortField\", \"modified\", {hash:{\n      'on': (\"click\")\n    },hashTypes:{'on': \"STRING\"},hashContexts:{'on': depth0},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n    data.buffer.push(\" \");\n    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n      'class': (\":clickable sortFieldData.modified.cssClass\")\n    },hashTypes:{'class': \"STRING\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\n    data.buffer.push(\">\\n                    Modified<i class=\\\"sort-indicator\\\"/></th>\\n            </tr>\\n            <tr>\\n                <th>\\n                    \");\n    stack1 = helpers['if'].call(depth0, \"facetFilterTags\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(9, program9, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n                </th>\\n                <th>\\n                    \");\n    data.buffer.push(escapeExpression(helpers.view.call(depth0, \"select\", {hash:{\n      'content': (\"facetFilterContentProjects\"),\n      'optionLabelPath': (\"content.displayName\"),\n      'optionValuePath': (\"content\"),\n      'prompt': (\"[ show all ]\"),\n      'value': (\"facetFilterContentProject\")\n    },hashTypes:{'content': \"ID\",'optionLabelPath': \"STRING\",'optionValuePath': \"STRING\",'prompt': \"STRING\",'value': \"ID\"},hashContexts:{'content': depth0,'optionLabelPath': depth0,'optionValuePath': depth0,'prompt': depth0,'value': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n    data.buffer.push(\"\\n                </th>\\n                <th></th>\\n                \");\n    stack1 = (helper = helpers['can-do'] || (depth0 && depth0['can-do']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(11, program11, data),contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"showSkuInTagList\", options) : helperMissing.call(depth0, \"can-do\", \"showSkuInTagList\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n                <th></th>\\n\\n\\n                <th>\\n                    \");\n    data.buffer.push(escapeExpression(helpers.view.call(depth0, \"select\", {hash:{\n      'content': (\"facetFilterStatus_\"),\n      'optionLabelPath': (\"content.displayName\"),\n      'optionValuePath': (\"content\"),\n      'prompt': (\"[ show all ]\"),\n      'value': (\"facetFilterStatus\")\n    },hashTypes:{'content': \"ID\",'optionLabelPath': \"STRING\",'optionValuePath': \"STRING\",'prompt': \"STRING\",'value': \"ID\"},hashContexts:{'content': depth0,'optionLabelPath': depth0,'optionValuePath': depth0,'prompt': depth0,'value': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n    data.buffer.push(\"\\n                </th>\\n                <th>\\n                    \");\n    data.buffer.push(escapeExpression(helpers.view.call(depth0, \"select\", {hash:{\n      'content': (\"facetFilterValidities\"),\n      'optionLabelPath': (\"content.displayName\"),\n      'optionValuePath': (\"content\"),\n      'prompt': (\"[ show all ]\"),\n      'value': (\"facetFilterValidity\")\n    },hashTypes:{'content': \"ID\",'optionLabelPath': \"STRING\",'optionValuePath': \"STRING\",'prompt': \"STRING\",'value': \"ID\"},hashContexts:{'content': depth0,'optionLabelPath': depth0,'optionValuePath': depth0,'prompt': depth0,'value': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n    data.buffer.push(\"\\n                </th>\\n                <th></th>\\n                <th></th>\\n            </tr>\\n        </thead>\\n        <tbody>\\n\\n            \");\n    stack1 = helpers.each.call(depth0, \"thing\", \"in\", \"model\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(13, program13, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\\n        <tbody>\\n    </table>\\n    \");\n    data.buffer.push(escapeExpression(helpers.view.call(depth0, \"tableFooter\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data})));\n    data.buffer.push(\"\\n\");\n    return buffer;\n    }\n  function program7(depth0,data) {\n    \n    var buffer = '';\n    data.buffer.push(\"\\n                    <th \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"sortField\", \"sku\", {hash:{\n      'on': (\"click\")\n    },hashTypes:{'on': \"STRING\"},hashContexts:{'on': depth0},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n    data.buffer.push(\" \");\n    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n      'class': (\":clickable sortFieldData.sku.cssClass\")\n    },hashTypes:{'class': \"STRING\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\n    data.buffer.push(\">\\n                        Article No<i class=\\\"sort-indicator\\\"/></th>\\n                \");\n    return buffer;\n    }\n\n  function program9(depth0,data) {\n    \n    var buffer = '';\n    data.buffer.push(\"\\n                    \");\n    data.buffer.push(escapeExpression(helpers.view.call(depth0, \"select\", {hash:{\n      'content': (\"facetFilterTags\"),\n      'optionLabelPath': (\"content.displayName\"),\n      'optionValuePath': (\"content\"),\n      'prompt': (\"[ show all ]\"),\n      'value': (\"facetFilterTag\")\n    },hashTypes:{'content': \"ID\",'optionLabelPath': \"STRING\",'optionValuePath': \"STRING\",'prompt': \"STRING\",'value': \"ID\"},hashContexts:{'content': depth0,'optionLabelPath': depth0,'optionValuePath': depth0,'prompt': depth0,'value': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n    data.buffer.push(\"\\n                    \");\n    return buffer;\n    }\n\n  function program11(depth0,data) {\n    \n    \n    data.buffer.push(\"\\n                <th></th>\\n                \");\n    }\n\n  function program13(depth0,data) {\n    \n    var buffer = '', helper, options;\n    data.buffer.push(\"\\n                \");\n    data.buffer.push(escapeExpression((helper = helpers.render || (depth0 && depth0.render),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data},helper ? helper.call(depth0, \"tags/thingRequirementLevelDetail\", \"thing\", options) : helperMissing.call(depth0, \"render\", \"tags/thingRequirementLevelDetail\", \"thing\", options))));\n    data.buffer.push(\"\\n            \");\n    return buffer;\n    }\n\n  function program15(depth0,data) {\n    \n    \n    data.buffer.push(\"\\n\\n\");\n    }\n\n    stack1 = helpers['if'].call(depth0, \"showSearchTermField\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\\n\");\n    stack1 = helpers['if'].call(depth0, \"isLoading\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(5, program5, data),fn:self.program(3, program3, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\");\n    return buffer;\n    \n  });\n\n});","define('morgana/templates/tags/-thing-requirement-level-detail-row-data', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var stack1, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n  function program1(depth0,data) {\n    \n    var buffer = '', helper, options;\n    data.buffer.push(\"\\n    \");\n    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"things/-loading\", options) : helperMissing.call(depth0, \"partial\", \"things/-loading\", options))));\n    data.buffer.push(\"\\n\");\n    return buffer;\n    }\n\n  function program3(depth0,data) {\n    \n    var buffer = '', stack1;\n    data.buffer.push(\"\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\"small-12 columns\\\">\\n\\n            <i>\");\n    stack1 = helpers._triageMustache.call(depth0, \"concreteThing.requirementLevelStatusText\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</i>\\n        </div>\\n    </div>\\n\\n    \");\n    stack1 = helpers['if'].call(depth0, \"concreteThing.hasMissingData\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(4, program4, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\\n\");\n    return buffer;\n    }\n  function program4(depth0,data) {\n    \n    var buffer = '', stack1;\n    data.buffer.push(\"\\n        <table>\\n            \");\n    stack1 = helpers.each.call(depth0, \"fieldData\", \"in\", \"improvableFieldsRequirementLevelData\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n        </table>\\n    \");\n    return buffer;\n    }\n  function program5(depth0,data) {\n    \n    var buffer = '', stack1, helper, options;\n    data.buffer.push(\"\\n                <tr>\\n                    \");\n    stack1 = (helper = helpers['can-do'] || (depth0 && depth0['can-do']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.program(8, program8, data),fn:self.program(6, program6, data),contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"showSkuInTagList\", options) : helperMissing.call(depth0, \"can-do\", \"showSkuInTagList\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\\n                    <td \");\n    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n      'class': (\":ax-field fieldData.requirementLevelCssClassName fieldData.requirementLevelEmptyCssClassName\")\n    },hashTypes:{'class': \"STRING\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\n    data.buffer.push(\">\");\n    stack1 = helpers._triageMustache.call(depth0, \"fieldData.displayValue\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</td>\\n                    <td colspan=\\\"2\\\"></td>\\n                </tr>\\n            \");\n    return buffer;\n    }\n  function program6(depth0,data) {\n    \n    var buffer = '', stack1;\n    data.buffer.push(\"\\n                        <th colspan=\\\"6\\\" class=\\\"text-right\\\">\");\n    stack1 = helpers._triageMustache.call(depth0, \"fieldData.displayLabel\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</th>\\n                    \");\n    return buffer;\n    }\n\n  function program8(depth0,data) {\n    \n    var buffer = '', stack1;\n    data.buffer.push(\"\\n                        <th colspan=\\\"5\\\" class=\\\"text-right\\\">\");\n    stack1 = helpers._triageMustache.call(depth0, \"fieldData.displayLabel\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</th>\\n                    \");\n    return buffer;\n    }\n\n    stack1 = helpers['if'].call(depth0, \"showDetailsLoading\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    else { data.buffer.push(''); }\n    \n  });\n\n});","define('morgana/templates/tags/index', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, helper, options, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;\n\n  function program1(depth0,data) {\n    \n    var buffer = '', helper, options;\n    data.buffer.push(\"\\n                <div data-dropdown=\\\"generate_content_drop\\\" \");\n    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n      'class': (\":dropdown :button :expand actionsLoadingStages.generateContent:loading\")\n    },hashTypes:{'class': \"STRING\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\n    data.buffer.push(\">\\n                    <span>\\n                        Generate content\\n                    </span>\\n                    <ul id=\\\"generate_content_drop\\\" class=\\\"f-dropdown content\\\" data-dropdown-content>\\n                        <li>\\n                            \");\n    data.buffer.push(escapeExpression((helper = helpers['button-with-loader'] || (depth0 && depth0['button-with-loader']),options={hash:{\n      'displayAsButton': (false),\n      'isLoading': (\"actionsLoadingStages.generateContent\"),\n      'buttonText': (\"Generate all missing content\"),\n      'action': (\"generateContent\")\n    },hashTypes:{'displayAsButton': \"BOOLEAN\",'isLoading': \"ID\",'buttonText': \"STRING\",'action': \"STRING\"},hashContexts:{'displayAsButton': depth0,'isLoading': depth0,'buttonText': depth0,'action': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"button-with-loader\", options))));\n    data.buffer.push(\"\\n                        </li>\\n                        <li>\\n                            \");\n    data.buffer.push(escapeExpression((helper = helpers['button-with-loader'] || (depth0 && depth0['button-with-loader']),options={hash:{\n      'displayAsButton': (false),\n      'isLoading': (\"actionsLoadingStages.generateContent\"),\n      'buttonText': (\"(Re-)generate all content\"),\n      'action': (\"forceGenerateContent\")\n    },hashTypes:{'displayAsButton': \"BOOLEAN\",'isLoading': \"ID\",'buttonText': \"STRING\",'action': \"STRING\"},hashContexts:{'displayAsButton': depth0,'isLoading': depth0,'buttonText': depth0,'action': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"button-with-loader\", options))));\n    data.buffer.push(\"\\n                        </li>\\n\\n                    </ul>\\n                </div>\\n\\n            \");\n    return buffer;\n    }\n\n  function program3(depth0,data) {\n    \n    var buffer = '', helper, options;\n    data.buffer.push(\"\\n                <div>\\n                    \");\n    data.buffer.push(escapeExpression((helper = helpers['button-with-loader'] || (depth0 && depth0['button-with-loader']),options={hash:{\n      'isLoading': (\"actionsLoadingStages.buyCredits\"),\n      'buttonText': (\"Buy credits to generate content\"),\n      'action': (\"buyCredits\")\n    },hashTypes:{'isLoading': \"ID\",'buttonText': \"STRING\",'action': \"STRING\"},hashContexts:{'isLoading': depth0,'buttonText': depth0,'action': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"button-with-loader\", options))));\n    data.buffer.push(\"\\n                </div>\\n            \");\n    return buffer;\n    }\n\n    data.buffer.push(\"<section>\\n    <header class=\\\"row\\\">\\n        <div class=\\\"small-12 columns\\\">\\n            <h1>All objects</h1>\\n        </div>\\n    </header>\\n    <div class=\\\"row\\\">\\n        <section class=\\\"large-8 small-12 columns\\\">\\n           \");\n    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"tags/-filtered-thing-list\", options) : helperMissing.call(depth0, \"partial\", \"tags/-filtered-thing-list\", options))));\n    data.buffer.push(\"\\n        </section>\\n        <aside class=\\\"small-12 large-4 columns\\\">\\n            \");\n    data.buffer.push(escapeExpression((helper = helpers['button-with-loader'] || (depth0 && depth0['button-with-loader']),options={hash:{\n      'isLoading': (\"actionsLoadingStages.home\"),\n      'buttonText': (\"To Content Projects Overview\"),\n      'action': (\"home\")\n    },hashTypes:{'isLoading': \"ID\",'buttonText': \"STRING\",'action': \"STRING\"},hashContexts:{'isLoading': depth0,'buttonText': depth0,'action': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"button-with-loader\", options))));\n    data.buffer.push(\"\\n\\n            \");\n    stack1 = (helper = helpers['can-do'] || (depth0 && depth0['can-do']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"payForContent\", options) : helperMissing.call(depth0, \"can-do\", \"payForContent\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n            <div>\\n                \");\n    data.buffer.push(escapeExpression((helper = helpers['button-with-loader'] || (depth0 && depth0['button-with-loader']),options={hash:{\n      'isLoading': (\"actionsLoadingStages.uploadFile\"),\n      'buttonText': (\"Import Objects from File\"),\n      'action': (\"uploadFile\")\n    },hashTypes:{'isLoading': \"ID\",'buttonText': \"STRING\",'action': \"STRING\"},hashContexts:{'isLoading': depth0,'buttonText': depth0,'action': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"button-with-loader\", options))));\n    data.buffer.push(\"\\n            </div>\\n            <div>\\n                \");\n    data.buffer.push(escapeExpression((helper = helpers['button-with-loader'] || (depth0 && depth0['button-with-loader']),options={hash:{\n      'isLoading': (\"actionsLoadingStages.downloadContent\"),\n      'buttonText': (\"Download content as Excel\"),\n      'action': (\"downloadContent\")\n    },hashTypes:{'isLoading': \"ID\",'buttonText': \"STRING\",'action': \"STRING\"},hashContexts:{'isLoading': depth0,'buttonText': depth0,'action': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"button-with-loader\", options))));\n    data.buffer.push(\"\\n            </div>\\n        </aside>\\n    </div>\\n</section>\\n\");\n    return buffer;\n    \n  });\n\n});","define('morgana/templates/tags/thing-requirement-level-detail', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, helper, options, escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\n  function program1(depth0,data) {\n    \n    var buffer = '', stack1;\n    data.buffer.push(\"<span class=\\\"notranslate\\\" \");\n    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n      'title': (\"thing.tag\")\n    },hashTypes:{'title': \"STRING\"},hashContexts:{'title': depth0},contexts:[],types:[],data:data})));\n    data.buffer.push(\">\");\n    stack1 = helpers._triageMustache.call(depth0, \"thing.tag\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</span>\");\n    return buffer;\n    }\n\n  function program3(depth0,data) {\n    \n    var buffer = '', stack1, helper, options;\n    data.buffer.push(\"\\n        \");\n    stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(4, program4, data),contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data},helper ? helper.call(depth0, \"content-project.index\", \"thing.contentProject.id\", options) : helperMissing.call(depth0, \"link-to\", \"content-project.index\", \"thing.contentProject.id\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    return buffer;\n    }\n  function program4(depth0,data) {\n    \n    var buffer = '', stack1;\n    data.buffer.push(\"<span\\n                class=\\\"notranslate\\\" \");\n    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n      'title': (\"thing.contentProject.name\")\n    },hashTypes:{'title': \"STRING\"},hashContexts:{'title': depth0},contexts:[],types:[],data:data})));\n    data.buffer.push(\">\");\n    stack1 = helpers._triageMustache.call(depth0, \"thing.contentProject.name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</span>\");\n    return buffer;\n    }\n\n  function program6(depth0,data) {\n    \n    var stack1, helper, options;\n    stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(7, program7, data),contexts:[depth0,depth0,depth0],types:[\"STRING\",\"ID\",\"ID\"],data:data},helper ? helper.call(depth0, \"content-project.thing-type.thing.index\", \"thing.contentProject.id\", \"thing.id\", options) : helperMissing.call(depth0, \"link-to\", \"content-project.thing-type.thing.index\", \"thing.contentProject.id\", \"thing.id\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    else { data.buffer.push(''); }\n    }\n  function program7(depth0,data) {\n    \n    var buffer = '', stack1;\n    data.buffer.push(\"<span\\n            class=\\\"notranslate\\\" \");\n    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n      'title': (\"thing.uid\")\n    },hashTypes:{'title': \"STRING\"},hashContexts:{'title': depth0},contexts:[],types:[],data:data})));\n    data.buffer.push(\">\");\n    stack1 = helpers._triageMustache.call(depth0, \"thing.uid\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</span>\");\n    return buffer;\n    }\n\n  function program9(depth0,data) {\n    \n    var buffer = '', stack1;\n    data.buffer.push(\"\\n        <td>\");\n    stack1 = helpers['if'].call(depth0, \"thing.sku\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(10, program10, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</td>\\n    \");\n    return buffer;\n    }\n  function program10(depth0,data) {\n    \n    var stack1, helper, options;\n    stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(11, program11, data),contexts:[depth0,depth0,depth0],types:[\"STRING\",\"ID\",\"ID\"],data:data},helper ? helper.call(depth0, \"content-project.thing-type.thing.index\", \"thing.contentProject.id\", \"thing.id\", options) : helperMissing.call(depth0, \"link-to\", \"content-project.thing-type.thing.index\", \"thing.contentProject.id\", \"thing.id\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    else { data.buffer.push(''); }\n    }\n  function program11(depth0,data) {\n    \n    var buffer = '', stack1;\n    data.buffer.push(\"<span\\n                class=\\\"notranslate\\\" \");\n    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n      'title': (\"thing.sku\")\n    },hashTypes:{'title': \"STRING\"},hashContexts:{'title': depth0},contexts:[],types:[],data:data})));\n    data.buffer.push(\">\");\n    stack1 = helpers._triageMustache.call(depth0, \"thing.sku\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</span>\");\n    return buffer;\n    }\n\n  function program13(depth0,data) {\n    \n    var stack1, helper, options;\n    stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(14, program14, data),contexts:[depth0,depth0,depth0],types:[\"STRING\",\"ID\",\"ID\"],data:data},helper ? helper.call(depth0, \"content-project.thing-type.thing.index\", \"thing.contentProject.id\", \"thing.id\", options) : helperMissing.call(depth0, \"link-to\", \"content-project.thing-type.thing.index\", \"thing.contentProject.id\", \"thing.id\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    else { data.buffer.push(''); }\n    }\n  function program14(depth0,data) {\n    \n    var buffer = '', stack1;\n    data.buffer.push(\"<span\\n            class=\\\"notranslate\\\" \");\n    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n      'title': (\"thing.name\")\n    },hashTypes:{'title': \"STRING\"},hashContexts:{'title': depth0},contexts:[],types:[],data:data})));\n    data.buffer.push(\">\");\n    stack1 = helpers._triageMustache.call(depth0, \"thing.name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</span>\");\n    return buffer;\n    }\n\n  function program16(depth0,data) {\n    \n    var buffer = '', stack1;\n    data.buffer.push(\"<span \");\n    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n      'title': (\"thing.status\")\n    },hashTypes:{'title': \"STRING\"},hashContexts:{'title': depth0},contexts:[],types:[],data:data})));\n    data.buffer.push(\">\");\n    stack1 = helpers._triageMustache.call(depth0, \"thing.status\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</span>\");\n    return buffer;\n    }\n\n  function program18(depth0,data) {\n    \n    var buffer = '';\n    data.buffer.push(\"\\n        <a href=\\\"javascript:;\\\" \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"thingRequirementLevelDetail\", \"thing\", \"thing.contentProject\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:[\"STRING\",\"ID\",\"ID\"],data:data})));\n    data.buffer.push(\">\\n            <i data-tooltip\\n                \");\n    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n      'class': (\"thing.mostImportantMissingRequirementLevelClassName\")\n    },hashTypes:{'class': \"STRING\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\n    data.buffer.push(\"\\n                \");\n    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n      'title': (\"thing.requirementLevelStatusText\")\n    },hashTypes:{'title': \"STRING\"},hashContexts:{'title': depth0},contexts:[],types:[],data:data})));\n    data.buffer.push(\"\\n                    >&nbsp;</i>\\n        </a>\\n        \");\n    return buffer;\n    }\n\n  function program20(depth0,data) {\n    \n    var buffer = '';\n    data.buffer.push(\"\\n            <i data-tooltip\\n                \");\n    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n      'class': (\"thing.mostImportantMissingRequirementLevelClassName\")\n    },hashTypes:{'class': \"STRING\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\n    data.buffer.push(\"\\n                \");\n    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n      'title': (\"thing.requirementLevelStatusText\")\n    },hashTypes:{'title': \"STRING\"},hashContexts:{'title': depth0},contexts:[],types:[],data:data})));\n    data.buffer.push(\"\\n                    >&nbsp;</i>\\n        \");\n    return buffer;\n    }\n\n  function program22(depth0,data) {\n    \n    var buffer = '', stack1;\n    data.buffer.push(\"\\n            \");\n    stack1 = helpers._triageMustache.call(depth0, \"thing.textLengthInChars\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"&nbsp;Chars<br/>\\n            (\");\n    stack1 = helpers._triageMustache.call(depth0, \"thing.textLengthInWords\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"&nbsp;Words)\\n        \");\n    return buffer;\n    }\n\n  function program24(depth0,data) {\n    \n    var buffer = '', helper, options;\n    data.buffer.push(\"\\n            \");\n    data.buffer.push(escapeExpression((helper = helpers.ago || (depth0 && depth0.ago),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"thing.modified\", options) : helperMissing.call(depth0, \"ago\", \"thing.modified\", options))));\n    data.buffer.push(\"\\n        \");\n    return buffer;\n    }\n\n  function program26(depth0,data) {\n    \n    var buffer = '', stack1;\n    data.buffer.push(\"\\n    \");\n    stack1 = helpers['if'].call(depth0, \"showDetails\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(27, program27, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\");\n    return buffer;\n    }\n  function program27(depth0,data) {\n    \n    var buffer = '', stack1, helper, options;\n    data.buffer.push(\"\\n\\n\\n        <tr id=\\\"requirement-level-detail-filler-row\\\">\\n            \");\n    stack1 = (helper = helpers['can-do'] || (depth0 && depth0['can-do']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.program(30, program30, data),fn:self.program(28, program28, data),contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"showSkuInTagList\", options) : helperMissing.call(depth0, \"can-do\", \"showSkuInTagList\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n        </tr>\\n        <tr id=\\\"requirement-level-detail-row\\\">\\n            \");\n    stack1 = (helper = helpers['can-do'] || (depth0 && depth0['can-do']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.program(34, program34, data),fn:self.program(32, program32, data),contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"showSkuInTagList\", options) : helperMissing.call(depth0, \"can-do\", \"showSkuInTagList\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n        </tr>\\n\\n\\n    \");\n    return buffer;\n    }\n  function program28(depth0,data) {\n    \n    \n    data.buffer.push(\"\\n                <td colspan=\\\"9\\\"></td>\\n            \");\n    }\n\n  function program30(depth0,data) {\n    \n    \n    data.buffer.push(\"\\n                <td colspan=\\\"8\\\"></td>\\n            \");\n    }\n\n  function program32(depth0,data) {\n    \n    var buffer = '', helper, options;\n    data.buffer.push(\"\\n                <td colspan=\\\"9\\\">\");\n    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"tags/-thing-requirement-level-detail-row-data\", options) : helperMissing.call(depth0, \"partial\", \"tags/-thing-requirement-level-detail-row-data\", options))));\n    data.buffer.push(\"</td>\\n            \");\n    return buffer;\n    }\n\n  function program34(depth0,data) {\n    \n    var buffer = '', helper, options;\n    data.buffer.push(\"\\n                <td colspan=\\\"8\\\">\");\n    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"tags/-thing-requirement-level-detail-row-data\", options) : helperMissing.call(depth0, \"partial\", \"tags/-thing-requirement-level-detail-row-data\", options))));\n    data.buffer.push(\"</td>\\n            \");\n    return buffer;\n    }\n\n    data.buffer.push(\"<tr \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"thingDetail\", \"thing\", {hash:{\n      'on': (\"doubleClick\")\n    },hashTypes:{'on': \"STRING\"},hashContexts:{'on': depth0},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data})));\n    data.buffer.push(\" class=\\\"clickable\\\" \");\n    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n      'data-thing-uuid': (\"thing.uuid\")\n    },hashTypes:{'data-thing-uuid': \"ID\"},hashContexts:{'data-thing-uuid': depth0},contexts:[],types:[],data:data})));\n    data.buffer.push(\">\\n    <td>\");\n    stack1 = helpers['if'].call(depth0, \"thing.tag\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</td>\\n    <td>\");\n    stack1 = helpers['if'].call(depth0, \"thing.contentProject.name\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n    </td>\\n    <td>\");\n    stack1 = helpers['if'].call(depth0, \"thing.uid\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(6, program6, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</td>\\n    \");\n    stack1 = (helper = helpers['can-do'] || (depth0 && depth0['can-do']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(9, program9, data),contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"showSkuInTagList\", options) : helperMissing.call(depth0, \"can-do\", \"showSkuInTagList\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n    <td>\");\n    stack1 = helpers['if'].call(depth0, \"thing.name\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(13, program13, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</td>\\n    <td>\");\n    stack1 = helpers['if'].call(depth0, \"thing.status\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(16, program16, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</td>\\n    <td>\\n        \");\n    stack1 = helpers['if'].call(depth0, \"hasDetails\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(20, program20, data),fn:self.program(18, program18, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n    </td>\\n    <td>\\n        \");\n    stack1 = helpers['if'].call(depth0, \"thing.textLengthInChars\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(22, program22, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n    </td>\\n    <td>\\n        \");\n    stack1 = helpers['if'].call(depth0, \"thing.modified\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(24, program24, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n    </td>\\n</tr>\\n\\n\");\n    stack1 = helpers['if'].call(depth0, \"hasDetails\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(26, program26, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    return buffer;\n    \n  });\n\n});","define('morgana/templates/tags/upload', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, helper, options, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;\n\n  function program1(depth0,data) {\n    \n    \n    data.buffer.push(\"\\n                \");\n    }\n\n  function program3(depth0,data) {\n    \n    var buffer = '';\n    data.buffer.push(\"\\n                <fieldset>\\n                    <div class=\\\"holder\\\">\\n                        <label for=\\\"content_project\\\">Content Project</label>\\n                        \");\n    data.buffer.push(escapeExpression(helpers.view.call(depth0, \"select\", {hash:{\n      'content': (\"allContentProjects\"),\n      'optionLabelPath': (\"content.name\"),\n      'optionValuePath': (\"content\"),\n      'prompt': (\"Select a Content Project\"),\n      'selection': (\"contentProject\"),\n      'id': (\"content_project\")\n    },hashTypes:{'content': \"ID\",'optionLabelPath': \"STRING\",'optionValuePath': \"STRING\",'prompt': \"STRING\",'selection': \"ID\",'id': \"STRING\"},hashContexts:{'content': depth0,'optionLabelPath': depth0,'optionValuePath': depth0,'prompt': depth0,'selection': depth0,'id': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n    data.buffer.push(\"\\n                    </div>\\n                </fieldset>\\n                \");\n    return buffer;\n    }\n\n    data.buffer.push(\"<section id=\\\"content_project_wizard\\\">\\n    <header class=\\\"row\\\">\\n        <div class=\\\"small-12 columns\\\">\\n            <h1>Bulk Upload File\\n            </h1>\\n        </div>\\n    </header>\\n    <div class=\\\"row\\\">\\n        <form \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"upload\", {hash:{\n      'on': (\"submit\")\n    },hashTypes:{'on': \"STRING\"},hashContexts:{'on': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n    data.buffer.push(\" data-abide>\\n\\n            <section class=\\\"large-8 small-12 columns\\\">\\n                <fieldset>\\n                    <div class=\\\"holder\\\" id=\\\"div_id_tag\\\">\\n                        <label for=\\\"id_tag\\\">Tag</label>\\n                        \");\n    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n      'value': (\"tag\"),\n      'id': (\"id_tag\"),\n      'class': (\"textinput\"),\n      'placeholder': (\"KWxx\")\n    },hashTypes:{'value': \"ID\",'id': \"STRING\",'class': \"STRING\",'placeholder': \"STRING\"},hashContexts:{'value': depth0,'id': depth0,'class': depth0,'placeholder': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n    data.buffer.push(\"\\n                    </div>\\n                    <div class=\\\"holder\\\" id=\\\"div_id_data_file\\\">\\n                        <label for=\\\"id_data_file\\\">File</label>\\n                        \");\n    data.buffer.push(escapeExpression(helpers.view.call(depth0, \"FileUploadField\", {hash:{\n      'uploadFile': (\"dataFile\")\n    },hashTypes:{'uploadFile': \"ID\"},hashContexts:{'uploadFile': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n    data.buffer.push(\"\\n                    </div>\\n                </fieldset>\\n                \");\n    stack1 = (helper = helpers['can-do'] || (depth0 && depth0['can-do']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"multiContentProjectUploads\", options) : helperMissing.call(depth0, \"can-do\", \"multiContentProjectUploads\", options));\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n            </section>\\n\\n            <aside class=\\\"small-12 large-4 columns\\\">\\n                \");\n    data.buffer.push(escapeExpression((helper = helpers['button-with-loader'] || (depth0 && depth0['button-with-loader']),options={hash:{\n      'isLoading': (\"actionsLoadingStages.back\"),\n      'buttonText': (\"Back to Import List\"),\n      'action': (\"back\")\n    },hashTypes:{'isLoading': \"ID\",'buttonText': \"STRING\",'action': \"STRING\"},hashContexts:{'isLoading': depth0,'buttonText': depth0,'action': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"button-with-loader\", options))));\n    data.buffer.push(\"\\n                \");\n    data.buffer.push(escapeExpression((helper = helpers['button-with-loader'] || (depth0 && depth0['button-with-loader']),options={hash:{\n      'isLoading': (\"actionsLoadingStages.upload\"),\n      'buttonText': (\"Upload File\"),\n      'action': (\"upload\")\n    },hashTypes:{'isLoading': \"ID\",'buttonText': \"STRING\",'action': \"STRING\"},hashContexts:{'isLoading': depth0,'buttonText': depth0,'action': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"button-with-loader\", options))));\n    data.buffer.push(\"\\n            </aside>\\n        </form>\\n    </div>\\n</section>\\n\");\n    return buffer;\n    \n  });\n\n});","define('morgana/templates/thing', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1;\n\n\n    stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\");\n    return buffer;\n    \n  });\n\n});","define('morgana/templates/things/-loading', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    \n\n\n    data.buffer.push(\"<section>\\n   <div class=\\\"row\\\">\\n       <div class=\\\"small-12 columns text-center\\\">\\n            <img src=\\\"/assets/ax-template/svg/ax-loader.min.svg\\\" class=\\\"small-12 medium-4\\\" alt=\\\"\\\" style=\\\"width: 100px;\\\" />\\n            <h2>Loading...</h2>\\n       </div>\\n   </div>\\n</section>\");\n    \n  });\n\n});","define('morgana/templates/things/_thing_list', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;\n\n  function program1(depth0,data) {\n    \n    var buffer = '', helper, options;\n    data.buffer.push(\"\\n    <form \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"searchFields\", {hash:{\n      'on': (\"submit\")\n    },hashTypes:{'on': \"STRING\"},hashContexts:{'on': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n    data.buffer.push(\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"small-10 columns\\\">\\n                \");\n    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n      'value': (\"searchTerm\"),\n      'placeholder': (\"Search for UID or Object Name\")\n    },hashTypes:{'value': \"ID\",'placeholder': \"STRING\"},hashContexts:{'value': depth0,'placeholder': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n    data.buffer.push(\"\\n            </div>\\n            <div class=\\\"small-2 columns\\\">\\n                \");\n    data.buffer.push(escapeExpression((helper = helpers['button-with-loader'] || (depth0 && depth0['button-with-loader']),options={hash:{\n      'isLoading': (\"actionsLoadingStages.searchFields\"),\n      'buttonText': (\"Search\"),\n      'action': (\"searchFields\")\n    },hashTypes:{'isLoading': \"ID\",'buttonText': \"STRING\",'action': \"STRING\"},hashContexts:{'isLoading': depth0,'buttonText': depth0,'action': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"button-with-loader\", options))));\n    data.buffer.push(\"\\n            </div>\\n        </div>\\n    </form>\\n\");\n    return buffer;\n    }\n\n  function program3(depth0,data) {\n    \n    var buffer = '', helper, options;\n    data.buffer.push(\"\\n    \");\n    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"things/_loading\", options) : helperMissing.call(depth0, \"partial\", \"things/_loading\", options))));\n    data.buffer.push(\"\\n\");\n    return buffer;\n    }\n\n  function program5(depth0,data) {\n    \n    var buffer = '', stack1;\n    data.buffer.push(\"\\n\\n    \");\n    stack1 = helpers['if'].call(depth0, \"hasItems\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(11, program11, data),fn:self.program(6, program6, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\");\n    return buffer;\n    }\n  function program6(depth0,data) {\n    \n    var buffer = '', stack1;\n    data.buffer.push(\"\\n        \");\n    stack1 = helpers['if'].call(depth0, \"contentProject.engineConfiguration.status.infoObjects\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(7, program7, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n        <table>\\n            <thead>\\n            <tr>\\n                <th \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"sortField\", \"uid\", {hash:{\n      'on': (\"click\")\n    },hashTypes:{'on': \"STRING\"},hashContexts:{'on': depth0},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n    data.buffer.push(\" \");\n    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n      'class': (\":clickable sortFieldData.uid.cssClass\")\n    },hashTypes:{'class': \"STRING\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\n    data.buffer.push(\">\\n                    UID<i class=\\\"sort-indicator\\\"/></th>\\n                <th \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"sortField\", \"name\", {hash:{\n      'on': (\"click\")\n    },hashTypes:{'on': \"STRING\"},hashContexts:{'on': depth0},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n    data.buffer.push(\" \");\n    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n      'class': (\":clickable sortFieldData.name.cssClass\")\n    },hashTypes:{'class': \"STRING\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\n    data.buffer.push(\">\\n                    Object<i class=\\\"sort-indicator\\\"/></th>\\n                <th>Text Status</th>\\n                <th>Validity</th>\\n            </tr>\\n            </thead>\\n            <tbody>\\n            \");\n    stack1 = helpers.each.call(depth0, \"thing\", \"in\", \"model\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(9, program9, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n            <tbody>\\n        </table>\\n        \");\n    data.buffer.push(escapeExpression(helpers.view.call(depth0, \"tableFooter\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data})));\n    data.buffer.push(\"\\n    \");\n    return buffer;\n    }\n  function program7(depth0,data) {\n    \n    var buffer = '', stack1;\n    data.buffer.push(\"\\n            <div class=\\\"panel-info\\\">\\n                \");\n    stack1 = helpers._triageMustache.call(depth0, \"contentProject.engineConfiguration.status.infoObjects\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n            </div>\\n        \");\n    return buffer;\n    }\n\n  function program9(depth0,data) {\n    \n    var buffer = '', stack1;\n    data.buffer.push(\"\\n                <tr \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"thingDetail\", \"thing\", {hash:{\n      'on': (\"click\")\n    },hashTypes:{'on': \"STRING\"},hashContexts:{'on': depth0},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data})));\n    data.buffer.push(\" class=\\\"clickable\\\">\\n                    <td class=\\\"notranslate\\\">\");\n    stack1 = helpers._triageMustache.call(depth0, \"thing.uid\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</td>\\n                    <td class=\\\"notranslate\\\">\");\n    stack1 = helpers._triageMustache.call(depth0, \"thing.name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</td>\\n                    <td>\");\n    stack1 = helpers._triageMustache.call(depth0, \"thing.status\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"</td>\\n                    <td>\\n                        <i data-tooltip\\n                            \");\n    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n      'class': (\"thing.mostImportantMissingRequirementLevelClassName\")\n    },hashTypes:{'class': \"STRING\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\n    data.buffer.push(\"\\n                            \");\n    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n      'title': (\"thing.requirementLevelStatusText\")\n    },hashTypes:{'title': \"STRING\"},hashContexts:{'title': depth0},contexts:[],types:[],data:data})));\n    data.buffer.push(\"\\n                                ></i>\\n                    </td>\\n                </tr>\\n            \");\n    return buffer;\n    }\n\n  function program11(depth0,data) {\n    \n    var buffer = '', stack1;\n    data.buffer.push(\"\\n\\n        \");\n    stack1 = helpers['if'].call(depth0, \"lastUsedSearchTerm\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(14, program14, data),fn:self.program(12, program12, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n    \");\n    return buffer;\n    }\n  function program12(depth0,data) {\n    \n    \n    data.buffer.push(\"\\n            <div class=\\\"panel-info\\\">\\n                Your search has not returned any Objects.\\n            </div>\\n        \");\n    }\n\n  function program14(depth0,data) {\n    \n    var buffer = '', stack1;\n    data.buffer.push(\"\\n            \");\n    stack1 = helpers['if'].call(depth0, \"contentProject.engineConfiguration.status.infoNoObjects\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(15, program15, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n        \");\n    return buffer;\n    }\n  function program15(depth0,data) {\n    \n    var buffer = '', stack1;\n    data.buffer.push(\"\\n                <div class=\\\"panel-info\\\">\\n                    \");\n    stack1 = helpers._triageMustache.call(depth0, \"contentProject.engineConfiguration.status.infoNoObjects\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n                </div>\\n            \");\n    return buffer;\n    }\n\n    stack1 = helpers['if'].call(depth0, \"showSearchTermField\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\\n\");\n    stack1 = helpers['if'].call(depth0, \"isLoading\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(5, program5, data),fn:self.program(3, program3, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\");\n    return buffer;\n    \n  });\n\n});","define('morgana/templates/things/index', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n    data.buffer.push(\"<section id=\\\"content_project_wizard\\\">\\n    <header class=\\\"row\\\">\\n        <div class=\\\"small-12 columns\\\">\\n            <h1>\");\n    stack1 = helpers._triageMustache.call(depth0, \"contentProject.name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n            </h1>\\n        </div>\\n    </header>\\n    <div class=\\\"row\\\">\\n        <section class=\\\"large-8 small-12 columns\\\">\\n            \");\n    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"things/_thing_list\", options) : helperMissing.call(depth0, \"partial\", \"things/_thing_list\", options))));\n    data.buffer.push(\"\\n        </section>\\n        <aside class=\\\"small-12 large-4 columns\\\">\\n\\n        </aside>\\n    </div>\\n</section>\");\n    return buffer;\n    \n  });\n\n});","define('morgana/templates/views/table-footer', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1, helper, options, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;\n\n  function program1(depth0,data) {\n    \n    var buffer = '', stack1;\n    data.buffer.push(\"Showing \");\n    stack1 = helpers._triageMustache.call(depth0, \"itemsPerPage\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\" of\");\n    return buffer;\n    }\n\n  function program3(depth0,data) {\n    \n    var buffer = '';\n    data.buffer.push(\" \\n        <ul class=\\\"pagination\\\">\\n            <li>\\n                <a \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"previous\", {hash:{\n      'on': (\"click\")\n    },hashTypes:{'on': \"STRING\"},hashContexts:{'on': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n    data.buffer.push(\">Previous</a>\\n            </li>\\n            <li>\\n                \");\n    data.buffer.push(escapeExpression(helpers.view.call(depth0, \"select\", {hash:{\n      'content': (\"allPages\"),\n      'value': (\"selectedPage\")\n    },hashTypes:{'content': \"ID\",'value': \"ID\"},hashContexts:{'content': depth0,'value': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n    data.buffer.push(\"\\n            </li>\\n            <li>\\n                <a \");\n    data.buffer.push(escapeExpression(helpers.action.call(depth0, \"next\", {hash:{\n      'on': (\"click\")\n    },hashTypes:{'on': \"STRING\"},hashContexts:{'on': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n    data.buffer.push(\">Next</a>\\n            </li>\\n        </ul>\\n        \");\n    return buffer;\n    }\n\n  function program5(depth0,data) {\n    \n    var buffer = '', stack1, helper, options;\n    data.buffer.push(\"\\n        <span class=\\\"text-light\\\">\");\n    stack1 = helpers._triageMustache.call(depth0, \"totalPages\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\" \");\n    data.buffer.push(escapeExpression((helper = helpers['pluralize-string'] || (depth0 && depth0['pluralize-string']),options={hash:{\n      's': (\"page\")\n    },hashTypes:{'s': \"STRING\"},hashContexts:{'s': depth0},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"totalPages\", options) : helperMissing.call(depth0, \"pluralize-string\", \"totalPages\", options))));\n    data.buffer.push(\"</span>\\n        \");\n    return buffer;\n    }\n\n    data.buffer.push(\"<div class=\\\"row\\\">\\n    <div class=\\\"medium-6 columns text-light\\\">\\n        \");\n    stack1 = helpers['if'].call(depth0, \"view.hasMoreThanOnePage\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\" \");\n    stack1 = helpers._triageMustache.call(depth0, \"totalItems\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\" \");\n    data.buffer.push(escapeExpression((helper = helpers['pluralize-string'] || (depth0 && depth0['pluralize-string']),options={hash:{\n      's': (\"object\")\n    },hashTypes:{'s': \"STRING\"},hashContexts:{'s': depth0},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"totalItems\", options) : helperMissing.call(depth0, \"pluralize-string\", \"totalItems\", options))));\n    data.buffer.push(\"\\n    </div>\\n    <div class=\\\"medium-6 columns text-right\\\">\\n        \");\n    stack1 = helpers['if'].call(depth0, \"view.hasMoreThanOnePage\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(5, program5, data),fn:self.program(3, program3, data),contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n    </div>\\n</div>\\n\");\n    return buffer;\n    \n  });\n\n});","define('morgana/tests/adapters/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - adapters');\n  test('adapters/application.js should pass jshint', function() { \n    ok(true, 'adapters/application.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/adapters/ax-company.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - adapters');\n  test('adapters/ax-company.js should pass jshint', function() { \n    ok(true, 'adapters/ax-company.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/adapters/bulk-upload-general.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - adapters');\n  test('adapters/bulk-upload-general.js should pass jshint', function() { \n    ok(true, 'adapters/bulk-upload-general.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/adapters/bulk-upload.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - adapters');\n  test('adapters/bulk-upload.js should pass jshint', function() { \n    ok(true, 'adapters/bulk-upload.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/adapters/content-project-export.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - adapters');\n  test('adapters/content-project-export.js should pass jshint', function() { \n    ok(true, 'adapters/content-project-export.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/adapters/content-request.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - adapters');\n  test('adapters/content-request.js should pass jshint', function() { \n    ok(true, 'adapters/content-request.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/adapters/django-rest-file.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - adapters');\n  test('adapters/django-rest-file.js should pass jshint', function() { \n    ok(true, 'adapters/django-rest-file.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/adapters/image-request.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - adapters');\n  test('adapters/image-request.js should pass jshint', function() { \n    ok(true, 'adapters/image-request.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/adapters/text-request.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - adapters');\n  test('adapters/text-request.js should pass jshint', function() { \n    ok(true, 'adapters/text-request.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/adapters/thing.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - adapters');\n  test('adapters/thing.js should pass jshint', function() { \n    ok(true, 'adapters/thing.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/adapters/user-check-list.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - adapters');\n  test('adapters/user-check-list.js should pass jshint', function() { \n    ok(true, 'adapters/user-check-list.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/adapters/user.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - adapters');\n  test('adapters/user.js should pass jshint', function() { \n    ok(true, 'adapters/user.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('app.js should pass jshint', function() { \n    ok(true, 'app.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/authenticators/myax.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - authenticators');\n  test('authenticators/myax.js should pass jshint', function() { \n    ok(true, 'authenticators/myax.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/authorizers/myax.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - authorizers');\n  test('authorizers/myax.js should pass jshint', function() { \n    ok(true, 'authorizers/myax.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/components/button-with-loader.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/button-with-loader.js should pass jshint', function() { \n    ok(true, 'components/button-with-loader.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/controllers/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/application.js should pass jshint', function() { \n    ok(true, 'controllers/application.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/controllers/content-project/bulk-upload/upload.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/content-project/bulk-upload');\n  test('controllers/content-project/bulk-upload/upload.js should pass jshint', function() { \n    ok(true, 'controllers/content-project/bulk-upload/upload.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/controllers/content-project/content-project-exports/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/content-project/content-project-exports');\n  test('controllers/content-project/content-project-exports/index.js should pass jshint', function() { \n    ok(true, 'controllers/content-project/content-project-exports/index.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/controllers/content-project/delete.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/content-project');\n  test('controllers/content-project/delete.js should pass jshint', function() { \n    ok(true, 'controllers/content-project/delete.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/controllers/content-project/edit.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/content-project');\n  test('controllers/content-project/edit.js should pass jshint', function() { \n    ok(true, 'controllers/content-project/edit.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/controllers/content-project/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/content-project');\n  test('controllers/content-project/index.js should pass jshint', function() { \n    ok(true, 'controllers/content-project/index.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/controllers/content-project/thing-type/thing-new.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/content-project/thing-type');\n  test('controllers/content-project/thing-type/thing-new.js should pass jshint', function() { \n    ok(true, 'controllers/content-project/thing-type/thing-new.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/controllers/content-project/thing-type/thing/delete.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/content-project/thing-type/thing');\n  test('controllers/content-project/thing-type/thing/delete.js should pass jshint', function() { \n    ok(true, 'controllers/content-project/thing-type/thing/delete.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/controllers/content-project/thing-type/thing/edit.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/content-project/thing-type/thing');\n  test('controllers/content-project/thing-type/thing/edit.js should pass jshint', function() { \n    ok(true, 'controllers/content-project/thing-type/thing/edit.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/controllers/content-project/thing-type/thing/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/content-project/thing-type/thing');\n  test('controllers/content-project/thing-type/thing/index.js should pass jshint', function() { \n    ok(true, 'controllers/content-project/thing-type/thing/index.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/controllers/content-project/thing-type/thing/server-side-model-field-detail.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/content-project/thing-type/thing');\n  test('controllers/content-project/thing-type/thing/server-side-model-field-detail.js should pass jshint', function() { \n    ok(true, 'controllers/content-project/thing-type/thing/server-side-model-field-detail.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/controllers/content-projects/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/content-projects');\n  test('controllers/content-projects/index.js should pass jshint', function() { \n    ok(true, 'controllers/content-projects/index.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/controllers/credits/credit-history-element.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/credits');\n  test('controllers/credits/credit-history-element.js should pass jshint', function() { \n    ok(true, 'controllers/credits/credit-history-element.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/controllers/credits/credit-history.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/credits');\n  test('controllers/credits/credit-history.js should pass jshint', function() { \n    ok(true, 'controllers/credits/credit-history.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/controllers/credits/invoices.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/credits');\n  test('controllers/credits/invoices.js should pass jshint', function() { \n    ok(true, 'controllers/credits/invoices.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/controllers/download-exports/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/download-exports');\n  test('controllers/download-exports/index.js should pass jshint', function() { \n    ok(true, 'controllers/download-exports/index.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/controllers/engine-configuration/content-project/new.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/engine-configuration/content-project');\n  test('controllers/engine-configuration/content-project/new.js should pass jshint', function() { \n    ok(true, 'controllers/engine-configuration/content-project/new.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/controllers/engine-configuration/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/engine-configuration');\n  test('controllers/engine-configuration/index.js should pass jshint', function() { \n    ok(true, 'controllers/engine-configuration/index.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/controllers/engine-configurations/contact.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/engine-configurations');\n  test('controllers/engine-configurations/contact.js should pass jshint', function() { \n    ok(true, 'controllers/engine-configurations/contact.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/controllers/engine-configurations/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/engine-configurations');\n  test('controllers/engine-configurations/index.js should pass jshint', function() { \n    ok(true, 'controllers/engine-configurations/index.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/controllers/eventlog/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/eventlog');\n  test('controllers/eventlog/index.js should pass jshint', function() { \n    ok(true, 'controllers/eventlog/index.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/controllers/flash-messages.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/flash-messages.js should pass jshint', function() { \n    ok(true, 'controllers/flash-messages.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/controllers/home/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/home');\n  test('controllers/home/index.js should pass jshint', function() { \n    ok(true, 'controllers/home/index.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/controllers/login.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/login.js should pass jshint', function() { \n    ok(true, 'controllers/login.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/controllers/navigation.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/navigation.js should pass jshint', function() { \n    ok(true, 'controllers/navigation.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/controllers/profile/edit-company.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/profile');\n  test('controllers/profile/edit-company.js should pass jshint', function() { \n    ok(true, 'controllers/profile/edit-company.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/controllers/profile/edit-user.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/profile');\n  test('controllers/profile/edit-user.js should pass jshint', function() { \n    ok(true, 'controllers/profile/edit-user.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/controllers/profile/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/profile');\n  test('controllers/profile/index.js should pass jshint', function() { \n    ok(true, 'controllers/profile/index.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/controllers/tags/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/tags');\n  test('controllers/tags/index.js should pass jshint', function() { \n    ok(true, 'controllers/tags/index.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/controllers/tags/thing-requirement-level-detail.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/tags');\n  test('controllers/tags/thing-requirement-level-detail.js should pass jshint', function() { \n    ok(true, 'controllers/tags/thing-requirement-level-detail.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/controllers/tags/upload.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/tags');\n  test('controllers/tags/upload.js should pass jshint', function() { \n    ok(true, 'controllers/tags/upload.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/controllers/things/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/things');\n  test('controllers/things/index.js should pass jshint', function() { \n    ok(true, 'controllers/things/index.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/controllers/user-check-list/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/user-check-list');\n  test('controllers/user-check-list/index.js should pass jshint', function() { \n    ok(true, 'controllers/user-check-list/index.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/helpers/can-do.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/can-do.js should pass jshint', function() { \n    ok(true, 'helpers/can-do.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/helpers/capitalize-string.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/capitalize-string.js should pass jshint', function() { \n    ok(true, 'helpers/capitalize-string.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/helpers/field-detail.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/field-detail.js should pass jshint', function() { \n    ok(true, 'helpers/field-detail.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/helpers/flash-messages.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/flash-messages.js should pass jshint', function() { \n    ok(true, 'helpers/flash-messages.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/helpers/pluralize-string.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/pluralize-string.js should pass jshint', function() { \n    ok(true, 'helpers/pluralize-string.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/helpers/resolver', ['exports', 'ember/resolver', 'morgana/config/environment'], function (exports, Resolver, config) {\n\n  'use strict';\n\n  var resolver = Resolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n\n});","define('morgana/tests/helpers/resolver.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/resolver.js should pass jshint', function() { \n    ok(true, 'helpers/resolver.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/helpers/start-app', ['exports', 'ember', 'morgana/app', 'morgana/router', 'morgana/config/environment'], function (exports, Ember, Application, Router, config) {\n\n  'use strict';\n\n  function startApp(attrs) {\n    var application;\n\n    var attributes = Ember['default'].merge({}, config['default'].APP);\n    attributes = Ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    Ember['default'].run(function() {\n      application = Application['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n  exports['default'] = startApp;\n\n});","define('morgana/tests/helpers/start-app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/start-app.js should pass jshint', function() { \n    ok(true, 'helpers/start-app.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/helpers/text-with-errors.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/text-with-errors.js should pass jshint', function() { \n    ok(true, 'helpers/text-with-errors.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/initializers/flash-messages.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - initializers');\n  test('initializers/flash-messages.js should pass jshint', function() { \n    ok(true, 'initializers/flash-messages.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/initializers/myax.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - initializers');\n  test('initializers/myax.js should pass jshint', function() { \n    ok(true, 'initializers/myax.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/initializers/server-side-model.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - initializers');\n  test('initializers/server-side-model.js should pass jshint', function() { \n    ok(true, 'initializers/server-side-model.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/mixins/django-rest-file-adapter.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - mixins');\n  test('mixins/django-rest-file-adapter.js should pass jshint', function() { \n    ok(true, 'mixins/django-rest-file-adapter.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/mixins/flash-message.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - mixins');\n  test('mixins/flash-message.js should pass jshint', function() { \n    ok(true, 'mixins/flash-message.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/mixins/flash-messages-route.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - mixins');\n  test('mixins/flash-messages-route.js should pass jshint', function() { \n    ok(true, 'mixins/flash-messages-route.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/mixins/jira-report.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - mixins');\n  test('mixins/jira-report.js should pass jshint', function() { \n    ok(true, 'mixins/jira-report.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/mixins/loading-stages-controller.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - mixins');\n  test('mixins/loading-stages-controller.js should pass jshint', function() { \n    ok(true, 'mixins/loading-stages-controller.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/mixins/loading-stages-route.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - mixins');\n  test('mixins/loading-stages-route.js should pass jshint', function() { \n    ok(true, 'mixins/loading-stages-route.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/mixins/pagination.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - mixins');\n  test('mixins/pagination.js should pass jshint', function() { \n    ok(true, 'mixins/pagination.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/mixins/permissions.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - mixins');\n  test('mixins/permissions.js should pass jshint', function() { \n    ok(true, 'mixins/permissions.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/mixins/server-side-field-error.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - mixins');\n  test('mixins/server-side-field-error.js should pass jshint', function() { \n    ok(true, 'mixins/server-side-field-error.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/mixins/server-side-model-adapter.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - mixins');\n  test('mixins/server-side-model-adapter.js should pass jshint', function() { \n    ok(true, 'mixins/server-side-model-adapter.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/mixins/server-side-model-fields.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - mixins');\n  test('mixins/server-side-model-fields.js should pass jshint', function() { \n    ok(true, 'mixins/server-side-model-fields.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/mixins/server-side-model-serializer.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - mixins');\n  test('mixins/server-side-model-serializer.js should pass jshint', function() { \n    ok(true, 'mixins/server-side-model-serializer.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/mixins/server-side-model-store.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - mixins');\n  test('mixins/server-side-model-store.js should pass jshint', function() { \n    ok(true, 'mixins/server-side-model-store.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/models/bulk-upload-general.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/bulk-upload-general.js should pass jshint', function() { \n    ok(true, 'models/bulk-upload-general.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/models/bulk-upload.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/bulk-upload.js should pass jshint', function() { \n    ok(true, 'models/bulk-upload.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/models/category.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/category.js should pass jshint', function() { \n    ok(true, 'models/category.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/models/content-project-export.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/content-project-export.js should pass jshint', function() { \n    ok(true, 'models/content-project-export.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/models/content-project.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/content-project.js should pass jshint', function() { \n    ok(true, 'models/content-project.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/models/content-request.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/content-request.js should pass jshint', function() { \n    ok(true, 'models/content-request.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/models/credit-history.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/credit-history.js should pass jshint', function() { \n    ok(true, 'models/credit-history.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/models/engine-configuration-status.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/engine-configuration-status.js should pass jshint', function() { \n    ok(true, 'models/engine-configuration-status.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/models/engine-configuration.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/engine-configuration.js should pass jshint', function() { \n    ok(true, 'models/engine-configuration.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/models/engine-configurations-contact.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/engine-configurations-contact.js should pass jshint', function() { \n    ok(true, 'models/engine-configurations-contact.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/models/engine-content-type-category.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/engine-content-type-category.js should pass jshint', function() { \n    ok(true, 'models/engine-content-type-category.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/models/eventlog.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/eventlog.js should pass jshint', function() { \n    ok(true, 'models/eventlog.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/models/field-requirement-level-data.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/field-requirement-level-data.js should pass jshint', function() { \n    ok(true, 'models/field-requirement-level-data.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/models/image-request.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/image-request.js should pass jshint', function() { \n    ok(true, 'models/image-request.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/models/invoice.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/invoice.js should pass jshint', function() { \n    ok(true, 'models/invoice.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/models/language.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/language.js should pass jshint', function() { \n    ok(true, 'models/language.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/models/model-field-choice.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/model-field-choice.js should pass jshint', function() { \n    ok(true, 'models/model-field-choice.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/models/requirement-level-status.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/requirement-level-status.js should pass jshint', function() { \n    ok(true, 'models/requirement-level-status.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/models/tag.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/tag.js should pass jshint', function() { \n    ok(true, 'models/tag.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/models/text-request.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/text-request.js should pass jshint', function() { \n    ok(true, 'models/text-request.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/models/thing.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/thing.js should pass jshint', function() { \n    ok(true, 'models/thing.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/models/user-check-list.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/user-check-list.js should pass jshint', function() { \n    ok(true, 'models/user-check-list.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/models/user.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/user.js should pass jshint', function() { \n    ok(true, 'models/user.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/router.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('router.js should pass jshint', function() { \n    ok(true, 'router.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/routes/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/application.js should pass jshint', function() { \n    ok(true, 'routes/application.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/routes/content-project.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/content-project.js should pass jshint', function() { \n    ok(true, 'routes/content-project.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/routes/content-project/bulk-upload.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/content-project');\n  test('routes/content-project/bulk-upload.js should pass jshint', function() { \n    ok(true, 'routes/content-project/bulk-upload.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/routes/content-project/bulk-upload/upload.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/content-project/bulk-upload');\n  test('routes/content-project/bulk-upload/upload.js should pass jshint', function() { \n    ok(true, 'routes/content-project/bulk-upload/upload.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/routes/content-project/content-project-exports.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/content-project');\n  test('routes/content-project/content-project-exports.js should pass jshint', function() { \n    ok(true, 'routes/content-project/content-project-exports.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/routes/content-project/content-project-exports/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/content-project/content-project-exports');\n  test('routes/content-project/content-project-exports/index.js should pass jshint', function() { \n    ok(true, 'routes/content-project/content-project-exports/index.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/routes/content-project/delete.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/content-project');\n  test('routes/content-project/delete.js should pass jshint', function() { \n    ok(true, 'routes/content-project/delete.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/routes/content-project/edit.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/content-project');\n  test('routes/content-project/edit.js should pass jshint', function() { \n    ok(true, 'routes/content-project/edit.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/routes/content-project/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/content-project');\n  test('routes/content-project/index.js should pass jshint', function() { \n    ok(true, 'routes/content-project/index.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/routes/content-project/thing-type.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/content-project');\n  test('routes/content-project/thing-type.js should pass jshint', function() { \n    ok(true, 'routes/content-project/thing-type.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/routes/content-project/thing-type/thing-new.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/content-project/thing-type');\n  test('routes/content-project/thing-type/thing-new.js should pass jshint', function() { \n    ok(true, 'routes/content-project/thing-type/thing-new.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/routes/content-project/thing-type/thing.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/content-project/thing-type');\n  test('routes/content-project/thing-type/thing.js should pass jshint', function() { \n    ok(true, 'routes/content-project/thing-type/thing.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/routes/content-project/thing-type/thing/delete.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/content-project/thing-type/thing');\n  test('routes/content-project/thing-type/thing/delete.js should pass jshint', function() { \n    ok(true, 'routes/content-project/thing-type/thing/delete.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/routes/content-project/thing-type/thing/edit.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/content-project/thing-type/thing');\n  test('routes/content-project/thing-type/thing/edit.js should pass jshint', function() { \n    ok(true, 'routes/content-project/thing-type/thing/edit.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/routes/content-project/thing-type/thing/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/content-project/thing-type/thing');\n  test('routes/content-project/thing-type/thing/index.js should pass jshint', function() { \n    ok(true, 'routes/content-project/thing-type/thing/index.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/routes/content-projects.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/content-projects.js should pass jshint', function() { \n    ok(true, 'routes/content-projects.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/routes/credits/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/credits');\n  test('routes/credits/index.js should pass jshint', function() { \n    ok(true, 'routes/credits/index.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/routes/download-exports.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/download-exports.js should pass jshint', function() { \n    ok(true, 'routes/download-exports.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/routes/download-exports/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/download-exports');\n  test('routes/download-exports/index.js should pass jshint', function() { \n    ok(true, 'routes/download-exports/index.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/routes/engine-configuration.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/engine-configuration.js should pass jshint', function() { \n    ok(true, 'routes/engine-configuration.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/routes/engine-configuration/content-project.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/engine-configuration');\n  test('routes/engine-configuration/content-project.js should pass jshint', function() { \n    ok(true, 'routes/engine-configuration/content-project.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/routes/engine-configuration/content-project/new.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/engine-configuration/content-project');\n  test('routes/engine-configuration/content-project/new.js should pass jshint', function() { \n    ok(true, 'routes/engine-configuration/content-project/new.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/routes/engine-configuration/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/engine-configuration');\n  test('routes/engine-configuration/index.js should pass jshint', function() { \n    ok(true, 'routes/engine-configuration/index.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/routes/engine-configurations.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/engine-configurations.js should pass jshint', function() { \n    ok(true, 'routes/engine-configurations.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/routes/engine-configurations/contact.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/engine-configurations');\n  test('routes/engine-configurations/contact.js should pass jshint', function() { \n    ok(true, 'routes/engine-configurations/contact.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/routes/engine-configurations/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/engine-configurations');\n  test('routes/engine-configurations/index.js should pass jshint', function() { \n    ok(true, 'routes/engine-configurations/index.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/routes/eventlog.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/eventlog.js should pass jshint', function() { \n    ok(true, 'routes/eventlog.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/routes/eventlog/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/eventlog');\n  test('routes/eventlog/index.js should pass jshint', function() { \n    ok(true, 'routes/eventlog/index.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/routes/home.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/home.js should pass jshint', function() { \n    ok(true, 'routes/home.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/routes/home/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/home');\n  test('routes/home/index.js should pass jshint', function() { \n    ok(true, 'routes/home/index.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/routes/login.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/login.js should pass jshint', function() { \n    ok(true, 'routes/login.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/routes/profile.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/profile.js should pass jshint', function() { \n    ok(true, 'routes/profile.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/routes/profile/edit-company.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/profile');\n  test('routes/profile/edit-company.js should pass jshint', function() { \n    ok(true, 'routes/profile/edit-company.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/routes/profile/edit-user.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/profile');\n  test('routes/profile/edit-user.js should pass jshint', function() { \n    ok(true, 'routes/profile/edit-user.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/routes/profile/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/profile');\n  test('routes/profile/index.js should pass jshint', function() { \n    ok(true, 'routes/profile/index.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/routes/tags.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/tags.js should pass jshint', function() { \n    ok(true, 'routes/tags.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/routes/tags/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/tags');\n  test('routes/tags/index.js should pass jshint', function() { \n    ok(true, 'routes/tags/index.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/routes/tags/upload.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/tags');\n  test('routes/tags/upload.js should pass jshint', function() { \n    ok(true, 'routes/tags/upload.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/serializers/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - serializers');\n  test('serializers/application.js should pass jshint', function() { \n    ok(true, 'serializers/application.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/serializers/content-request.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - serializers');\n  test('serializers/content-request.js should pass jshint', function() { \n    ok(true, 'serializers/content-request.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/serializers/eventlog.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - serializers');\n  test('serializers/eventlog.js should pass jshint', function() { \n    ok(true, 'serializers/eventlog.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/serializers/image-request.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - serializers');\n  test('serializers/image-request.js should pass jshint', function() { \n    ok(true, 'serializers/image-request.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/serializers/text-request.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - serializers');\n  test('serializers/text-request.js should pass jshint', function() { \n    ok(true, 'serializers/text-request.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/serializers/thing.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - serializers');\n  test('serializers/thing.js should pass jshint', function() { \n    ok(true, 'serializers/thing.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/serializers/user-check-list.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - serializers');\n  test('serializers/user-check-list.js should pass jshint', function() { \n    ok(true, 'serializers/user-check-list.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/store.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('store.js should pass jshint', function() { \n    ok(true, 'store.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/test-helper', ['morgana/tests/helpers/resolver', 'ember-qunit'], function (resolver, ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.setResolver(resolver['default']);\n\n});","define('morgana/tests/test-helper.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('test-helper.js should pass jshint', function() { \n    ok(true, 'test-helper.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/transforms/json-string-parsed.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - transforms');\n  test('transforms/json-string-parsed.js should pass jshint', function() { \n    ok(true, 'transforms/json-string-parsed.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/transforms/upload-file.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - transforms');\n  test('transforms/upload-file.js should pass jshint', function() { \n    ok(true, 'transforms/upload-file.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/adapters/application-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('adapter:application', 'ApplicationAdapter', {\n    // Specify the other units that are required for this test.\n    // needs: ['serializer:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var adapter = this.subject();\n    assert.ok(adapter);\n  });\n\n});","define('morgana/tests/unit/adapters/application-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/adapters');\n  test('unit/adapters/application-test.js should pass jshint', function() { \n    ok(true, 'unit/adapters/application-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/adapters/ax-company-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('adapter:ax-company', 'AxCompanyAdapter', {\n    // Specify the other units that are required for this test.\n    // needs: ['serializer:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var adapter = this.subject();\n    assert.ok(adapter);\n  });\n\n});","define('morgana/tests/unit/adapters/ax-company-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/adapters');\n  test('unit/adapters/ax-company-test.js should pass jshint', function() { \n    ok(true, 'unit/adapters/ax-company-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/adapters/bulk-upload-general-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('adapter:bulk-upload-general', 'BulkUploadGeneralAdapter', {\n    // Specify the other units that are required for this test.\n    // needs: ['serializer:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var adapter = this.subject();\n    assert.ok(adapter);\n  });\n\n});","define('morgana/tests/unit/adapters/bulk-upload-general-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/adapters');\n  test('unit/adapters/bulk-upload-general-test.js should pass jshint', function() { \n    ok(true, 'unit/adapters/bulk-upload-general-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/adapters/bulk-upload-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('adapter:bulk-upload', 'BulkUploadAdapter', {\n    // Specify the other units that are required for this test.\n    // needs: ['serializer:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var adapter = this.subject();\n    assert.ok(adapter);\n  });\n\n});","define('morgana/tests/unit/adapters/bulk-upload-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/adapters');\n  test('unit/adapters/bulk-upload-test.js should pass jshint', function() { \n    ok(true, 'unit/adapters/bulk-upload-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/adapters/content-project-export-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('adapter:content-project-export', 'ContentProjectExportAdapter', {\n    // Specify the other units that are required for this test.\n    // needs: ['serializer:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var adapter = this.subject();\n    assert.ok(adapter);\n  });\n\n});","define('morgana/tests/unit/adapters/content-project-export-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/adapters');\n  test('unit/adapters/content-project-export-test.js should pass jshint', function() { \n    ok(true, 'unit/adapters/content-project-export-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/adapters/content-request-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('adapter:content-request', 'ContentRequestAdapter', {\n    // Specify the other units that are required for this test.\n    // needs: ['serializer:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var adapter = this.subject();\n    assert.ok(adapter);\n  });\n\n});","define('morgana/tests/unit/adapters/content-request-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/adapters');\n  test('unit/adapters/content-request-test.js should pass jshint', function() { \n    ok(true, 'unit/adapters/content-request-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/adapters/django-rest-file-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('adapter:django-rest-file', 'DjangoRestFileAdapter', {\n    // Specify the other units that are required for this test.\n    // needs: ['serializer:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var adapter = this.subject();\n    assert.ok(adapter);\n  });\n\n});","define('morgana/tests/unit/adapters/django-rest-file-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/adapters');\n  test('unit/adapters/django-rest-file-test.js should pass jshint', function() { \n    ok(true, 'unit/adapters/django-rest-file-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/adapters/image-request-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('adapter:image-request', 'ImageRequestAdapter', {\n    // Specify the other units that are required for this test.\n    // needs: ['serializer:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var adapter = this.subject();\n    assert.ok(adapter);\n  });\n\n});","define('morgana/tests/unit/adapters/image-request-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/adapters');\n  test('unit/adapters/image-request-test.js should pass jshint', function() { \n    ok(true, 'unit/adapters/image-request-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/adapters/text-request-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('adapter:text-request', 'TextRequestAdapter', {\n    // Specify the other units that are required for this test.\n    // needs: ['serializer:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var adapter = this.subject();\n    assert.ok(adapter);\n  });\n\n});","define('morgana/tests/unit/adapters/text-request-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/adapters');\n  test('unit/adapters/text-request-test.js should pass jshint', function() { \n    ok(true, 'unit/adapters/text-request-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/adapters/thing-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('adapter:thing', 'ThingAdapter', {\n    // Specify the other units that are required for this test.\n    // needs: ['serializer:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var adapter = this.subject();\n    assert.ok(adapter);\n  });\n\n});","define('morgana/tests/unit/adapters/thing-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/adapters');\n  test('unit/adapters/thing-test.js should pass jshint', function() { \n    ok(true, 'unit/adapters/thing-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/adapters/user-check-list-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('adapter:user-check-list', 'UserCheckListAdapter', {\n    // Specify the other units that are required for this test.\n    // needs: ['serializer:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var adapter = this.subject();\n    assert.ok(adapter);\n  });\n\n});","define('morgana/tests/unit/adapters/user-check-list-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/adapters');\n  test('unit/adapters/user-check-list-test.js should pass jshint', function() { \n    ok(true, 'unit/adapters/user-check-list-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/adapters/user-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('adapter:user', 'UserAdapter', {\n    // Specify the other units that are required for this test.\n    // needs: ['serializer:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var adapter = this.subject();\n    assert.ok(adapter);\n  });\n\n});","define('morgana/tests/unit/adapters/user-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/adapters');\n  test('unit/adapters/user-test.js should pass jshint', function() { \n    ok(true, 'unit/adapters/user-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/components/button-with-loader-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('button-with-loader', 'ButtonWithLoaderComponent', {\n    // specify the other units that are required for this test\n    // needs: ['component:foo', 'helper:bar']\n  });\n\n  ember_qunit.test('it renders', function(assert) {\n    assert.expect(2);\n\n    // creates the component instance\n    var component = this.subject();\n    assert.equal(component._state, 'preRender');\n\n    // appends the component to the page\n    this.append();\n    assert.equal(component._state, 'inDOM');\n  });\n\n});","define('morgana/tests/unit/components/button-with-loader-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/components');\n  test('unit/components/button-with-loader-test.js should pass jshint', function() { \n    ok(true, 'unit/components/button-with-loader-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/controllers/application-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:application', 'ApplicationController', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n});","define('morgana/tests/unit/controllers/application-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/application-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/application-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/controllers/content-project/bulk-upload/upload-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:content-project/bulk-upload/upload', 'ContentProjectBulkUploadUploadController', {\n    // Specify the other units that are required for this test.\n      needs: ['controller:flash-messages']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n});","define('morgana/tests/unit/controllers/content-project/bulk-upload/upload-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers/content-project/bulk-upload');\n  test('unit/controllers/content-project/bulk-upload/upload-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/content-project/bulk-upload/upload-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/controllers/content-project/content-project-exports/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:content-project/content-project-exports/index', 'ContentProjectContentProjectExportsIndexController', {\n    // Specify the other units that are required for this test.\n    needs: ['controller:application']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n});","define('morgana/tests/unit/controllers/content-project/content-project-exports/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers/content-project/content-project-exports');\n  test('unit/controllers/content-project/content-project-exports/index-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/content-project/content-project-exports/index-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/controllers/content-project/delete-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:content-project/delete', 'ContentProjectDeleteController', {\n    // Specify the other units that are required for this test.\n    needs: ['controller:flash-messages']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n});","define('morgana/tests/unit/controllers/content-project/delete-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers/content-project');\n  test('unit/controllers/content-project/delete-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/content-project/delete-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/controllers/content-project/edit-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:content-project/edit', 'ContentProjectEditController', {\n    // Specify the other units that are required for this test.\n    needs: ['controller:flash-messages']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n});","define('morgana/tests/unit/controllers/content-project/edit-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers/content-project');\n  test('unit/controllers/content-project/edit-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/content-project/edit-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/controllers/content-project/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:content-project/index', 'ContentProjectIndexController', {\n    // Specify the other units that are required for this test.\n    needs: ['controller:flash-messages']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n});","define('morgana/tests/unit/controllers/content-project/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers/content-project');\n  test('unit/controllers/content-project/index-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/content-project/index-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/controllers/content-project/thing-type/thing-new-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:content-project/thing-type/thing-new', 'ContentProjectThingTypeThingNewController', {\n    // Specify the other units that are required for this test.\n    needs: ['controller:flash-messages']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n});","define('morgana/tests/unit/controllers/content-project/thing-type/thing-new-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers/content-project/thing-type');\n  test('unit/controllers/content-project/thing-type/thing-new-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/content-project/thing-type/thing-new-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/controllers/content-project/thing-type/thing/delete-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:content-project/thing-type/thing/delete', 'ContentProjectThingTypeThingDeleteController', {\n    // Specify the other units that are required for this test.\n     needs: ['controller:flash-messages']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n});","define('morgana/tests/unit/controllers/content-project/thing-type/thing/delete-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers/content-project/thing-type/thing');\n  test('unit/controllers/content-project/thing-type/thing/delete-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/content-project/thing-type/thing/delete-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/controllers/content-project/thing-type/thing/edit-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:content-project/thing-type/thing/edit', 'ContentProjectThingTypeThingEditController', {\n    // Specify the other units that are required for this test.\n    needs: ['controller:flash-messages']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n});","define('morgana/tests/unit/controllers/content-project/thing-type/thing/edit-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers/content-project/thing-type/thing');\n  test('unit/controllers/content-project/thing-type/thing/edit-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/content-project/thing-type/thing/edit-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/controllers/content-project/thing-type/thing/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:content-project/thing-type/thing/index', 'ContentProjectThingTypeThingIndexController', {\n    // Specify the other units that are required for this test.\n    needs: ['controller:flash-messages', 'controller:application']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n});","define('morgana/tests/unit/controllers/content-project/thing-type/thing/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers/content-project/thing-type/thing');\n  test('unit/controllers/content-project/thing-type/thing/index-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/content-project/thing-type/thing/index-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/controllers/content-project/thing-type/thing/server-side-model-field-detail-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:content-project/thing-type/thing/server-side-model-field-detail', 'ContentProjectThingTypeThingServerSideModelFieldDetailController', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n});","define('morgana/tests/unit/controllers/content-project/thing-type/thing/server-side-model-field-detail-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers/content-project/thing-type/thing');\n  test('unit/controllers/content-project/thing-type/thing/server-side-model-field-detail-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/content-project/thing-type/thing/server-side-model-field-detail-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/controllers/content-projects/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:content-projects/index', 'ContentProjectsIndexController', {\n    // Specify the other units that are required for this test.\n    needs: ['controller:application']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n});","define('morgana/tests/unit/controllers/content-projects/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers/content-projects');\n  test('unit/controllers/content-projects/index-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/content-projects/index-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/controllers/credits/credit-history-element-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:credits/credit-history-element', 'CreditsCreditHistoryElementController', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n});","define('morgana/tests/unit/controllers/credits/credit-history-element-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers/credits');\n  test('unit/controllers/credits/credit-history-element-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/credits/credit-history-element-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/controllers/credits/credit-history-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:credits/credit-history', 'CreditsCreditHistoryController', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n});","define('morgana/tests/unit/controllers/credits/credit-history-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers/credits');\n  test('unit/controllers/credits/credit-history-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/credits/credit-history-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/controllers/credits/invoices-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:credits/invoices', 'CreditsInvoicesController', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n});","define('morgana/tests/unit/controllers/credits/invoices-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers/credits');\n  test('unit/controllers/credits/invoices-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/credits/invoices-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/controllers/download-exports/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:download-exports/index', 'DownloadExportsIndexController', {\n    // Specify the other units that are required for this test.\n    needs: ['controller:application']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n});","define('morgana/tests/unit/controllers/download-exports/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers/download-exports');\n  test('unit/controllers/download-exports/index-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/download-exports/index-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/controllers/engine-configuration/content-project/new-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:engine-configuration/content-project/new', 'EngineConfigurationContentProjectNewController', {\n    // Specify the other units that are required for this test.\n    needs: ['controller:flash-messages']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n});","define('morgana/tests/unit/controllers/engine-configuration/content-project/new-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers/engine-configuration/content-project');\n  test('unit/controllers/engine-configuration/content-project/new-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/engine-configuration/content-project/new-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/controllers/engine-configuration/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:engine-configuration/index', 'EngineConfigurationIndexController', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n});","define('morgana/tests/unit/controllers/engine-configuration/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers/engine-configuration');\n  test('unit/controllers/engine-configuration/index-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/engine-configuration/index-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/controllers/engine-configurations/contact-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:engine-configurations/contact', 'EngineConfigurationsContactController', {\n    // Specify the other units that are required for this test.\n    needs: ['controller:flash-messages']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n});","define('morgana/tests/unit/controllers/engine-configurations/contact-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers/engine-configurations');\n  test('unit/controllers/engine-configurations/contact-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/engine-configurations/contact-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/controllers/engine-configurations/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:engine-configurations/index', 'EngineConfigurationsIndexController', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n});","define('morgana/tests/unit/controllers/engine-configurations/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers/engine-configurations');\n  test('unit/controllers/engine-configurations/index-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/engine-configurations/index-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/controllers/eventlog/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:eventlog/index', 'EventlogIndexController', {\n    // Specify the other units that are required for this test.\n    needs: ['controller:application']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n});","define('morgana/tests/unit/controllers/eventlog/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers/eventlog');\n  test('unit/controllers/eventlog/index-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/eventlog/index-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/controllers/flash-messages-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:flash-messages', 'FlashMessagesController', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n});","define('morgana/tests/unit/controllers/flash-messages-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/flash-messages-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/flash-messages-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/controllers/home/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:home/index', 'HomeIndexController', {\n    // Specify the other units that are required for this test.\n    needs: ['controller:application']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n});","define('morgana/tests/unit/controllers/home/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers/home');\n  test('unit/controllers/home/index-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/home/index-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/controllers/login-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:login', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n});","define('morgana/tests/unit/controllers/login-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/login-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/login-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/controllers/navigation-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:navigation', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n});","define('morgana/tests/unit/controllers/navigation-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/navigation-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/navigation-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/controllers/profile/edit-company-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:profile/edit-company', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n   needs: ['controller:flash-messages']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n});","define('morgana/tests/unit/controllers/profile/edit-company-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers/profile');\n  test('unit/controllers/profile/edit-company-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/profile/edit-company-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/controllers/profile/edit-user-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:profile/edit-user', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n      needs: ['controller:flash-messages']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n});","define('morgana/tests/unit/controllers/profile/edit-user-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers/profile');\n  test('unit/controllers/profile/edit-user-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/profile/edit-user-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/controllers/profile/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:profile/index', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n});","define('morgana/tests/unit/controllers/profile/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers/profile');\n  test('unit/controllers/profile/index-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/profile/index-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/controllers/tags/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:tags/index', 'TagsIndexController', {\n    // Specify the other units that are required for this test.\n    needs: ['controller:application', 'controller:flash-messages']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n});","define('morgana/tests/unit/controllers/tags/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers/tags');\n  test('unit/controllers/tags/index-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/tags/index-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/controllers/tags/thing-requirement-level-detail-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:tags/thing-requirement-level-detail', 'ThingRequirementLevelDetailController', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n});","define('morgana/tests/unit/controllers/tags/thing-requirement-level-detail-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers/tags');\n  test('unit/controllers/tags/thing-requirement-level-detail-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/tags/thing-requirement-level-detail-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/controllers/tags/upload-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:tags/upload', 'TagsUploadController', {\n    // Specify the other units that are required for this test.\n    needs: ['controller:flash-messages']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n});","define('morgana/tests/unit/controllers/tags/upload-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers/tags');\n  test('unit/controllers/tags/upload-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/tags/upload-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/controllers/things/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:things/index', 'ThingsIndexController', {\n    // Specify the other units that are required for this test.\n    needs: ['controller:application']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n});","define('morgana/tests/unit/controllers/things/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers/things');\n  test('unit/controllers/things/index-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/things/index-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/controllers/user-check-list/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:user-check-list/index', 'UserCheckListIndexController', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n});","define('morgana/tests/unit/controllers/user-check-list/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers/user-check-list');\n  test('unit/controllers/user-check-list/index-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/user-check-list/index-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/helpers/can-do-test', ['morgana/helpers/can-do', 'qunit'], function (can_do, qunit) {\n\n  'use strict';\n\n  qunit.module('CanDoHelper');\n\n  // Replace this with your real tests.\n  qunit.test('it works', function(assert) {\n    var result = can_do.canDo(42);\n    assert.ok(result);\n  });\n\n});","define('morgana/tests/unit/helpers/can-do-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/helpers');\n  test('unit/helpers/can-do-test.js should pass jshint', function() { \n    ok(true, 'unit/helpers/can-do-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/helpers/capitalize-string-test', ['morgana/helpers/capitalize-string', 'qunit'], function (capitalize_string, qunit) {\n\n  'use strict';\n\n  qunit.module('CapitalizeStringHelper');\n\n  // Replace this with your real tests.\n  qunit.test('it works', function(assert) {\n    var result = capitalize_string.capitalizeString('hello');\n    assert.ok(result === 'Hello');\n  });\n\n});","define('morgana/tests/unit/helpers/capitalize-string-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/helpers');\n  test('unit/helpers/capitalize-string-test.js should pass jshint', function() { \n    ok(true, 'unit/helpers/capitalize-string-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/helpers/field-detail-test', ['morgana/helpers/field-detail', 'qunit'], function (field_detail, qunit) {\n\n  'use strict';\n\n  qunit.module('FieldDetailHelper');\n\n  // Replace this with your real tests.\n  qunit.test('it works', function(assert) {\n      var options = {\n          hash: {\n              fields: [],\n              model: null\n          }\n      },\n      result = field_detail.fieldDetail(options);\n\n      assert.ok(result);\n  });\n\n});","define('morgana/tests/unit/helpers/field-detail-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/helpers');\n  test('unit/helpers/field-detail-test.js should pass jshint', function() { \n    ok(true, 'unit/helpers/field-detail-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/helpers/flash-messages-test', ['morgana/helpers/flash-messages', 'qunit'], function (flash_messages, qunit) {\n\n  'use strict';\n\n  qunit.module('FlashMessagesHelper');\n\n  // Replace this with your real tests.\n  qunit.test('it works', function(assert) {\n    var result = flash_messages.flashMessages(42);\n    assert.ok(result);\n  });\n\n});","define('morgana/tests/unit/helpers/flash-messages-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/helpers');\n  test('unit/helpers/flash-messages-test.js should pass jshint', function() { \n    ok(true, 'unit/helpers/flash-messages-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/helpers/text-with-errors-test', ['morgana/helpers/text-with-errors', 'qunit'], function (text_with_errors, qunit) {\n\n    'use strict';\n\n    qunit.module('TextWithErrorsHelper');\n\n    // Replace this with your real tests.\n    qunit.test('it works', function (assert) {\n        var text = 'Text',\n            options = {\n                hash: {\n\n                }\n            },\n            result = text_with_errors.textWithErrors(text, options);\n        assert.ok(result);\n    });\n\n});","define('morgana/tests/unit/helpers/text-with-errors-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/helpers');\n  test('unit/helpers/text-with-errors-test.js should pass jshint', function() { \n    ok(true, 'unit/helpers/text-with-errors-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/initializers/flash-messages-test', ['ember', 'morgana/initializers/flash-messages', 'qunit'], function (Ember, flash_messages, qunit) {\n\n  'use strict';\n\n  var container, application;\n\n  qunit.module('FlashMessagesInitializer', {\n    setup: function() {\n      Ember['default'].run(function() {\n        container = new Ember['default'].Container();\n        application = Ember['default'].Application.create();\n        application.deferReadiness();\n      });\n    }\n  });\n\n  // Replace this with your real tests.\n  qunit.test('it works', function(assert) {\n    flash_messages.initialize(container, application);\n\n    // you would normally confirm the results of the initializer here\n    assert.ok(true);\n  });\n\n});","define('morgana/tests/unit/initializers/flash-messages-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/initializers');\n  test('unit/initializers/flash-messages-test.js should pass jshint', function() { \n    ok(true, 'unit/initializers/flash-messages-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/initializers/myax-test', ['ember', 'morgana/initializers/myax', 'qunit'], function (Ember, myax, qunit) {\n\n  'use strict';\n\n  var container, application;\n\n  qunit.module('MyaxInitializer', {\n    beforeEach: function() {\n      Ember['default'].run(function() {\n        application = Ember['default'].Application.create();\n        container = application.__container__;\n        application.deferReadiness();\n      });\n    }\n  });\n\n  // Replace this with your real tests.\n  qunit.test('it works', function(assert) {\n    myax.initialize(container, application);\n\n    // you would normally confirm the results of the initializer here\n    assert.ok(true);\n  });\n\n});","define('morgana/tests/unit/initializers/myax-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/initializers');\n  test('unit/initializers/myax-test.js should pass jshint', function() { \n    ok(true, 'unit/initializers/myax-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/initializers/server-side-model-test', ['ember', 'morgana/initializers/server-side-model', 'qunit'], function (Ember, server_side_model, qunit) {\n\n  'use strict';\n\n  var container, application;\n\n  qunit.module('ServerSideModelInitializer', {\n    setup: function() {\n      Ember['default'].run(function() {\n        container = new Ember['default'].Container();\n        application = Ember['default'].Application.create();\n        application.deferReadiness();\n      });\n    }\n  });\n\n  // Replace this with your real tests.\n  qunit.test('it works', function(assert) {\n    server_side_model.initialize(container, application);\n\n    // you would normally confirm the results of the initializer here\n    assert.ok(true);\n  });\n\n});","define('morgana/tests/unit/initializers/server-side-model-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/initializers');\n  test('unit/initializers/server-side-model-test.js should pass jshint', function() { \n    ok(true, 'unit/initializers/server-side-model-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/mixins/django-rest-file-adapter-test', ['ember', 'morgana/mixins/django-rest-file-adapter', 'qunit'], function (Ember, DjangoRestFileAdapterMixin, qunit) {\n\n  'use strict';\n\n  qunit.module('DjangoRestFileAdapterMixin');\n\n  // Replace this with your real tests.\n  qunit.test('it works', function(assert) {\n    var DjangoRestFileAdapterObject = Ember['default'].Object.extend(DjangoRestFileAdapterMixin['default']);\n    var subject = DjangoRestFileAdapterObject.create();\n    assert.ok(subject);\n  });\n\n});","define('morgana/tests/unit/mixins/django-rest-file-adapter-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/mixins');\n  test('unit/mixins/django-rest-file-adapter-test.js should pass jshint', function() { \n    ok(true, 'unit/mixins/django-rest-file-adapter-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/mixins/flash-message-test', ['ember', 'morgana/mixins/flash-message', 'qunit'], function (Ember, FlashMessageMixin, qunit) {\n\n  'use strict';\n\n  qunit.module('FlashMessageMixin');\n\n  // Replace this with your real tests.\n  qunit.test('it works', function(assert) {\n    var FlashMessageObject = Ember['default'].Object.extend(FlashMessageMixin['default']);\n    var subject = FlashMessageObject.create();\n    assert.ok(subject);\n  });\n\n});","define('morgana/tests/unit/mixins/flash-message-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/mixins');\n  test('unit/mixins/flash-message-test.js should pass jshint', function() { \n    ok(true, 'unit/mixins/flash-message-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/mixins/flash-messages-route-test', ['ember', 'morgana/mixins/flash-messages-route', 'qunit'], function (Ember, FlashMessagesRouteMixin, qunit) {\n\n  'use strict';\n\n  qunit.module('FlashMessagesRouteMixin');\n\n  // Replace this with your real tests.\n  qunit.test('it works', function(assert) {\n    var FlashMessagesRouteObject = Ember['default'].Object.extend(FlashMessagesRouteMixin['default']);\n    var subject = FlashMessagesRouteObject.create();\n    assert.ok(subject);\n  });\n\n});","define('morgana/tests/unit/mixins/flash-messages-route-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/mixins');\n  test('unit/mixins/flash-messages-route-test.js should pass jshint', function() { \n    ok(true, 'unit/mixins/flash-messages-route-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/mixins/jira-report-test', ['ember', 'morgana/mixins/jira-report', 'qunit'], function (Ember, JiraReportMixin, qunit) {\n\n  'use strict';\n\n  qunit.module('JiraReportMixin');\n\n  // Replace this with your real tests.\n  qunit.test('it works', function(assert) {\n    var JiraReportObject = Ember['default'].Object.extend(JiraReportMixin['default']);\n    var subject = JiraReportObject.create();\n    assert.ok(subject);\n  });\n\n});","define('morgana/tests/unit/mixins/jira-report-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/mixins');\n  test('unit/mixins/jira-report-test.js should pass jshint', function() { \n    ok(true, 'unit/mixins/jira-report-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/mixins/loading-stages-controller-test', ['ember', 'morgana/mixins/loading-stages-controller', 'qunit'], function (Ember, LoadingStagesControllerMixin, qunit) {\n\n  'use strict';\n\n  qunit.module('LoadingStagesControllerMixin');\n\n  // Replace this with your real tests.\n  qunit.test('it works', function(assert) {\n    var LoadingStagesControllerObject = Ember['default'].Object.extend(LoadingStagesControllerMixin['default']);\n    var subject = LoadingStagesControllerObject.create();\n    assert.ok(subject);\n  });\n\n});","define('morgana/tests/unit/mixins/loading-stages-controller-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/mixins');\n  test('unit/mixins/loading-stages-controller-test.js should pass jshint', function() { \n    ok(true, 'unit/mixins/loading-stages-controller-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/mixins/loading-stages-route-test', ['ember', 'morgana/mixins/loading-stages-route', 'qunit'], function (Ember, LoadingStagesRouteMixin, qunit) {\n\n  'use strict';\n\n  qunit.module('LoadingStagesRouteMixin');\n\n  // Replace this with your real tests.\n  qunit.test('it works', function(assert) {\n    var LoadingStagesRouteObject = Ember['default'].Object.extend(LoadingStagesRouteMixin['default']);\n    var subject = LoadingStagesRouteObject.create();\n    assert.ok(subject);\n  });\n\n});","define('morgana/tests/unit/mixins/loading-stages-route-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/mixins');\n  test('unit/mixins/loading-stages-route-test.js should pass jshint', function() { \n    ok(true, 'unit/mixins/loading-stages-route-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/mixins/pagination-test', ['ember', 'morgana/mixins/pagination', 'qunit'], function (Ember, pagination, qunit) {\n\n  'use strict';\n\n  qunit.module('PaginationMixin');\n\n  // Replace this with your real tests.\n  qunit.test('it works', function(assert) {\n    var PaginationObject = Ember['default'].Object.extend(pagination.PaginationMixin);\n    var subject = PaginationObject.create();\n    assert.ok(subject);\n  });\n\n});","define('morgana/tests/unit/mixins/pagination-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/mixins');\n  test('unit/mixins/pagination-test.js should pass jshint', function() { \n    ok(true, 'unit/mixins/pagination-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/mixins/permissions-test', ['ember', 'morgana/mixins/permissions', 'qunit'], function (Ember, permissions, qunit) {\n\n  'use strict';\n\n  qunit.module('PermissionsMixin');\n\n  // Replace this with your real tests.\n  qunit.test('it works', function(assert) {\n    var PermissionsObject = Ember['default'].Object.extend(permissions.PermissionsMixin);\n    var subject = PermissionsObject.create();\n    assert.ok(subject);\n  });\n\n});","define('morgana/tests/unit/mixins/permissions-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/mixins');\n  test('unit/mixins/permissions-test.js should pass jshint', function() { \n    ok(true, 'unit/mixins/permissions-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/mixins/server-side-field-error-test', ['ember', 'morgana/mixins/server-side-field-error', 'qunit'], function (Ember, ServerSideFieldErrorMixin, qunit) {\n\n  'use strict';\n\n  qunit.module('ServerSideFieldErrorMixin');\n\n  // Replace this with your real tests.\n  qunit.test('it works', function(assert) {\n    var ServerSideFieldErrorObject = Ember['default'].Object.extend(ServerSideFieldErrorMixin['default']);\n    var subject = ServerSideFieldErrorObject.create();\n    assert.ok(subject);\n  });\n\n});","define('morgana/tests/unit/mixins/server-side-field-error-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/mixins');\n  test('unit/mixins/server-side-field-error-test.js should pass jshint', function() { \n    ok(true, 'unit/mixins/server-side-field-error-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/mixins/server-side-model-adapter-test', ['ember', 'morgana/mixins/server-side-model-adapter', 'qunit'], function (Ember, ServerSideModelAdapterMixin, qunit) {\n\n  'use strict';\n\n  qunit.module('ServerSideModelAdapterMixin');\n\n  // Replace this with your real tests.\n  qunit.test('it works', function(assert) {\n    var ServerSideModelAdapterObject = Ember['default'].Object.extend(ServerSideModelAdapterMixin['default']);\n    var subject = ServerSideModelAdapterObject.create();\n    assert.ok(subject);\n  });\n\n});","define('morgana/tests/unit/mixins/server-side-model-adapter-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/mixins');\n  test('unit/mixins/server-side-model-adapter-test.js should pass jshint', function() { \n    ok(true, 'unit/mixins/server-side-model-adapter-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/mixins/server-side-model-fields-test', ['ember', 'morgana/mixins/server-side-model-fields', 'qunit'], function (Ember, ServerSideModelFieldsMixin, qunit) {\n\n  'use strict';\n\n  qunit.module('ServerSideModelFieldsMixin');\n\n  // Replace this with your real tests.\n  qunit.test('it works', function(assert) {\n    var ServerSideModelFieldsObject = Ember['default'].Object.extend(ServerSideModelFieldsMixin['default']);\n    var subject = ServerSideModelFieldsObject.create();\n    assert.ok(subject);\n  });\n\n});","define('morgana/tests/unit/mixins/server-side-model-fields-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/mixins');\n  test('unit/mixins/server-side-model-fields-test.js should pass jshint', function() { \n    ok(true, 'unit/mixins/server-side-model-fields-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/mixins/server-side-model-serializer-test', ['ember', 'morgana/mixins/server-side-model-serializer', 'qunit'], function (Ember, ServerSideModelSerializerMixin, qunit) {\n\n  'use strict';\n\n  qunit.module('ServerSideModelSerializerMixin');\n\n  // Replace this with your real tests.\n  qunit.test('it works', function(assert) {\n    var ServerSideModelSerializerObject = Ember['default'].Object.extend(ServerSideModelSerializerMixin['default']);\n    var subject = ServerSideModelSerializerObject.create();\n    assert.ok(subject);\n  });\n\n});","define('morgana/tests/unit/mixins/server-side-model-serializer-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/mixins');\n  test('unit/mixins/server-side-model-serializer-test.js should pass jshint', function() { \n    ok(true, 'unit/mixins/server-side-model-serializer-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/mixins/server-side-model-store-test', ['ember', 'morgana/mixins/server-side-model-store', 'qunit'], function (Ember, ServerSideModelStoreMixin, qunit) {\n\n  'use strict';\n\n  qunit.module('ServerSideModelStoreMixin');\n\n  // Replace this with your real tests.\n  qunit.test('it works', function(assert) {\n    var ServerSideModelStoreObject = Ember['default'].Object.extend(ServerSideModelStoreMixin['default']);\n    var subject = ServerSideModelStoreObject.create();\n    assert.ok(subject);\n  });\n\n});","define('morgana/tests/unit/mixins/server-side-model-store-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/mixins');\n  test('unit/mixins/server-side-model-store-test.js should pass jshint', function() { \n    ok(true, 'unit/mixins/server-side-model-store-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/models/bulk-upload-general-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('bulk-upload-general', 'BulkUploadGeneral', {\n    // Specify the other units that are required for this test.\n    needs: ['model:content-project', 'model:engine-configuration', 'model:thing']\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('morgana/tests/unit/models/bulk-upload-general-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/bulk-upload-general-test.js should pass jshint', function() { \n    ok(true, 'unit/models/bulk-upload-general-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/models/bulk-upload-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('bulk-upload', 'BulkUpload', {\n    // Specify the other units that are required for this test.\n    needs: ['model:content-project', 'model:engine-configuration', 'model:thing']\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('morgana/tests/unit/models/bulk-upload-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/bulk-upload-test.js should pass jshint', function() { \n    ok(true, 'unit/models/bulk-upload-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/models/category-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('category', 'Category', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('morgana/tests/unit/models/category-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/category-test.js should pass jshint', function() { \n    ok(true, 'unit/models/category-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/models/content-project-export-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('content-project-export', 'ContentProjectExport', {\n    // Specify the other units that are required for this test.\n    needs: ['model:content-project', 'model:engine-configuration', 'model:thing']\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('morgana/tests/unit/models/content-project-export-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/content-project-export-test.js should pass jshint', function() { \n    ok(true, 'unit/models/content-project-export-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/models/content-project-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('content-project', 'ContentProject', {\n    // Specify the other units that are required for this test.\n    needs: ['model:engine-configuration', 'model:thing', 'model:engine-configuration-status', 'model:language', 'model:engine-content-type-category']\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('morgana/tests/unit/models/content-project-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/content-project-test.js should pass jshint', function() { \n    ok(true, 'unit/models/content-project-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/models/content-request-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('content-request', 'ContentRequest', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('morgana/tests/unit/models/content-request-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/content-request-test.js should pass jshint', function() { \n    ok(true, 'unit/models/content-request-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/models/credit-history-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('credit-history', 'CreditHistory', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('morgana/tests/unit/models/credit-history-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/credit-history-test.js should pass jshint', function() { \n    ok(true, 'unit/models/credit-history-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/models/engine-configuration-status-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('engine-configuration-status', 'EngineConfigurationStatus', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('morgana/tests/unit/models/engine-configuration-status-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/engine-configuration-status-test.js should pass jshint', function() { \n    ok(true, 'unit/models/engine-configuration-status-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/models/engine-configuration-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('engine-configuration', 'EngineConfiguration', {\n    // Specify the other units that are required for this test.\n    needs: ['model:engine-configuration-status', 'model:engine-content-type-category', 'model:language']\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('morgana/tests/unit/models/engine-configuration-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/engine-configuration-test.js should pass jshint', function() { \n    ok(true, 'unit/models/engine-configuration-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/models/engine-configurations-contact-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('engine-configurations-contact', 'EngineConfigurationsContact', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('morgana/tests/unit/models/engine-configurations-contact-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/engine-configurations-contact-test.js should pass jshint', function() { \n    ok(true, 'unit/models/engine-configurations-contact-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/models/engine-content-type-category-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('engine-content-type-category', 'EngineContentTypeCategory', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('morgana/tests/unit/models/engine-content-type-category-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/engine-content-type-category-test.js should pass jshint', function() { \n    ok(true, 'unit/models/engine-content-type-category-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/models/eventlog-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('eventlog', 'Eventlog', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('morgana/tests/unit/models/eventlog-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/eventlog-test.js should pass jshint', function() { \n    ok(true, 'unit/models/eventlog-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/models/field-requirement-level-data-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('field-requirement-level-data', 'FieldRequirementLevelData', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('morgana/tests/unit/models/field-requirement-level-data-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/field-requirement-level-data-test.js should pass jshint', function() { \n    ok(true, 'unit/models/field-requirement-level-data-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/models/image-request-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('image-request', 'ImageRequest', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('morgana/tests/unit/models/image-request-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/image-request-test.js should pass jshint', function() { \n    ok(true, 'unit/models/image-request-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/models/invoice-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('invoice', 'Invoice', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('morgana/tests/unit/models/invoice-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/invoice-test.js should pass jshint', function() { \n    ok(true, 'unit/models/invoice-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/models/language-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('language', 'Language', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('morgana/tests/unit/models/language-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/language-test.js should pass jshint', function() { \n    ok(true, 'unit/models/language-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/models/model-field-choice-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('model-field-choice', 'ModelFieldChoice', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('morgana/tests/unit/models/model-field-choice-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/model-field-choice-test.js should pass jshint', function() { \n    ok(true, 'unit/models/model-field-choice-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/models/requirement-level-status-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('requirement-level-status', 'RequirementLevelStatus', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('morgana/tests/unit/models/requirement-level-status-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/requirement-level-status-test.js should pass jshint', function() { \n    ok(true, 'unit/models/requirement-level-status-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/models/tag-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('tag', 'Tag', {\n    // Specify the other units that are required for this test.\n    needs: ['model:content-project', 'model:engine-configuration', 'model:thing']\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('morgana/tests/unit/models/tag-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/tag-test.js should pass jshint', function() { \n    ok(true, 'unit/models/tag-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/models/text-request-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('text-request', 'TextRequest', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('morgana/tests/unit/models/text-request-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/text-request-test.js should pass jshint', function() { \n    ok(true, 'unit/models/text-request-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/models/thing-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('thing', 'Thing', {\n    // Specify the other units that are required for this test.\n    needs: ['model:content-project', 'model:engine-configuration']\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('morgana/tests/unit/models/thing-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/thing-test.js should pass jshint', function() { \n    ok(true, 'unit/models/thing-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/models/user-check-list-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('user-check-list', 'UserCheckList', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('morgana/tests/unit/models/user-check-list-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/user-check-list-test.js should pass jshint', function() { \n    ok(true, 'unit/models/user-check-list-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/models/user-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('user', 'User', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('morgana/tests/unit/models/user-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/user-test.js should pass jshint', function() { \n    ok(true, 'unit/models/user-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/routes/content-project-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:content-project', 'ContentProjectRoute', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n});","define('morgana/tests/unit/routes/content-project-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/content-project-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/content-project-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/routes/content-project/bulk-upload-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:content-project/bulk-upload', 'ContentProjectBulkUploadRoute', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n});","define('morgana/tests/unit/routes/content-project/bulk-upload-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/content-project');\n  test('unit/routes/content-project/bulk-upload-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/content-project/bulk-upload-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/routes/content-project/bulk-upload/upload-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:content-project/bulk-upload/upload', 'ContentProjectBulkUploadUploadRoute', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n});","define('morgana/tests/unit/routes/content-project/bulk-upload/upload-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/content-project/bulk-upload');\n  test('unit/routes/content-project/bulk-upload/upload-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/content-project/bulk-upload/upload-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/routes/content-project/content-project-exports-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:content-project/content-project-exports', 'ContentProjectContentProjectExportsRoute', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n});","define('morgana/tests/unit/routes/content-project/content-project-exports-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/content-project');\n  test('unit/routes/content-project/content-project-exports-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/content-project/content-project-exports-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/routes/content-project/content-project-exports/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:content-project/content-project-exports/index', 'ContentProjectContentProjectExportsIndexRoute', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n});","define('morgana/tests/unit/routes/content-project/content-project-exports/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/content-project/content-project-exports');\n  test('unit/routes/content-project/content-project-exports/index-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/content-project/content-project-exports/index-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/routes/content-project/delete-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:content-project/delete', 'ContentProjectDeleteRoute', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n});","define('morgana/tests/unit/routes/content-project/delete-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/content-project');\n  test('unit/routes/content-project/delete-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/content-project/delete-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/routes/content-project/edit-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:content-project/edit', 'ContentProjectEditRoute', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n});","define('morgana/tests/unit/routes/content-project/edit-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/content-project');\n  test('unit/routes/content-project/edit-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/content-project/edit-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/routes/content-project/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:content-project/index', 'ContentProjectIndexRoute', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n});","define('morgana/tests/unit/routes/content-project/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/content-project');\n  test('unit/routes/content-project/index-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/content-project/index-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/routes/content-project/thing-type-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:content-project/thing-type', 'ContentProjectThingTypeRoute', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n});","define('morgana/tests/unit/routes/content-project/thing-type-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/content-project');\n  test('unit/routes/content-project/thing-type-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/content-project/thing-type-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/routes/content-project/thing-type/thing-new-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:content-project/thing-type/thing-new', 'ContentProjectThingTypeThingNewRoute', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n});","define('morgana/tests/unit/routes/content-project/thing-type/thing-new-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/content-project/thing-type');\n  test('unit/routes/content-project/thing-type/thing-new-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/content-project/thing-type/thing-new-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/routes/content-project/thing-type/thing-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:content-project/thing-type/thing', 'ContentProjectThingTypeThingRoute', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n});","define('morgana/tests/unit/routes/content-project/thing-type/thing-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/content-project/thing-type');\n  test('unit/routes/content-project/thing-type/thing-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/content-project/thing-type/thing-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/routes/content-project/thing-type/thing/delete-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:content-project/thing-type/thing/delete', 'ContentProjectThingTypeThingDeleteRoute', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n});","define('morgana/tests/unit/routes/content-project/thing-type/thing/delete-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/content-project/thing-type/thing');\n  test('unit/routes/content-project/thing-type/thing/delete-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/content-project/thing-type/thing/delete-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/routes/content-project/thing-type/thing/edit-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:content-project/thing-type/thing/edit', 'ContentProjectThingTypeThingEditRoute', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n});","define('morgana/tests/unit/routes/content-project/thing-type/thing/edit-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/content-project/thing-type/thing');\n  test('unit/routes/content-project/thing-type/thing/edit-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/content-project/thing-type/thing/edit-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/routes/content-project/thing-type/thing/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:content-project/thing-type/thing/index', 'ContentProjectThingTypeThingIndexRoute', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n});","define('morgana/tests/unit/routes/content-project/thing-type/thing/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/content-project/thing-type/thing');\n  test('unit/routes/content-project/thing-type/thing/index-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/content-project/thing-type/thing/index-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/routes/content-projects-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:content-projects', 'ContentProjectsRoute', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n});","define('morgana/tests/unit/routes/content-projects-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/content-projects-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/content-projects-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/routes/credits/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:credits/index', 'CreditsIndexRoute', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n});","define('morgana/tests/unit/routes/credits/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/credits');\n  test('unit/routes/credits/index-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/credits/index-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/routes/download-exports-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:download-exports', 'DownloadExportsRoute', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n});","define('morgana/tests/unit/routes/download-exports-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/download-exports-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/download-exports-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/routes/download-exports/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:download-exports/index', 'DownloadExportsIndexRoute', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n});","define('morgana/tests/unit/routes/download-exports/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/download-exports');\n  test('unit/routes/download-exports/index-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/download-exports/index-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/routes/engine-configuration-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:engine-configuration', 'EngineConfigurationRoute', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n});","define('morgana/tests/unit/routes/engine-configuration-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/engine-configuration-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/engine-configuration-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/routes/engine-configuration/content-project-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:engine-configuration/content-project', 'EngineConfigurationContentProjectRoute', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n});","define('morgana/tests/unit/routes/engine-configuration/content-project-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/engine-configuration');\n  test('unit/routes/engine-configuration/content-project-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/engine-configuration/content-project-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/routes/engine-configuration/content-project/new-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:engine-configuration/content-project/new', 'EngineConfigurationContentProjectNewRoute', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n});","define('morgana/tests/unit/routes/engine-configuration/content-project/new-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/engine-configuration/content-project');\n  test('unit/routes/engine-configuration/content-project/new-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/engine-configuration/content-project/new-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/routes/engine-configuration/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:engine-configuration/index', 'EngineConfigurationIndexRoute', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n});","define('morgana/tests/unit/routes/engine-configuration/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/engine-configuration');\n  test('unit/routes/engine-configuration/index-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/engine-configuration/index-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/routes/engine-configurations-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:engine-configurations', 'EngineConfigurationsRoute', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n});","define('morgana/tests/unit/routes/engine-configurations-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/engine-configurations-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/engine-configurations-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/routes/engine-configurations/contact-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:engine-configurations/contact', 'EngineConfigurationsContactRoute', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n});","define('morgana/tests/unit/routes/engine-configurations/contact-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/engine-configurations');\n  test('unit/routes/engine-configurations/contact-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/engine-configurations/contact-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/routes/engine-configurations/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:engine-configurations/index', 'EngineConfigurationsIndexRoute', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n});","define('morgana/tests/unit/routes/engine-configurations/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/engine-configurations');\n  test('unit/routes/engine-configurations/index-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/engine-configurations/index-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/routes/eventlog-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:eventlog', 'EventlogRoute', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n});","define('morgana/tests/unit/routes/eventlog-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/eventlog-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/eventlog-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/routes/eventlog/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:eventlog/index', 'EventlogIndexRoute', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n});","define('morgana/tests/unit/routes/eventlog/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/eventlog');\n  test('unit/routes/eventlog/index-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/eventlog/index-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/routes/home-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:home', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n});","define('morgana/tests/unit/routes/home-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/home-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/home-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/routes/home/index-test', ['ember-qunit'], function (ember_qunit) {\n\n    'use strict';\n\n    ember_qunit.moduleFor('route:home/index', 'HomeIndexRoute', {\n        // Specify the other units that are required for this test.\n        // needs: ['controller:foo']\n    });\n\n    ember_qunit.test('it exists', function (assert) {\n        var route = this.subject();\n        assert.ok(route);\n    });\n\n});","define('morgana/tests/unit/routes/home/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/home');\n  test('unit/routes/home/index-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/home/index-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/routes/login-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:login', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n});","define('morgana/tests/unit/routes/login-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/login-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/login-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/routes/profile-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:profile', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n});","define('morgana/tests/unit/routes/profile-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/profile-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/profile-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/routes/profile/edit-company-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:profile/edit-company', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n});","define('morgana/tests/unit/routes/profile/edit-company-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/profile');\n  test('unit/routes/profile/edit-company-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/profile/edit-company-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/routes/profile/edit-user-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:profile/edit-user', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n});","define('morgana/tests/unit/routes/profile/edit-user-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/profile');\n  test('unit/routes/profile/edit-user-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/profile/edit-user-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/routes/profile/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:profile/index', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n});","define('morgana/tests/unit/routes/profile/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/profile');\n  test('unit/routes/profile/index-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/profile/index-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/routes/tags-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:tags', 'TagsRoute', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n});","define('morgana/tests/unit/routes/tags-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/tags-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/tags-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/routes/tags/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:tags/index', 'TagsIndexRoute', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n});","define('morgana/tests/unit/routes/tags/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/tags');\n  test('unit/routes/tags/index-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/tags/index-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/routes/tags/upload-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:tags/upload', 'TagsUploadRoute', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  ember_qunit.test('it exists', function(assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n});","define('morgana/tests/unit/routes/tags/upload-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/tags');\n  test('unit/routes/tags/upload-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/tags/upload-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/serializers/application-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('serializer:application', 'ApplicationSerializer', {\n    // Specify the other units that are required for this test.\n    // needs: ['serializer:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var serializer = this.subject();\n    assert.ok(serializer);\n  });\n\n});","define('morgana/tests/unit/serializers/application-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/serializers');\n  test('unit/serializers/application-test.js should pass jshint', function() { \n    ok(true, 'unit/serializers/application-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/serializers/content-request-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('serializer:content-request', 'ContentRequestSerializer', {\n    // Specify the other units that are required for this test.\n    // needs: ['serializer:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var serializer = this.subject();\n    assert.ok(serializer);\n  });\n\n});","define('morgana/tests/unit/serializers/content-request-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/serializers');\n  test('unit/serializers/content-request-test.js should pass jshint', function() { \n    ok(true, 'unit/serializers/content-request-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/serializers/eventlog-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('serializer:eventlog', 'EventlogSerializer', {\n    // Specify the other units that are required for this test.\n    // needs: ['serializer:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var serializer = this.subject();\n    assert.ok(serializer);\n  });\n\n});","define('morgana/tests/unit/serializers/eventlog-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/serializers');\n  test('unit/serializers/eventlog-test.js should pass jshint', function() { \n    ok(true, 'unit/serializers/eventlog-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/serializers/image-request-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('serializer:image-request', 'ImageRequestSerializer', {\n    // Specify the other units that are required for this test.\n    // needs: ['serializer:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var serializer = this.subject();\n    assert.ok(serializer);\n  });\n\n});","define('morgana/tests/unit/serializers/image-request-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/serializers');\n  test('unit/serializers/image-request-test.js should pass jshint', function() { \n    ok(true, 'unit/serializers/image-request-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/serializers/text-request-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('serializer:text-request', 'TextRequestSerializer', {\n    // Specify the other units that are required for this test.\n    // needs: ['serializer:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var serializer = this.subject();\n    assert.ok(serializer);\n  });\n\n});","define('morgana/tests/unit/serializers/text-request-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/serializers');\n  test('unit/serializers/text-request-test.js should pass jshint', function() { \n    ok(true, 'unit/serializers/text-request-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/serializers/thing-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('serializer:thing', 'ThingSerializer', {\n    // Specify the other units that are required for this test.\n    // needs: ['serializer:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var serializer = this.subject();\n    assert.ok(serializer);\n  });\n\n});","define('morgana/tests/unit/serializers/thing-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/serializers');\n  test('unit/serializers/thing-test.js should pass jshint', function() { \n    ok(true, 'unit/serializers/thing-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/serializers/user-check-list-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('serializer:user-check-list', 'UserCheckListSerializer', {\n    // Specify the other units that are required for this test.\n    // needs: ['serializer:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var serializer = this.subject();\n    assert.ok(serializer);\n  });\n\n});","define('morgana/tests/unit/serializers/user-check-list-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/serializers');\n  test('unit/serializers/user-check-list-test.js should pass jshint', function() { \n    ok(true, 'unit/serializers/user-check-list-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/transforms/json-string-parsed-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('transform:json-string-parsed', 'JsonStringParsedTransform', {\n    // Specify the other units that are required for this test.\n    // needs: ['serializer:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var transform = this.subject();\n    assert.ok(transform);\n  });\n\n  var jsonObj = {\n      foo: 'bar',\n      baz: ['one', 'two'],\n      nested: {object: {deeper: 'level'}}\n  };\n\n  ember_qunit.test('it serializes and deserializes a nested object', function (assert) {\n      var transform = this.subject();\n      assert.deepEqual(jsonObj, transform.deserialize(transform.serialize(jsonObj)));\n  });\n\n});","define('morgana/tests/unit/transforms/json-string-parsed-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/transforms');\n  test('unit/transforms/json-string-parsed-test.js should pass jshint', function() { \n    ok(true, 'unit/transforms/json-string-parsed-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/transforms/upload-file-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('transform:upload-file', 'UploadFileTransform', {\n    // Specify the other units that are required for this test.\n    // needs: ['serializer:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var transform = this.subject();\n    assert.ok(transform);\n  });\n\n});","define('morgana/tests/unit/transforms/upload-file-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/transforms');\n  test('unit/transforms/upload-file-test.js should pass jshint', function() { \n    ok(true, 'unit/transforms/upload-file-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/views/application-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('view:application', 'ApplicationView');\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var view = this.subject();\n    assert.ok(view);\n  });\n\n});","define('morgana/tests/unit/views/application-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/views');\n  test('unit/views/application-test.js should pass jshint', function() { \n    ok(true, 'unit/views/application-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/views/child-view-or-string-test', ['ember-qunit'], function (ember_qunit) {\n\n    'use strict';\n\n    ember_qunit.moduleFor('view:child-view-or-string', 'ChildViewOrStringView');\n\n    // Replace this with your real tests.\n    ember_qunit.test('it exists', function (assert) {\n        var view = this.subject();\n        assert.ok(!!view);\n    });\n\n});","define('morgana/tests/unit/views/child-view-or-string-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/views');\n  test('unit/views/child-view-or-string-test.js should pass jshint', function() { \n    ok(true, 'unit/views/child-view-or-string-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/views/content-project/content-project-exports-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('view:content-project/content-project-exports', 'ContentProjectContentProjectExportsView');\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var view = this.subject();\n    assert.ok(view);\n  });\n\n});","define('morgana/tests/unit/views/content-project/content-project-exports-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/views/content-project');\n  test('unit/views/content-project/content-project-exports-test.js should pass jshint', function() { \n    ok(true, 'unit/views/content-project/content-project-exports-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/views/content-project/delete-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('view:content-project/delete', 'ContentProjectDeleteView');\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var view = this.subject();\n    assert.ok(view);\n  });\n\n});","define('morgana/tests/unit/views/content-project/delete-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/views/content-project');\n  test('unit/views/content-project/delete-test.js should pass jshint', function() { \n    ok(true, 'unit/views/content-project/delete-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/views/content-project/edit-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('view:content-project/edit', 'ContentProjectEditView');\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var view = this.subject();\n    assert.ok(view);\n  });\n\n});","define('morgana/tests/unit/views/content-project/edit-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/views/content-project');\n  test('unit/views/content-project/edit-test.js should pass jshint', function() { \n    ok(true, 'unit/views/content-project/edit-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/views/content-project/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('view:content-project/index', 'ContentProjectIndexView');\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var view = this.subject();\n    assert.ok(view);\n  });\n\n});","define('morgana/tests/unit/views/content-project/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/views/content-project');\n  test('unit/views/content-project/index-test.js should pass jshint', function() { \n    ok(true, 'unit/views/content-project/index-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/views/content-project/thing-type/thing-new-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('view:content-project/thing-type/thing-new', 'ContentProjectThingTypeThingNewView');\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var view = this.subject();\n    assert.ok(view);\n  });\n\n});","define('morgana/tests/unit/views/content-project/thing-type/thing-new-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/views/content-project/thing-type');\n  test('unit/views/content-project/thing-type/thing-new-test.js should pass jshint', function() { \n    ok(true, 'unit/views/content-project/thing-type/thing-new-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/views/content-project/thing-type/thing/delete-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('view:content-project/thing-type/thing/delete', 'ContentProjectThingTypeThingDeleteView');\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var view = this.subject();\n    assert.ok(view);\n  });\n\n});","define('morgana/tests/unit/views/content-project/thing-type/thing/delete-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/views/content-project/thing-type/thing');\n  test('unit/views/content-project/thing-type/thing/delete-test.js should pass jshint', function() { \n    ok(true, 'unit/views/content-project/thing-type/thing/delete-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/views/content-project/thing-type/thing/edit-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('view:content-project/thing-type/thing/edit', 'ContentProjectThingTypeThingEditView');\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var view = this.subject();\n    assert.ok(view);\n  });\n\n});","define('morgana/tests/unit/views/content-project/thing-type/thing/edit-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/views/content-project/thing-type/thing');\n  test('unit/views/content-project/thing-type/thing/edit-test.js should pass jshint', function() { \n    ok(true, 'unit/views/content-project/thing-type/thing/edit-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/views/content-project/thing-type/thing/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('view:content-project/thing-type/thing/index', 'ContentProjectThingTypeThingIndexView');\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var view = this.subject();\n    assert.ok(view);\n  });\n\n});","define('morgana/tests/unit/views/content-project/thing-type/thing/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/views/content-project/thing-type/thing');\n  test('unit/views/content-project/thing-type/thing/index-test.js should pass jshint', function() { \n    ok(true, 'unit/views/content-project/thing-type/thing/index-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/views/credits/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('view:credits/index', 'CreditsIndexView');\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var view = this.subject();\n    assert.ok(view);\n  });\n\n});","define('morgana/tests/unit/views/credits/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/views/credits');\n  test('unit/views/credits/index-test.js should pass jshint', function() { \n    ok(true, 'unit/views/credits/index-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/views/engine-configuration/content-project/new-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('view:engine-configuration/content-project/new', 'EngineConfigurationContentProjectNewView');\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var view = this.subject();\n    assert.ok(view);\n  });\n\n});","define('morgana/tests/unit/views/engine-configuration/content-project/new-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/views/engine-configuration/content-project');\n  test('unit/views/engine-configuration/content-project/new-test.js should pass jshint', function() { \n    ok(true, 'unit/views/engine-configuration/content-project/new-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/views/engine-configuration/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('view:engine-configuration/index', 'EngineConfigurationIndexView');\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var view = this.subject();\n    assert.ok(view);\n  });\n\n});","define('morgana/tests/unit/views/engine-configuration/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/views/engine-configuration');\n  test('unit/views/engine-configuration/index-test.js should pass jshint', function() { \n    ok(true, 'unit/views/engine-configuration/index-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/views/engine-configurations/contact/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('view:engine-configurations/contact/index', 'EngineConfigurationsContactIndexView');\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var view = this.subject();\n    assert.ok(view);\n  });\n\n});","define('morgana/tests/unit/views/engine-configurations/contact/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/views/engine-configurations/contact');\n  test('unit/views/engine-configurations/contact/index-test.js should pass jshint', function() { \n    ok(true, 'unit/views/engine-configurations/contact/index-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/views/engine-configurations/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('view:engine-configurations/index', 'EngineConfigurationsIndexView');\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var view = this.subject();\n    assert.ok(view);\n  });\n\n});","define('morgana/tests/unit/views/engine-configurations/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/views/engine-configurations');\n  test('unit/views/engine-configurations/index-test.js should pass jshint', function() { \n    ok(true, 'unit/views/engine-configurations/index-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/views/eventlog/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('view:eventlog/index', 'EventlogIndexView');\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var view = this.subject();\n    assert.ok(view);\n  });\n\n});","define('morgana/tests/unit/views/eventlog/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/views/eventlog');\n  test('unit/views/eventlog/index-test.js should pass jshint', function() { \n    ok(true, 'unit/views/eventlog/index-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/views/file-upload-field-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('view:file-upload-field', 'FileUploadFieldView');\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var view = this.subject();\n    assert.ok(view);\n  });\n\n});","define('morgana/tests/unit/views/file-upload-field-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/views');\n  test('unit/views/file-upload-field-test.js should pass jshint', function() { \n    ok(true, 'unit/views/file-upload-field-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/views/foundation-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('view:foundation', 'FoundationView');\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var view = this.subject();\n    assert.ok(view);\n  });\n\n});","define('morgana/tests/unit/views/foundation-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/views');\n  test('unit/views/foundation-test.js should pass jshint', function() { \n    ok(true, 'unit/views/foundation-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/views/home/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('view:home/index', 'HomeIndexView');\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var view = this.subject();\n    assert.ok(view);\n  });\n\n});","define('morgana/tests/unit/views/home/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/views/home');\n  test('unit/views/home/index-test.js should pass jshint', function() { \n    ok(true, 'unit/views/home/index-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/views/navigation-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('view:navigation');\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var view = this.subject();\n    assert.ok(view);\n  });\n\n});","define('morgana/tests/unit/views/navigation-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/views');\n  test('unit/views/navigation-test.js should pass jshint', function() { \n    ok(true, 'unit/views/navigation-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/views/server-side-model-form-field-container-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('view:server-side-model-form-field-container', 'ServerSideModelFormFieldContainerView');\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var view = this.subject();\n    assert.ok(view);\n  });\n\n});","define('morgana/tests/unit/views/server-side-model-form-field-container-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/views');\n  test('unit/views/server-side-model-form-field-container-test.js should pass jshint', function() { \n    ok(true, 'unit/views/server-side-model-form-field-container-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/views/server-side-model-form-field-indicator-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('view:server-side-model-form-field-indicator', 'ServerSideModelFormFieldIndicatorView');\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var view = this.subject();\n    assert.ok(view);\n  });\n\n});","define('morgana/tests/unit/views/server-side-model-form-field-indicator-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/views');\n  test('unit/views/server-side-model-form-field-indicator-test.js should pass jshint', function() { \n    ok(true, 'unit/views/server-side-model-form-field-indicator-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/views/server-side-model-form-field-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('view:server-side-model-form-field', 'ServerSideModelFormFieldView');\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var view = this.subject();\n    assert.ok(view);\n  });\n\n});","define('morgana/tests/unit/views/server-side-model-form-field-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/views');\n  test('unit/views/server-side-model-form-field-test.js should pass jshint', function() { \n    ok(true, 'unit/views/server-side-model-form-field-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/views/server-side-model-form-fields-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('view:server-side-model-form-fields', 'ServerSideModelFormFieldsView');\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var view = this.subject();\n    assert.ok(view);\n  });\n\n});","define('morgana/tests/unit/views/server-side-model-form-fields-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/views');\n  test('unit/views/server-side-model-form-fields-test.js should pass jshint', function() { \n    ok(true, 'unit/views/server-side-model-form-fields-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/unit/views/tags/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('view:tags/index', 'TagsIndexView');\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function(assert) {\n    var view = this.subject();\n    assert.ok(view);\n  });\n\n});","define('morgana/tests/unit/views/tags/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/views/tags');\n  test('unit/views/tags/index-test.js should pass jshint', function() { \n    ok(true, 'unit/views/tags/index-test.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/views/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views');\n  test('views/application.js should pass jshint', function() { \n    ok(true, 'views/application.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/views/child-view-or-string.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views');\n  test('views/child-view-or-string.js should pass jshint', function() { \n    ok(true, 'views/child-view-or-string.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/views/content-project/content-project-exports.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/content-project');\n  test('views/content-project/content-project-exports.js should pass jshint', function() { \n    ok(true, 'views/content-project/content-project-exports.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/views/content-project/delete.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/content-project');\n  test('views/content-project/delete.js should pass jshint', function() { \n    ok(true, 'views/content-project/delete.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/views/content-project/edit.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/content-project');\n  test('views/content-project/edit.js should pass jshint', function() { \n    ok(true, 'views/content-project/edit.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/views/content-project/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/content-project');\n  test('views/content-project/index.js should pass jshint', function() { \n    ok(true, 'views/content-project/index.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/views/content-project/thing-type/thing-new.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/content-project/thing-type');\n  test('views/content-project/thing-type/thing-new.js should pass jshint', function() { \n    ok(true, 'views/content-project/thing-type/thing-new.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/views/content-project/thing-type/thing/delete.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/content-project/thing-type/thing');\n  test('views/content-project/thing-type/thing/delete.js should pass jshint', function() { \n    ok(true, 'views/content-project/thing-type/thing/delete.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/views/content-project/thing-type/thing/edit.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/content-project/thing-type/thing');\n  test('views/content-project/thing-type/thing/edit.js should pass jshint', function() { \n    ok(true, 'views/content-project/thing-type/thing/edit.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/views/content-project/thing-type/thing/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/content-project/thing-type/thing');\n  test('views/content-project/thing-type/thing/index.js should pass jshint', function() { \n    ok(true, 'views/content-project/thing-type/thing/index.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/views/credits/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/credits');\n  test('views/credits/index.js should pass jshint', function() { \n    ok(true, 'views/credits/index.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/views/engine-configuration/content-project/new.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/engine-configuration/content-project');\n  test('views/engine-configuration/content-project/new.js should pass jshint', function() { \n    ok(true, 'views/engine-configuration/content-project/new.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/views/engine-configuration/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/engine-configuration');\n  test('views/engine-configuration/index.js should pass jshint', function() { \n    ok(true, 'views/engine-configuration/index.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/views/engine-configurations/contact/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/engine-configurations/contact');\n  test('views/engine-configurations/contact/index.js should pass jshint', function() { \n    ok(true, 'views/engine-configurations/contact/index.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/views/engine-configurations/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/engine-configurations');\n  test('views/engine-configurations/index.js should pass jshint', function() { \n    ok(true, 'views/engine-configurations/index.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/views/eventlog/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/eventlog');\n  test('views/eventlog/index.js should pass jshint', function() { \n    ok(true, 'views/eventlog/index.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/views/file-upload-field.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views');\n  test('views/file-upload-field.js should pass jshint', function() { \n    ok(true, 'views/file-upload-field.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/views/foundation.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views');\n  test('views/foundation.js should pass jshint', function() { \n    ok(true, 'views/foundation.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/views/home/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/home');\n  test('views/home/index.js should pass jshint', function() { \n    ok(true, 'views/home/index.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/views/navigation.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views');\n  test('views/navigation.js should pass jshint', function() { \n    ok(true, 'views/navigation.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/views/server-side-model-form-field-container.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views');\n  test('views/server-side-model-form-field-container.js should pass jshint', function() { \n    ok(true, 'views/server-side-model-form-field-container.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/views/server-side-model-form-field-indicator.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views');\n  test('views/server-side-model-form-field-indicator.js should pass jshint', function() { \n    ok(true, 'views/server-side-model-form-field-indicator.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/views/server-side-model-form-field.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views');\n  test('views/server-side-model-form-field.js should pass jshint', function() { \n    ok(true, 'views/server-side-model-form-field.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/views/server-side-model-form-fields.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views');\n  test('views/server-side-model-form-fields.js should pass jshint', function() { \n    ok(true, 'views/server-side-model-form-fields.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/views/table-footer.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views');\n  test('views/table-footer.js should pass jshint', function() { \n    ok(true, 'views/table-footer.js should pass jshint.'); \n  });\n\n});","define('morgana/tests/views/tags/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views/tags');\n  test('views/tags/index.js should pass jshint', function() { \n    ok(true, 'views/tags/index.js should pass jshint.'); \n  });\n\n});","define('morgana/transforms/json-string-parsed', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].Transform.extend({\n    deserialize: function (serialized) {\n          return JSON.parse(serialized);\n      },\n      serialize: function (deserialized) {\n          return JSON.stringify(deserialized, null, 2);\n      }\n  });\n\n});","define('morgana/transforms/upload-file', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].Transform.extend({\n    deserialize: function(serialized) {\n      return serialized;\n    },\n\n    serialize: function(deserialized) {\n      return deserialized.content;\n    }\n  });\n\n});","define('morgana/views/application', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].View.extend({\n\t});\n\n});","define('morgana/views/child-view-or-string', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].ContainerView.extend({\n        init: function () {\n            this._super();\n            this.createChildViews();\n        },\n        tagName: '',\n        createChildViews: function () {\n            var self = this,\n                content = self.get('content') || '',\n                ret;\n\n            if (typeof content === 'string') {\n                ret = Ember['default'].View.create({\n                    template: Ember['default'].Handlebars.compile(content),\n                    tagName: ''\n                });\n            } else {\n                ret = content;\n            }\n\n            this.pushObject(ret);\n        }\n\n    });\n\n});","define('morgana/views/content-project/content-project-exports', ['exports', 'morgana/views/foundation'], function (exports, FoundationView) {\n\n\t'use strict';\n\n\texports['default'] = FoundationView['default'].extend({\n\t});\n\n});","define('morgana/views/content-project/delete', ['exports', 'morgana/views/foundation'], function (exports, FoundationView) {\n\n\t'use strict';\n\n\texports['default'] = FoundationView['default'].extend({\n\t});\n\n});","define('morgana/views/content-project/edit', ['exports', 'morgana/views/foundation'], function (exports, FoundationView) {\n\n\t'use strict';\n\n\texports['default'] = FoundationView['default'].extend({\n\t});\n\n});","define('morgana/views/content-project/index', ['exports', 'morgana/views/foundation'], function (exports, FoundationView) {\n\n\t'use strict';\n\n\texports['default'] = FoundationView['default'].extend({\n\t});\n\n});","define('morgana/views/content-project/thing-type/thing-new', ['exports', 'morgana/views/foundation'], function (exports, FoundationView) {\n\n\t'use strict';\n\n\texports['default'] = FoundationView['default'].extend({\n\t});\n\n});","define('morgana/views/content-project/thing-type/thing/delete', ['exports', 'morgana/views/foundation'], function (exports, FoundationView) {\n\n\t'use strict';\n\n\texports['default'] = FoundationView['default'].extend({\n\t});\n\n});","define('morgana/views/content-project/thing-type/thing/edit', ['exports', 'morgana/views/foundation'], function (exports, FoundationView) {\n\n\t'use strict';\n\n\texports['default'] = FoundationView['default'].extend({\n\t});\n\n});","define('morgana/views/content-project/thing-type/thing/index', ['exports', 'morgana/views/foundation'], function (exports, FoundationView) {\n\n\t'use strict';\n\n\texports['default'] = FoundationView['default'].extend({\n\n\t});\n\n});","define('morgana/views/credits/index', ['exports', 'morgana/views/foundation'], function (exports, FoundationView) {\n\n\t'use strict';\n\n\texports['default'] = FoundationView['default'].extend({\n\n\t});\n\n});","define('morgana/views/engine-configuration/content-project/new', ['exports', 'morgana/views/foundation'], function (exports, FoundationView) {\n\n\t'use strict';\n\n\texports['default'] = FoundationView['default'].extend({\n\t});\n\n});","define('morgana/views/engine-configuration/index', ['exports', 'morgana/views/foundation'], function (exports, FoundationView) {\n\n\t'use strict';\n\n\texports['default'] = FoundationView['default'].extend({\n\t});\n\n});","define('morgana/views/engine-configurations/contact/index', ['exports', 'morgana/views/foundation'], function (exports, FoundationView) {\n\n\t'use strict';\n\n\texports['default'] = FoundationView['default'].extend({\n\t});\n\n});","define('morgana/views/engine-configurations/index', ['exports', 'morgana/views/foundation'], function (exports, FoundationView) {\n\n\t'use strict';\n\n\texports['default'] = FoundationView['default'].extend({\n\t});\n\n});","define('morgana/views/eventlog/index', ['exports', 'morgana/views/foundation'], function (exports, FoundationView) {\n\n\t'use strict';\n\n\texports['default'] = FoundationView['default'].extend({\n\t});\n\n});","define('morgana/views/file-upload-field', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].TextField.extend({\n        tagName: 'input',\n        attributeBindings: ['uploadFile'],\n        type: 'file',\n        uploadFile: null,\n        change: function (e) {\n            var reader = new FileReader(),\n                that = this;\n\n            Ember['default'].run(function () {\n                var fileInfo = e.target.files[0];\n                that.set('uploadFile.name', fileInfo.name);\n                that.set('uploadFile.size', fileInfo.size);\n                that.set('uploadFile.type', fileInfo.type);\n                that.set('uploadFile.content', fileInfo);\n            });\n            return reader.readAsDataURL(e.target.files[0]);\n        }\n    });\n\n});","define('morgana/views/foundation', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].View.extend({\n        didInsertElement : function () {\n            this._super();\n            Ember['default'].run.scheduleOnce('afterRender', this, this.afterRenderEvent);\n        },\n        afterRenderEvent : function () {\n            Ember['default'].$(document).foundation();\n            return;\n        }\n    });\n\n});","define('morgana/views/home/index', ['exports', 'morgana/views/foundation'], function (exports, FoundationView) {\n\n\t'use strict';\n\n\texports['default'] = FoundationView['default'].extend({\n\t});\n\n});","define('morgana/views/navigation', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].View.extend({\n        tagName: 'nav',\n        classNames: ['container', 'navigationRow'],\n        templateName: 'navigation'\n    });\n\n});","define('morgana/views/server-side-model-form-field-container', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].View.extend({\n        model: null,\n        init: function () {\n            this._super();\n        },\n        templateName: 'content-project/thing-type/thing/-server-side-model-form-field-container',\n\n        axFieldLevelClass: Ember['default'].computed('field.requirement_level', function () {\n            return 'ax-field-level-' + this.get('field.requirement_level');\n        }),\n\n        axFieldValidClass: Ember['default'].computed('controller.model', 'field.fieldName', function () {\n            return this.get('controller.' + this.get('field.fieldName')) ? 'ax-field-not-empty' : 'ax-field-empty';\n        })\n    });\n\n});","define('morgana/views/server-side-model-form-field-indicator', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].ContainerView.extend({\n        init: function () {\n            this._super();\n            this.createChildViews();\n        },\n\n        axFieldLevelClass: Ember['default'].computed('field.requirement_level', function () {\n            return 'ax-field-level-' + this.get('field.requirement_level');\n        }),\n\n        createChildViews: function () {\n            var ret,\n                self = this,\n                model = this.get(\"model\"),\n                fieldName = this.get('field.fieldName'),\n                axEmptyBindingStr;\n\n            if (this.get('field.type') === 'choice') {\n                axEmptyBindingStr = 'model.' + fieldName + '.id:ax-field-not-empty:ax-field-empty';\n            } else {\n                axEmptyBindingStr = 'model.' + fieldName + ':ax-field-not-empty:ax-field-empty';\n            }\n\n            ret = Ember['default'].View.create({\n                tagName: 'span',\n                model: model,\n\n                classNameBindings: [\n                    ':postfix',\n                    ':' + self.get('axFieldLevelClass'),\n                    axEmptyBindingStr\n                ]\n            });\n            this.pushObject(ret);\n        }\n\n    });\n\n});","define('morgana/views/server-side-model-form-field', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].ContainerView.extend({\n        model: null,\n\n        init: function () {\n            this._super();\n            this.createChildViews();\n        },\n\n\n        createChildViews: function () {\n            var ret,\n                content,\n                required = this.get('field.required'),\n                model = this.get(\"model\"),\n                store = this.get('controller.store'),\n                fieldName = this.get('field.fieldName'),\n                fieldType = this.get('field.type'),\n                readOnly = this.get('field.read_only'),\n                placeholder = [this.get('field.help_text'), '[' + this.get('field.field_name') + ']'].join(' ');\n\n            if (readOnly) {\n                return;\n            }\n            switch (fieldType) {\n\n            case 'url':\n                ret = Ember['default'].TextField.create({\n                    model: model,\n                    valueBinding: 'model.' + fieldName,\n                    type: 'url',\n                    'data-tooltip': '',\n                    required: required,\n                    placeholder: placeholder,\n                    title: placeholder,\n                    classNames: ['has-tip'],\n                    attributeBindings: ['data-tooltip']\n                });\n                break;\n            case 'decimal':\n            case 'integer':\n                ret = Ember['default'].TextField.create({\n                    model: model,\n                    valueBinding: 'model.' + fieldName,\n                    type: 'number',\n                    'data-tooltip': '',\n                    required: required,\n                    placeholder: placeholder,\n                    title: placeholder,\n                    classNames: ['has-tip'],\n                    attributeBindings: ['data-tooltip']\n                });\n                break;\n            case 'boolean':\n                ret = Ember['default'].Select.create({\n                    model: model,\n                    valueBinding: 'model.' + fieldName,\n                    prompt: 'Unknown',\n                    optionValuePath: \"content.value\",\n                    optionLabelPath: \"content.displayName\",\n                    content: [\n                        {value: true, displayName: 'Yes'},\n                        {value: false, displayName: 'No'}\n                    ],\n                    'data-tooltip': '',\n                    required: required,\n                    title: placeholder,\n                    classNames: ['has-tip'],\n                    attributeBindings: ['data-tooltip', 'title']\n                });\n                break;\n            case 'choice':\n                content = store.all(model.constructor.typeKey + 'Choice' + Ember['default'].String.capitalize(fieldName));\n                ret = Ember['default'].Select.create({\n                    model: model,\n                    valueBinding: 'model.' + fieldName,\n                    prompt: 'Unknown',\n                    optionLabelPath: \"content.displayName\",\n                    content: content,\n                    'data-tooltip': '',\n                    required: required,\n                    title: placeholder,\n                    classNames: ['has-tip'],\n                    attributeBindings: ['data-tooltip', 'title']\n                });\n                break;\n            case 'string':\n                ret = Ember['default'].TextField.create({\n                    model: model,\n                    valueBinding: 'model.' + fieldName,\n                    type: 'text',\n                    'data-tooltip': '',\n                    required: required,\n                    placeholder: placeholder,\n                    title: placeholder,\n                    classNames: ['has-tip'],\n                    attributeBindings: ['data-tooltip']\n                });\n                break;\n\n            case 'json':\n                ret = Ember['default'].TextArea.create({\n                    model: model,\n                    valueBinding: 'model.' + fieldName,\n                    'data-tooltip': '',\n                    required: required,\n                    placeholder: placeholder,\n                    title: placeholder,\n                    classNames: ['has-tip'],\n                    attributeBindings: ['data-tooltip']\n                });\n                break;\n            default:\n                ret = Ember['default'].TextField.create({\n                    model: model,\n                    valueBinding: 'model.' + fieldName,\n                    type: 'text',\n                    'data-tooltip': '',\n                    required: required,\n                    placeholder: placeholder,\n                    title: placeholder,\n                    classNames: ['has-tip'],\n                    attributeBindings: ['data-tooltip']\n\n                });\n                break;\n            }\n            ret.reopen({\n\n            });\n\n            this.pushObject(ret);\n\n\n        }\n    });\n\n});","define('morgana/views/server-side-model-form-fields', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].View.extend({\n        templateName: 'content-project/thing-type/thing/-server-side-model-form-fields',\n        model: null\n    });\n\n});","define('morgana/views/table-footer', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].View.extend({\n        templateName: 'views/table-footer',\n        hasMoreThanOnePage: Ember['default'].computed('controller.totalPages', function(){\n            return this.get('controller.totalPages') > 1;\n        })\n    });\n\n});","define('morgana/views/tags/index', ['exports', 'morgana/views/foundation'], function (exports, FoundationView) {\n\n\t'use strict';\n\n\texports['default'] = FoundationView['default'].extend({\n\t});\n\n});","/* jshint ignore:start */\n\n/* jshint ignore:end */\n","/* jshint ignore:start */\n\ndefine('morgana/config/environment', ['ember'], function(Ember) {\n  return { 'default': {\"modulePrefix\":\"morgana\",\"environment\":\"development\",\"baseURL\":\"/\",\"locationType\":\"hash\",\"restAdapter\":{\"namespace\":\"api/v1\",\"host\":\"http://0.0.0.0:4200\"},\"EmberENV\":{\"FEATURES\":{}},\"APP\":{\"rootElement\":\"#main-rendered-content\",\"LOG_ACTIVE_GENERATION\":true,\"LOG_VIEW_LOOKUPS\":true},\"simple-auth\":{\"routeAfterAuthentication\":\"home.index\",\"routeIfAlreadyAuthenticated\":\"home.index\",\"authenticationRoute\":\"login\",\"sessionPropertyName\":\"session\",\"authorizer\":\"authorizer:myax\",\"serverTokenEndpoint\":\"http://0.0.0.0:4200/api/v1/session/\",\"store\":\"simple-auth-session-store:local-storage\",\"crossOriginWhitelist\":[\"http://0.0.0.0:4200\"]},\"contentSecurityPolicyHeader\":\"Content-Security-Policy\",\"contentSecurityPolicy\":{\"default-src\":\"'self' http://0.0.0.0:4200\",\"script-src\":\"'self' 'unsafe-eval'\",\"font-src\":\"'self'\",\"connect-src\":\"'self'\",\"img-src\":\"'self'\",\"style-src\":\"'self'\",\"media-src\":\"'self'\"},\"exportApplicationGlobal\":true}};\n});\n\nif (runningTests) {\n  require(\"morgana/tests/test-helper\");\n} else {\n  require(\"morgana/app\")[\"default\"].create({\"rootElement\":\"#main-rendered-content\",\"LOG_ACTIVE_GENERATION\":true,\"LOG_VIEW_LOOKUPS\":true});\n}\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnlBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzhCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClGA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnhRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxptKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdhHA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnjOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACprOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClhzNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbhKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACndA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdbA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzfile":"morgana.js"}